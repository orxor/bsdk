<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:u="clr-namespace:BinaryStudio.PlatformUI">
  <Style TargetType="{x:Type ListBoxItem}"  x:Key="{x:Static u:Theme.ListBoxItemStyleKey}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Padding" Value="4,1"/>
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static u:Theme.WindowBrushResourceKey}}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static u:Theme.WindowBrushResourceKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static u:Theme.ControlTextBrushResourceKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid>
            <Rectangle Fill="White" IsHitTestVisible="False"/>
            <Border BorderBrush="{TemplateBinding BorderBrush}" IsHitTestVisible="False"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="true" Name="InnerBorder"/>
            <Border BorderBrush="Transparent"
                    BorderThickness="1"
                    Background="Transparent"
                    SnapsToDevicePixels="true" Name="OuterBorder"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected"  Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Property="Background"  Value="{DynamicResource {x:Static u:Theme.HighlightBrushResourceKey}}"/>
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static u:Theme.HighlightBrushResourceKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static u:Theme.HighlightTextBrushResourceKey}}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected"  Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Property="Background"  Value="{DynamicResource {x:Static u:Theme.HighlightLightBrushResourceKey}}"/>
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static u:Theme.HighlightLightBrushResourceKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static u:Theme.HighlightTextBrushResourceKey}}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                <Condition Property="IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Property="BorderBrush"     Value="{DynamicResource {x:Static u:Theme.ControlDarkBrushResourceKey}}"/>
              <Setter TargetName="OuterBorder" Property="Background"      Value="{DynamicResource {x:Static u:Theme.InactiveBorderBrushResourceKey}}"/>
              <Setter TargetName="OuterBorder" Property="BorderThickness" Value="0,1,1,1"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static u:Theme.ControlTextBrushResourceKey}}"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                <Condition Property="IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Property="Background"  Value="{DynamicResource {x:Static u:Theme.HighlightBrushResourceKey}}"/>
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static u:Theme.HighlightBrushResourceKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static u:Theme.HighlightTextBrushResourceKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static u:Theme.GrayTextBrushResourceKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListBox}"      x:Key="{x:Static u:Theme.ListBoxStyleKey}">
    <Setter Property="Background" Value="{DynamicResource {x:Static u:Theme.WindowBrushResourceKey}}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static u:Theme.ControlDarkBrushResourceKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static u:Theme.ControlTextBrushResourceKey}}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <ScrollViewer Focusable="false" Margin="{TemplateBinding Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static u:Theme.ControlBrushResourceKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static u:Theme.GrayTextBrushResourceKey}}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsGrouping" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static u:Theme.HighlightBrushResourceKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>