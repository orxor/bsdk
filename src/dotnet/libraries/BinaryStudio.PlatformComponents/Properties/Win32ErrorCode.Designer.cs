//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BinaryStudio.PlatformComponents.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Win32ErrorCode {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Win32ErrorCode() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BinaryStudio.PlatformComponents.Properties.Win32ErrorCode", typeof(Win32ErrorCode).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS automatic zone already exists..
        /// </summary>
        internal static string DNS_ERROR_AUTOZONE_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("DNS_ERROR_AUTOZONE_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone transfer failed..
        /// </summary>
        internal static string DNS_ERROR_AXFR {
            get {
                return ResourceManager.GetString("DNS_ERROR_AXFR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not allowed while the DNS server is loading zones in the background. Please try again later..
        /// </summary>
        internal static string DNS_ERROR_BACKGROUND_LOADING {
            get {
                return ResourceManager.GetString("DNS_ERROR_BACKGROUND_LOADING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad DNS packet..
        /// </summary>
        internal static string DNS_ERROR_BAD_PACKET {
            get {
                return ResourceManager.GetString("DNS_ERROR_BAD_PACKET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DNS server could not find a set of root hints..
        /// </summary>
        internal static string DNS_ERROR_CANNOT_FIND_ROOT_HINTS {
            get {
                return ResourceManager.GetString("DNS_ERROR_CANNOT_FIND_ROOT_HINTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A CNAME record already exists for given name..
        /// </summary>
        internal static string DNS_ERROR_CNAME_COLLISION {
            get {
                return ResourceManager.GetString("DNS_ERROR_CNAME_COLLISION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CNAME loop detected..
        /// </summary>
        internal static string DNS_ERROR_CNAME_LOOP {
            get {
                return ResourceManager.GetString("DNS_ERROR_CNAME_LOOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open datafile for DNS zone..
        /// </summary>
        internal static string DNS_ERROR_DATAFILE_OPEN_FAILURE {
            get {
                return ResourceManager.GetString("DNS_ERROR_DATAFILE_OPEN_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure while reading datafile for DNS zone..
        /// </summary>
        internal static string DNS_ERROR_DATAFILE_PARSING {
            get {
                return ResourceManager.GetString("DNS_ERROR_DATAFILE_PARSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This DNS server is already enlisted in the specified directory partition..
        /// </summary>
        internal static string DNS_ERROR_DP_ALREADY_ENLISTED {
            get {
                return ResourceManager.GetString("DNS_ERROR_DP_ALREADY_ENLISTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory partition already exists..
        /// </summary>
        internal static string DNS_ERROR_DP_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("DNS_ERROR_DP_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory partition does not exist..
        /// </summary>
        internal static string DNS_ERROR_DP_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("DNS_ERROR_DP_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation failed because the domain naming master FSMO role could not be reached. The domain controller holding the domain naming master FSMO role is down or unable to service the request or is not running Windows Server 2003 or later..
        /// </summary>
        internal static string DNS_ERROR_DP_FSMO_ERROR {
            get {
                return ResourceManager.GetString("DNS_ERROR_DP_FSMO_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory partition is not available at this time. Please wait a few minutes and try again..
        /// </summary>
        internal static string DNS_ERROR_DP_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("DNS_ERROR_DP_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This DNS server is not enlisted in the specified directory partition..
        /// </summary>
        internal static string DNS_ERROR_DP_NOT_ENLISTED {
            get {
                return ResourceManager.GetString("DNS_ERROR_DP_NOT_ENLISTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service is unavailable..
        /// </summary>
        internal static string DNS_ERROR_DS_UNAVAILABLE {
            get {
                return ResourceManager.GetString("DNS_ERROR_DS_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone already exists in the directory service..
        /// </summary>
        internal static string DNS_ERROR_DS_ZONE_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("DNS_ERROR_DS_ZONE_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is too large for this parameter..
        /// </summary>
        internal static string DNS_ERROR_DWORD_VALUE_TOO_LARGE {
            get {
                return ResourceManager.GetString("DNS_ERROR_DWORD_VALUE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is too small for this parameter..
        /// </summary>
        internal static string DNS_ERROR_DWORD_VALUE_TOO_SMALL {
            get {
                return ResourceManager.GetString("DNS_ERROR_DWORD_VALUE_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to write datafile for DNS zone..
        /// </summary>
        internal static string DNS_ERROR_FILE_WRITEBACK_FAILED {
            get {
                return ResourceManager.GetString("DNS_ERROR_FILE_WRITEBACK_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A conditional forwarding zone already exists for that name..
        /// </summary>
        internal static string DNS_ERROR_FORWARDER_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("DNS_ERROR_FORWARDER_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DNS server found root hints but they were not consistent across all adapters..
        /// </summary>
        internal static string DNS_ERROR_INCONSISTENT_ROOT_HINTS {
            get {
                return ResourceManager.GetString("DNS_ERROR_INCONSISTENT_ROOT_HINTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid datafile name for DNS zone..
        /// </summary>
        internal static string DNS_ERROR_INVALID_DATAFILE_NAME {
            get {
                return ResourceManager.GetString("DNS_ERROR_INVALID_DATAFILE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid IP address..
        /// </summary>
        internal static string DNS_ERROR_INVALID_IP_ADDRESS {
            get {
                return ResourceManager.GetString("DNS_ERROR_INVALID_IP_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name contains an invalid character..
        /// </summary>
        internal static string DNS_ERROR_INVALID_NAME_CHAR {
            get {
                return ResourceManager.GetString("DNS_ERROR_INVALID_NAME_CHAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid property..
        /// </summary>
        internal static string DNS_ERROR_INVALID_PROPERTY {
            get {
                return ResourceManager.GetString("DNS_ERROR_INVALID_PROPERTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid DNS type..
        /// </summary>
        internal static string DNS_ERROR_INVALID_TYPE {
            get {
                return ResourceManager.GetString("DNS_ERROR_INVALID_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operation for DNS zone..
        /// </summary>
        internal static string DNS_ERROR_INVALID_ZONE_OPERATION {
            get {
                return ResourceManager.GetString("DNS_ERROR_INVALID_ZONE_OPERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid DNS zone type..
        /// </summary>
        internal static string DNS_ERROR_INVALID_ZONE_TYPE {
            get {
                return ResourceManager.GetString("DNS_ERROR_INVALID_ZONE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name does not exist..
        /// </summary>
        internal static string DNS_ERROR_NAME_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("DNS_ERROR_NAME_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name not in DNS zone..
        /// </summary>
        internal static string DNS_ERROR_NAME_NOT_IN_ZONE {
            get {
                return ResourceManager.GetString("DNS_ERROR_NAME_NOT_IN_ZONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NBTSTAT initialization call failed..
        /// </summary>
        internal static string DNS_ERROR_NBSTAT_INIT_FAILED {
            get {
                return ResourceManager.GetString("DNS_ERROR_NBSTAT_INIT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Need secondary IP address..
        /// </summary>
        internal static string DNS_ERROR_NEED_SECONDARY_ADDRESSES {
            get {
                return ResourceManager.GetString("DNS_ERROR_NEED_SECONDARY_ADDRESSES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Need WINS servers..
        /// </summary>
        internal static string DNS_ERROR_NEED_WINS_SERVERS {
            get {
                return ResourceManager.GetString("DNS_ERROR_NEED_WINS_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS server not creating or reading the boot file for the directory service integrated DNS zone..
        /// </summary>
        internal static string DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE {
            get {
                return ResourceManager.GetString("DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create DNS cache data..
        /// </summary>
        internal static string DNS_ERROR_NO_CREATE_CACHE_DATA {
            get {
                return ResourceManager.GetString("DNS_ERROR_NO_CREATE_CACHE_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No DNS servers configured for local system..
        /// </summary>
        internal static string DNS_ERROR_NO_DNS_SERVERS {
            get {
                return ResourceManager.GetString("DNS_ERROR_NO_DNS_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No DNS packet..
        /// </summary>
        internal static string DNS_ERROR_NO_PACKET {
            get {
                return ResourceManager.GetString("DNS_ERROR_NO_PACKET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TCP/IP network protocol not installed..
        /// </summary>
        internal static string DNS_ERROR_NO_TCPIP {
            get {
                return ResourceManager.GetString("DNS_ERROR_NO_TCPIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone information not available..
        /// </summary>
        internal static string DNS_ERROR_NO_ZONE_INFO {
            get {
                return ResourceManager.GetString("DNS_ERROR_NO_ZONE_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node creation failure in DNS..
        /// </summary>
        internal static string DNS_ERROR_NODE_CREATION_FAILED {
            get {
                return ResourceManager.GetString("DNS_ERROR_NODE_CREATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node is a CNAME DNS record..
        /// </summary>
        internal static string DNS_ERROR_NODE_IS_CNAME {
            get {
                return ResourceManager.GetString("DNS_ERROR_NODE_IS_CNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name does not comply with RFC specifications..
        /// </summary>
        internal static string DNS_ERROR_NON_RFC_NAME {
            get {
                return ResourceManager.GetString("DNS_ERROR_NON_RFC_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation requested is not permitted on against a DNS server running on a read-only DC..
        /// </summary>
        internal static string DNS_ERROR_NOT_ALLOWED_ON_RODC {
            get {
                return ResourceManager.GetString("DNS_ERROR_NOT_ALLOWED_ON_RODC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation requested is not permitted on a DNS root server..
        /// </summary>
        internal static string DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER {
            get {
                return ResourceManager.GetString("DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The record could not be created because this part of the DNS namespace has been delegated to another server..
        /// </summary>
        internal static string DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION {
            get {
                return ResourceManager.GetString("DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record for given name and type is not unique..
        /// </summary>
        internal static string DNS_ERROR_NOT_UNIQUE {
            get {
                return ResourceManager.GetString("DNS_ERROR_NOT_UNIQUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name is entirely numeric..
        /// </summary>
        internal static string DNS_ERROR_NUMERIC_NAME {
            get {
                return ResourceManager.GetString("DNS_ERROR_NUMERIC_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary DNS zone requires datafile..
        /// </summary>
        internal static string DNS_ERROR_PRIMARY_REQUIRES_DATAFILE {
            get {
                return ResourceManager.GetString("DNS_ERROR_PRIMARY_REQUIRES_DATAFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS error, check rcode..
        /// </summary>
        internal static string DNS_ERROR_RCODE {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS bad key..
        /// </summary>
        internal static string DNS_ERROR_RCODE_BADKEY {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_BADKEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS signature failed to verify..
        /// </summary>
        internal static string DNS_ERROR_RCODE_BADSIG {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_BADSIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS signature validity expired..
        /// </summary>
        internal static string DNS_ERROR_RCODE_BADTIME {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_BADTIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS server unable to interpret format..
        /// </summary>
        internal static string DNS_ERROR_RCODE_FORMAT_ERROR {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_FORMAT_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name does not exist..
        /// </summary>
        internal static string DNS_ERROR_RCODE_NAME_ERROR {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_NAME_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS request not supported by name server..
        /// </summary>
        internal static string DNS_ERROR_RCODE_NOT_IMPLEMENTED {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_NOT_IMPLEMENTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS server not authoritative for zone..
        /// </summary>
        internal static string DNS_ERROR_RCODE_NOTAUTH {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_NOTAUTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name in update or prereq is not in zone..
        /// </summary>
        internal static string DNS_ERROR_RCODE_NOTZONE {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_NOTZONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS RR set that ought to exist, does not exist..
        /// </summary>
        internal static string DNS_ERROR_RCODE_NXRRSET {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_NXRRSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS operation refused..
        /// </summary>
        internal static string DNS_ERROR_RCODE_REFUSED {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_REFUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS server failure..
        /// </summary>
        internal static string DNS_ERROR_RCODE_SERVER_FAILURE {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_SERVER_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name that ought not exist, does exist..
        /// </summary>
        internal static string DNS_ERROR_RCODE_YXDOMAIN {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_YXDOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS RR set that ought not exist, does exist..
        /// </summary>
        internal static string DNS_ERROR_RCODE_YXRRSET {
            get {
                return ResourceManager.GetString("DNS_ERROR_RCODE_YXRRSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS record already exists..
        /// </summary>
        internal static string DNS_ERROR_RECORD_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("DNS_ERROR_RECORD_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS record does not exist..
        /// </summary>
        internal static string DNS_ERROR_RECORD_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("DNS_ERROR_RECORD_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS record format error..
        /// </summary>
        internal static string DNS_ERROR_RECORD_FORMAT {
            get {
                return ResourceManager.GetString("DNS_ERROR_RECORD_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record only at DNS zone root..
        /// </summary>
        internal static string DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT {
            get {
                return ResourceManager.GetString("DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS record timed out..
        /// </summary>
        internal static string DNS_ERROR_RECORD_TIMED_OUT {
            get {
                return ResourceManager.GetString("DNS_ERROR_RECORD_TIMED_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secondary DNS zone data error..
        /// </summary>
        internal static string DNS_ERROR_SECONDARY_DATA {
            get {
                return ResourceManager.GetString("DNS_ERROR_SECONDARY_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secondary DNS zone requires master IP address..
        /// </summary>
        internal static string DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP {
            get {
                return ResourceManager.GetString("DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid delete of start of authority (SOA).
        /// </summary>
        internal static string DNS_ERROR_SOA_DELETE_INVALID {
            get {
                return ResourceManager.GetString("DNS_ERROR_SOA_DELETE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try DNS operation again later..
        /// </summary>
        internal static string DNS_ERROR_TRY_AGAIN_LATER {
            get {
                return ResourceManager.GetString("DNS_ERROR_TRY_AGAIN_LATER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown DNS record type..
        /// </summary>
        internal static string DNS_ERROR_UNKNOWN_RECORD_TYPE {
            get {
                return ResourceManager.GetString("DNS_ERROR_UNKNOWN_RECORD_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsecured DNS packet..
        /// </summary>
        internal static string DNS_ERROR_UNSECURE_PACKET {
            get {
                return ResourceManager.GetString("DNS_ERROR_UNSECURE_PACKET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WINS initialization failed..
        /// </summary>
        internal static string DNS_ERROR_WINS_INIT_FAILED {
            get {
                return ResourceManager.GetString("DNS_ERROR_WINS_INIT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone already exists..
        /// </summary>
        internal static string DNS_ERROR_ZONE_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid DNS zone configuration..
        /// </summary>
        internal static string DNS_ERROR_ZONE_CONFIGURATION_ERROR {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_CONFIGURATION_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone creation failed..
        /// </summary>
        internal static string DNS_ERROR_ZONE_CREATION_FAILED {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_CREATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone does not exist..
        /// </summary>
        internal static string DNS_ERROR_ZONE_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone has no Name Server (NS) record..
        /// </summary>
        internal static string DNS_ERROR_ZONE_HAS_NO_NS_RECORDS {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_HAS_NO_NS_RECORDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone has no start of authority (SOA) record..
        /// </summary>
        internal static string DNS_ERROR_ZONE_HAS_NO_SOA_RECORD {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_HAS_NO_SOA_RECORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot be performed because this zone is shut down..
        /// </summary>
        internal static string DNS_ERROR_ZONE_IS_SHUTDOWN {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_IS_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone is locked..
        /// </summary>
        internal static string DNS_ERROR_ZONE_LOCKED {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS zone not secondary..
        /// </summary>
        internal static string DNS_ERROR_ZONE_NOT_SECONDARY {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_NOT_SECONDARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This zone must be configured with one or more master DNS server IP addresses..
        /// </summary>
        internal static string DNS_ERROR_ZONE_REQUIRES_MASTER_IP {
            get {
                return ResourceManager.GetString("DNS_ERROR_ZONE_REQUIRES_MASTER_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added local WINS server..
        /// </summary>
        internal static string DNS_INFO_ADDED_LOCAL_WINS {
            get {
                return ResourceManager.GetString("DNS_INFO_ADDED_LOCAL_WINS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS AXFR (zone transfer) complete..
        /// </summary>
        internal static string DNS_INFO_AXFR_COMPLETE {
            get {
                return ResourceManager.GetString("DNS_INFO_AXFR_COMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No records found for given DNS query..
        /// </summary>
        internal static string DNS_INFO_NO_RECORDS {
            get {
                return ResourceManager.GetString("DNS_INFO_NO_RECORDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secure update call needs to continue update request..
        /// </summary>
        internal static string DNS_STATUS_CONTINUE_NEEDED {
            get {
                return ResourceManager.GetString("DNS_STATUS_CONTINUE_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name is dotted (multi-label)..
        /// </summary>
        internal static string DNS_STATUS_DOTTED_NAME {
            get {
                return ResourceManager.GetString("DNS_STATUS_DOTTED_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name is a fully-qualified DNS name..
        /// </summary>
        internal static string DNS_STATUS_FQDN {
            get {
                return ResourceManager.GetString("DNS_STATUS_FQDN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS name is a single-part name..
        /// </summary>
        internal static string DNS_STATUS_SINGLE_PART_NAME {
            get {
                return ResourceManager.GetString("DNS_STATUS_SINGLE_PART_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DNS domain was undeleted..
        /// </summary>
        internal static string DNS_WARNING_DOMAIN_UNDELETED {
            get {
                return ResourceManager.GetString("DNS_WARNING_DOMAIN_UNDELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create pointer (PTR) record..
        /// </summary>
        internal static string DNS_WARNING_PTR_CREATE_FAILED {
            get {
                return ResourceManager.GetString("DNS_WARNING_PTR_CREATE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint mapper database entry could not be created..
        /// </summary>
        internal static string EPT_S_CANT_CREATE {
            get {
                return ResourceManager.GetString("EPT_S_CANT_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server endpoint cannot perform the operation..
        /// </summary>
        internal static string EPT_S_CANT_PERFORM_OP {
            get {
                return ResourceManager.GetString("EPT_S_CANT_PERFORM_OP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry is invalid..
        /// </summary>
        internal static string EPT_S_INVALID_ENTRY {
            get {
                return ResourceManager.GetString("EPT_S_INVALID_ENTRY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no more endpoints available from the endpoint mapper..
        /// </summary>
        internal static string EPT_S_NOT_REGISTERED {
            get {
                return ResourceManager.GetString("EPT_S_NOT_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid hibernation file has been invalidated and should be abandoned..
        /// </summary>
        internal static string ERROR_ABANDON_HIBERFILE {
            get {
                return ResourceManager.GetString("ERROR_ABANDON_HIBERFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR_ABANDONED_WAIT_0.
        /// </summary>
        internal static string ERROR_ABANDONED_WAIT_0 {
            get {
                return ResourceManager.GetString("ERROR_ABANDONED_WAIT_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred in the ABIOS subsystem..
        /// </summary>
        internal static string ERROR_ABIOS_ERROR {
            get {
                return ResourceManager.GetString("ERROR_ABIOS_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to %1 is monitored by policy rule %2..
        /// </summary>
        internal static string ERROR_ACCESS_AUDIT_BY_POLICY {
            get {
                return ResourceManager.GetString("ERROR_ACCESS_AUDIT_BY_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access is denied..
        /// </summary>
        internal static string ERROR_ACCESS_DENIED {
            get {
                return ResourceManager.GetString("ERROR_ACCESS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program is blocked by group policy. For more information, contact your system administrator..
        /// </summary>
        internal static string ERROR_ACCESS_DISABLED_BY_POLICY {
            get {
                return ResourceManager.GetString("ERROR_ACCESS_DISABLED_BY_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to %1 has been restricted by your Administrator by policy rule %2..
        /// </summary>
        internal static string ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY {
            get {
                return ResourceManager.GetString("ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows cannot open this program since it has been disabled..
        /// </summary>
        internal static string ERROR_ACCESS_DISABLED_WEBBLADE {
            get {
                return ResourceManager.GetString("ERROR_ACCESS_DISABLED_WEBBLADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows cannot open this program because the license enforcement system has been tampered with or become corrupted..
        /// </summary>
        internal static string ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER {
            get {
                return ResourceManager.GetString("ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user can&apos;t sign in because this account is currently disabled..
        /// </summary>
        internal static string ERROR_ACCOUNT_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_ACCOUNT_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s account has expired..
        /// </summary>
        internal static string ERROR_ACCOUNT_EXPIRED {
            get {
                return ResourceManager.GetString("ERROR_ACCOUNT_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The referenced account is currently locked out and may not be logged on to..
        /// </summary>
        internal static string ERROR_ACCOUNT_LOCKED_OUT {
            get {
                return ResourceManager.GetString("ERROR_ACCOUNT_LOCKED_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account restrictions are preventing this user from signing in. For example: blank passwords aren&apos;t allowed, sign-in times are limited, or a policy restriction has been enforced..
        /// </summary>
        internal static string ERROR_ACCOUNT_RESTRICTION {
            get {
                return ResourceManager.GetString("ERROR_ACCOUNT_RESTRICTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred in the ACPI subsystem..
        /// </summary>
        internal static string ERROR_ACPI_ERROR {
            get {
                return ResourceManager.GetString("ERROR_ACPI_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation has already been reset the maximum number of times for this installation. Your activation timer will not be cleared..
        /// </summary>
        internal static string ERROR_ACTIVATION_COUNT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_ACTIVATION_COUNT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A network adapter hardware error occurred..
        /// </summary>
        internal static string ERROR_ADAP_HDW_ERR {
            get {
                return ResourceManager.GetString("ERROR_ADAP_HDW_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network transport endpoint already has an address associated with it..
        /// </summary>
        internal static string ERROR_ADDRESS_ALREADY_ASSOCIATED {
            get {
                return ResourceManager.GetString("ERROR_ADDRESS_ALREADY_ASSOCIATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An address has not yet been associated with the network endpoint..
        /// </summary>
        internal static string ERROR_ADDRESS_NOT_ASSOCIATED {
            get {
                return ResourceManager.GetString("ERROR_ADDRESS_NOT_ASSOCIATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An advanced installer failed during setup or servicing..
        /// </summary>
        internal static string ERROR_ADVANCED_INSTALLER_FAILED {
            get {
                return ResourceManager.GetString("ERROR_ADVANCED_INSTALLER_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified local group already exists..
        /// </summary>
        internal static string ERROR_ALIAS_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_ALIAS_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All cluster nodes must be running to perform this operation..
        /// </summary>
        internal static string ERROR_ALL_NODES_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_ALL_NODES_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The total delegated trust creation quota has been exceeded..
        /// </summary>
        internal static string ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bucket array must be grown. Retry transaction after doing so..
        /// </summary>
        internal static string ERROR_ALLOCATE_BUCKET {
            get {
                return ResourceManager.GetString("ERROR_ALLOCATE_BUCKET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more memory is available for security information updates..
        /// </summary>
        internal static string ERROR_ALLOTTED_SPACE_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_ALLOTTED_SPACE_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local device name is already in use..
        /// </summary>
        internal static string ERROR_ALREADY_ASSIGNED {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_ASSIGNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a file when that file already exists..
        /// </summary>
        internal static string ERROR_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current thread has already been converted to a fiber..
        /// </summary>
        internal static string ERROR_ALREADY_FIBER {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_FIBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to perform an initialization operation when initialization has already been completed..
        /// </summary>
        internal static string ERROR_ALREADY_INITIALIZED {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_INITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service is already registered..
        /// </summary>
        internal static string ERROR_ALREADY_REGISTERED {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system is currently running with the last-known-good configuration..
        /// </summary>
        internal static string ERROR_ALREADY_RUNNING_LKG {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_RUNNING_LKG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current thread has already been converted from a fiber..
        /// </summary>
        internal static string ERROR_ALREADY_THREAD {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_THREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified printer handle is already being waited on.
        /// </summary>
        internal static string ERROR_ALREADY_WAITING {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_WAITING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR_ALREADY_WIN32.
        /// </summary>
        internal static string ERROR_ALREADY_WIN32 {
            get {
                return ResourceManager.GetString("ERROR_ALREADY_WIN32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested system device cannot be identified due to multiple indistinguishable devices potentially matching the identification criteria..
        /// </summary>
        internal static string ERROR_AMBIGUOUS_SYSTEM_DEVICE {
            get {
                return ResourceManager.GetString("ERROR_AMBIGUOUS_SYSTEM_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Application Error} The application was unable to start correctly (0x%lx). Click OK to close the application..
        /// </summary>
        internal static string ERROR_APP_INIT_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_APP_INIT_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified program is not a Windows or MS-DOS program..
        /// </summary>
        internal static string ERROR_APP_WRONG_OS {
            get {
                return ResourceManager.GetString("ERROR_APP_WRONG_OS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AppHelp dialog canceled thus preventing the application from starting..
        /// </summary>
        internal static string ERROR_APPHELP_BLOCK {
            get {
                return ResourceManager.GetString("ERROR_APPHELP_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The arbiter has deferred arbitration of these resources to its parent.
        /// </summary>
        internal static string ERROR_ARBITRATION_UNHANDLED {
            get {
                return ResourceManager.GetString("ERROR_ARBITRATION_UNHANDLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage control blocks were destroyed..
        /// </summary>
        internal static string ERROR_ARENA_TRASHED {
            get {
                return ResourceManager.GetString("ERROR_ARENA_TRASHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arithmetic result exceeded 32 bits..
        /// </summary>
        internal static string ERROR_ARITHMETIC_OVERFLOW {
            get {
                return ResourceManager.GetString("ERROR_ARITHMETIC_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An assertion failure has occurred..
        /// </summary>
        internal static string ERROR_ASSERTION_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_ASSERTION_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system does not support atomic changes to the lock type..
        /// </summary>
        internal static string ERROR_ATOMIC_LOCKS_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_ATOMIC_LOCKS_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Audit Failed} An attempt to generate a security audit failed..
        /// </summary>
        internal static string ERROR_AUDIT_FAILED {
            get {
                return ResourceManager.GetString("ERROR_AUDIT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The computer you are signing into is protected by an authentication firewall. The specified account is not allowed to authenticate to the computer..
        /// </summary>
        internal static string ERROR_AUTHENTICATION_FIREWALL_FAILED {
            get {
                return ResourceManager.GetString("ERROR_AUTHENTICATION_FIREWALL_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run this application program..
        /// </summary>
        internal static string ERROR_AUTODATASEG_EXCEEDS_64k {
            get {
                return ResourceManager.GetString("ERROR_AUTODATASEG_EXCEEDS_64k", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is only allowed for the Primary Domain Controller of the domain..
        /// </summary>
        internal static string ERROR_BACKUP_CONTROLLER {
            get {
                return ResourceManager.GetString("ERROR_BACKUP_CONTROLLER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data provider was not able to interpret the flags set for a column binding in an accessor..
        /// </summary>
        internal static string ERROR_BAD_ACCESSOR_FLAGS {
            get {
                return ResourceManager.GetString("ERROR_BAD_ACCESSOR_FLAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more arguments are not correct..
        /// </summary>
        internal static string ERROR_BAD_ARGUMENTS {
            get {
                return ResourceManager.GetString("ERROR_BAD_ARGUMENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device does not recognize the command..
        /// </summary>
        internal static string ERROR_BAD_COMMAND {
            get {
                return ResourceManager.GetString("ERROR_BAD_COMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified buffer contains ill-formed data..
        /// </summary>
        internal static string ERROR_BAD_COMPRESSION_BUFFER {
            get {
                return ResourceManager.GetString("ERROR_BAD_COMPRESSION_BUFFER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration data for this product is corrupt. Contact your support personnel..
        /// </summary>
        internal static string ERROR_BAD_CONFIGURATION {
            get {
                return ResourceManager.GetString("ERROR_BAD_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Invalid Current Directory} The process cannot switch to the startup current directory %hs. Select OK to set current directory to %hs, or select CANCEL to exit..
        /// </summary>
        internal static string ERROR_BAD_CURRENT_DIRECTORY {
            get {
                return ResourceManager.GetString("ERROR_BAD_CURRENT_DIRECTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A security descriptor is not in the right format (absolute or self-relative)..
        /// </summary>
        internal static string ERROR_BAD_DESCRIPTOR_FORMAT {
            get {
                return ResourceManager.GetString("ERROR_BAD_DESCRIPTOR_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network resource type is not correct..
        /// </summary>
        internal static string ERROR_BAD_DEV_TYPE {
            get {
                return ResourceManager.GetString("ERROR_BAD_DEV_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified device name is invalid..
        /// </summary>
        internal static string ERROR_BAD_DEVICE {
            get {
                return ResourceManager.GetString("ERROR_BAD_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Invalid DLL Entrypoint} The dynamic link library %hs is not written correctly. The stack pointer has been left in an inconsistent state. The entrypoint should be declared as WINAPI or STDCALL. Select YES to fail the DLL load. Select NO to continue execution. Selecting NO may cause the application to operate incorrectly..
        /// </summary>
        internal static string ERROR_BAD_DLL_ENTRYPOINT {
            get {
                return ResourceManager.GetString("ERROR_BAD_DLL_ENTRYPOINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified driver is invalid..
        /// </summary>
        internal static string ERROR_BAD_DRIVER {
            get {
                return ResourceManager.GetString("ERROR_BAD_DRIVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system does not support the command requested..
        /// </summary>
        internal static string ERROR_BAD_DRIVER_LEVEL {
            get {
                return ResourceManager.GetString("ERROR_BAD_DRIVER_LEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment is incorrect..
        /// </summary>
        internal static string ERROR_BAD_ENVIRONMENT {
            get {
                return ResourceManager.GetString("ERROR_BAD_ENVIRONMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %1 is not a valid Win32 application..
        /// </summary>
        internal static string ERROR_BAD_EXE_FORMAT {
            get {
                return ResourceManager.GetString("ERROR_BAD_EXE_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file type being saved or retrieved has been blocked..
        /// </summary>
        internal static string ERROR_BAD_FILE_TYPE {
            get {
                return ResourceManager.GetString("ERROR_BAD_FILE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to load a program with an incorrect format..
        /// </summary>
        internal static string ERROR_BAD_FORMAT {
            get {
                return ResourceManager.GetString("ERROR_BAD_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A malformed function table was encountered during an unwind operation..
        /// </summary>
        internal static string ERROR_BAD_FUNCTION_TABLE {
            get {
                return ResourceManager.GetString("ERROR_BAD_FUNCTION_TABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either a required impersonation level was not provided, or the provided impersonation level is invalid..
        /// </summary>
        internal static string ERROR_BAD_IMPERSONATION_LEVEL {
            get {
                return ResourceManager.GetString("ERROR_BAD_IMPERSONATION_LEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inherited access control list (ACL) or access control entry (ACE) could not be built..
        /// </summary>
        internal static string ERROR_BAD_INHERITANCE_ACL {
            get {
                return ResourceManager.GetString("ERROR_BAD_INHERITANCE_ACL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program issued a command but the command length is incorrect..
        /// </summary>
        internal static string ERROR_BAD_LENGTH {
            get {
                return ResourceManager.GetString("ERROR_BAD_LENGTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logon session is not in a state that is consistent with the requested operation..
        /// </summary>
        internal static string ERROR_BAD_LOGON_SESSION_STATE {
            get {
                return ResourceManager.GetString("ERROR_BAD_LOGON_SESSION_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network name cannot be found..
        /// </summary>
        internal static string ERROR_BAD_NET_NAME {
            get {
                return ResourceManager.GetString("ERROR_BAD_NET_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified server cannot perform the requested operation..
        /// </summary>
        internal static string ERROR_BAD_NET_RESP {
            get {
                return ResourceManager.GetString("ERROR_BAD_NET_RESP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network path was not found..
        /// </summary>
        internal static string ERROR_BAD_NETPATH {
            get {
                return ResourceManager.GetString("ERROR_BAD_NETPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is invalid..
        /// </summary>
        internal static string ERROR_BAD_PATHNAME {
            get {
                return ResourceManager.GetString("ERROR_BAD_PATHNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pipe state is invalid..
        /// </summary>
        internal static string ERROR_BAD_PIPE {
            get {
                return ResourceManager.GetString("ERROR_BAD_PIPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network connection profile is corrupted..
        /// </summary>
        internal static string ERROR_BAD_PROFILE {
            get {
                return ResourceManager.GetString("ERROR_BAD_PROFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified network provider name is invalid..
        /// </summary>
        internal static string ERROR_BAD_PROVIDER {
            get {
                return ResourceManager.GetString("ERROR_BAD_PROVIDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL query syntax invalid or unsupported..
        /// </summary>
        internal static string ERROR_BAD_QUERY_SYNTAX {
            get {
                return ResourceManager.GetString("ERROR_BAD_QUERY_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recovery policy configured for this system contains invalid recovery certificate..
        /// </summary>
        internal static string ERROR_BAD_RECOVERY_POLICY {
            get {
                return ResourceManager.GetString("ERROR_BAD_RECOVERY_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote adapter is not compatible..
        /// </summary>
        internal static string ERROR_BAD_REM_ADAP {
            get {
                return ResourceManager.GetString("ERROR_BAD_REM_ADAP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Invalid Service Callback Entrypoint} The %hs service is not written correctly. The stack pointer has been left in an inconsistent state. The callback entrypoint should be declared as WINAPI or STDCALL. Selecting OK will cause the service to continue operation. However, the service process may operate incorrectly..
        /// </summary>
        internal static string ERROR_BAD_SERVICE_ENTRYPOINT {
            get {
                return ResourceManager.GetString("ERROR_BAD_SERVICE_ENTRYPOINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid or unaligned stack was encountered during an unwind operation..
        /// </summary>
        internal static string ERROR_BAD_STACK {
            get {
                return ResourceManager.GetString("ERROR_BAD_STACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The address for the thread ID is not correct..
        /// </summary>
        internal static string ERROR_BAD_THREADID_ADDR {
            get {
                return ResourceManager.GetString("ERROR_BAD_THREADID_ADDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the token is inappropriate for its attempted use..
        /// </summary>
        internal static string ERROR_BAD_TOKEN_TYPE {
            get {
                return ResourceManager.GetString("ERROR_BAD_TOKEN_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot find the device specified..
        /// </summary>
        internal static string ERROR_BAD_UNIT {
            get {
                return ResourceManager.GetString("ERROR_BAD_UNIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified user does not have a valid profile..
        /// </summary>
        internal static string ERROR_BAD_USER_PROFILE {
            get {
                return ResourceManager.GetString("ERROR_BAD_USER_PROFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The validation information class requested was invalid..
        /// </summary>
        internal static string ERROR_BAD_VALIDATION_CLASS {
            get {
                return ResourceManager.GetString("ERROR_BAD_VALIDATION_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration registry database is corrupt..
        /// </summary>
        internal static string ERROR_BADDB {
            get {
                return ResourceManager.GetString("ERROR_BADDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration registry key is invalid..
        /// </summary>
        internal static string ERROR_BADKEY {
            get {
                return ResourceManager.GetString("ERROR_BADKEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The iterator&apos;s start position is invalid..
        /// </summary>
        internal static string ERROR_BADSTARTPOSITION {
            get {
                return ResourceManager.GetString("ERROR_BADSTARTPOSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The beginning of the tape or a partition was encountered..
        /// </summary>
        internal static string ERROR_BEGINNING_OF_MEDIA {
            get {
                return ResourceManager.GetString("ERROR_BEGINNING_OF_MEDIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation occurred beyond the valid data length of the file..
        /// </summary>
        internal static string ERROR_BEYOND_VDL {
            get {
                return ResourceManager.GetString("ERROR_BEYOND_VDL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system BIOS failed to connect a system interrupt to the device or bus for which the device is connected..
        /// </summary>
        internal static string ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT {
            get {
                return ResourceManager.GetString("ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current boot has already been accepted for use as the last-known-good control set..
        /// </summary>
        internal static string ERROR_BOOT_ALREADY_ACCEPTED {
            get {
                return ResourceManager.GetString("ERROR_BOOT_ALREADY_ACCEPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pipe has been ended..
        /// </summary>
        internal static string ERROR_BROKEN_PIPE {
            get {
                return ResourceManager.GetString("ERROR_BROKEN_PIPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified buffer contains all zeros..
        /// </summary>
        internal static string ERROR_BUFFER_ALL_ZEROS {
            get {
                return ResourceManager.GetString("ERROR_BUFFER_ALL_ZEROS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file name is too long..
        /// </summary>
        internal static string ERROR_BUFFER_OVERFLOW {
            get {
                return ResourceManager.GetString("ERROR_BUFFER_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The I/O bus was reset..
        /// </summary>
        internal static string ERROR_BUS_RESET {
            get {
                return ResourceManager.GetString("ERROR_BUS_RESET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested resource is in use..
        /// </summary>
        internal static string ERROR_BUSY {
            get {
                return ResourceManager.GetString("ERROR_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot perform a JOIN or SUBST at this time..
        /// </summary>
        internal static string ERROR_BUSY_DRIVE {
            get {
                return ResourceManager.GetString("ERROR_BUSY_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cached page was locked during operation..
        /// </summary>
        internal static string ERROR_CACHE_PAGE_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_CACHE_PAGE_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This function is not supported on this system..
        /// </summary>
        internal static string ERROR_CALL_NOT_IMPLEMENTED {
            get {
                return ResourceManager.GetString("ERROR_CALL_NOT_IMPLEMENTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred in a user mode callback and the kernel callback frame should be removed..
        /// </summary>
        internal static string ERROR_CALLBACK_POP_STACK {
            get {
                return ResourceManager.GetString("ERROR_CALLBACK_POP_STACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An application-defined callback gave invalid data when called..
        /// </summary>
        internal static string ERROR_CALLBACK_SUPPLIED_INVALID_DATA {
            get {
                return ResourceManager.GetString("ERROR_CALLBACK_SUPPLIED_INVALID_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot complete this function..
        /// </summary>
        internal static string ERROR_CAN_NOT_COMPLETE {
            get {
                return ResourceManager.GetString("ERROR_CAN_NOT_COMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local WINS cannot be deleted..
        /// </summary>
        internal static string ERROR_CAN_NOT_DEL_LOCAL_WINS {
            get {
                return ResourceManager.GetString("ERROR_CAN_NOT_DEL_LOCAL_WINS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A lock request was not outstanding for the supplied cancel region..
        /// </summary>
        internal static string ERROR_CANCEL_VIOLATION {
            get {
                return ResourceManager.GetString("ERROR_CANCEL_VIOLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation was canceled by the user..
        /// </summary>
        internal static string ERROR_CANCELLED {
            get {
                return ResourceManager.GetString("ERROR_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transactional resource manager had too many transactions outstanding that could not be aborted. The transactional resource manger has been shut down..
        /// </summary>
        internal static string ERROR_CANNOT_ABORT_TRANSACTIONS {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_ABORT_TRANSACTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transactional resource manager cannot currently accept transacted work due to a transient condition such as low resources..
        /// </summary>
        internal static string ERROR_CANNOT_ACCEPT_TRANSACTED_WORK {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_ACCEPT_TRANSACTED_WORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The copy functions cannot be used..
        /// </summary>
        internal static string ERROR_CANNOT_COPY {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_COPY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure actions can only be set for Win32 services, not for drivers..
        /// </summary>
        internal static string ERROR_CANNOT_DETECT_DRIVER_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_DETECT_DRIVER_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This service runs in the same process as the service control manager. Therefore, the service control manager cannot take action if this service&apos;s process terminates unexpectedly..
        /// </summary>
        internal static string ERROR_CANNOT_DETECT_PROCESS_ABORT {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_DETECT_PROCESS_ABORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file is open for modification in an unresolved transaction and may be opened for execute only by a transacted reader..
        /// </summary>
        internal static string ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find window class..
        /// </summary>
        internal static string ERROR_CANNOT_FIND_WND_CLASS {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_FIND_WND_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to impersonate using a named pipe until data has been read from that pipe..
        /// </summary>
        internal static string ERROR_CANNOT_IMPERSONATE {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_IMPERSONATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Registry File Failure} The registry cannot load the hive (file): %hs or its log or alternate. It is corrupt, absent, or not writable..
        /// </summary>
        internal static string ERROR_CANNOT_LOAD_REGISTRY_FILE {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_LOAD_REGISTRY_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory or file cannot be created..
        /// </summary>
        internal static string ERROR_CANNOT_MAKE {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_MAKE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open the network connection profile..
        /// </summary>
        internal static string ERROR_CANNOT_OPEN_PROFILE {
            get {
                return ResourceManager.GetString("ERROR_CANNOT_OPEN_PROFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration information could not be read from the domain controller, either because the machine is unavailable, or access has been denied..
        /// </summary>
        internal static string ERROR_CANT_ACCESS_DOMAIN_INFO {
            get {
                return ResourceManager.GetString("ERROR_CANT_ACCESS_DOMAIN_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file cannot be accessed by the system..
        /// </summary>
        internal static string ERROR_CANT_ACCESS_FILE {
            get {
                return ResourceManager.GetString("ERROR_CANT_ACCESS_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot be performed because another transaction is depending on the fact that this property will not change..
        /// </summary>
        internal static string ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY {
            get {
                return ResourceManager.GetString("ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not possible to create any more miniversions for this stream..
        /// </summary>
        internal static string ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS {
            get {
                return ResourceManager.GetString("ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation would involve a single file with two transactional resource managers and is therefore not allowed..
        /// </summary>
        internal static string ERROR_CANT_CROSS_RM_BOUNDARY {
            get {
                return ResourceManager.GetString("ERROR_CANT_CROSS_RM_BOUNDARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last remaining item in this group or resource cannot be deleted..
        /// </summary>
        internal static string ERROR_CANT_DELETE_LAST_ITEM {
            get {
                return ResourceManager.GetString("ERROR_CANT_DELETE_LAST_ITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group may not be disabled..
        /// </summary>
        internal static string ERROR_CANT_DISABLE_MANDATORY {
            get {
                return ResourceManager.GetString("ERROR_CANT_DISABLE_MANDATORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A group marked use for deny only cannot be enabled..
        /// </summary>
        internal static string ERROR_CANT_ENABLE_DENY_ONLY {
            get {
                return ResourceManager.GetString("ERROR_CANT_ENABLE_DENY_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cluster node cannot be evicted from the cluster unless the node is down or it is the last node..
        /// </summary>
        internal static string ERROR_CANT_EVICT_ACTIVE_NODE {
            get {
                return ResourceManager.GetString("ERROR_CANT_EVICT_ACTIVE_NODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open an anonymous level security token..
        /// </summary>
        internal static string ERROR_CANT_OPEN_ANONYMOUS {
            get {
                return ResourceManager.GetString("ERROR_CANT_OPEN_ANONYMOUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not possible to open a miniversion with modify access..
        /// </summary>
        internal static string ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT {
            get {
                return ResourceManager.GetString("ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file can&apos;t be recovered because there is a handle still open on it..
        /// </summary>
        internal static string ERROR_CANT_RECOVER_WITH_HANDLE_OPEN {
            get {
                return ResourceManager.GetString("ERROR_CANT_RECOVER_WITH_HANDLE_OPEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the file cannot be resolved by the system..
        /// </summary>
        internal static string ERROR_CANT_RESOLVE_FILENAME {
            get {
                return ResourceManager.GetString("ERROR_CANT_RESOLVE_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that a thread attempted to terminate itself by default (called NtTerminateThread with NULL) and it was the last thread in the current process..
        /// </summary>
        internal static string ERROR_CANT_TERMINATE_SELF {
            get {
                return ResourceManager.GetString("ERROR_CANT_TERMINATE_SELF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used to indicate that an operation cannot continue without blocking for I/O..
        /// </summary>
        internal static string ERROR_CANT_WAIT {
            get {
                return ResourceManager.GetString("ERROR_CANT_WAIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data provider cannot fetch backwards through a result set..
        /// </summary>
        internal static string ERROR_CANTFETCHBACKWARDS {
            get {
                return ResourceManager.GetString("ERROR_CANTFETCHBACKWARDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration registry key could not be opened..
        /// </summary>
        internal static string ERROR_CANTOPEN {
            get {
                return ResourceManager.GetString("ERROR_CANTOPEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration registry key could not be read..
        /// </summary>
        internal static string ERROR_CANTREAD {
            get {
                return ResourceManager.GetString("ERROR_CANTREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data provider cannot scroll backwards through a result set..
        /// </summary>
        internal static string ERROR_CANTSCROLLBACKWARDS {
            get {
                return ResourceManager.GetString("ERROR_CANTSCROLLBACKWARDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration registry key could not be written..
        /// </summary>
        internal static string ERROR_CANTWRITE {
            get {
                return ResourceManager.GetString("ERROR_CANTWRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inserted CardBus device cannot be started because of a configuration error on &quot;%hs&quot;..
        /// </summary>
        internal static string ERROR_CARDBUS_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_CARDBUS_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking file system on %wZ.
        /// </summary>
        internal static string ERROR_CHECKING_FILE_SYSTEM {
            get {
                return ResourceManager.GetString("ERROR_CHECKING_FILE_SYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file must be checked out before saving changes..
        /// </summary>
        internal static string ERROR_CHECKOUT_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_CHECKOUT_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a stable subkey under a volatile parent key..
        /// </summary>
        internal static string ERROR_CHILD_MUST_BE_VOLATILE {
            get {
                return ResourceManager.GetString("ERROR_CHILD_MUST_BE_VOLATILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The %1 application cannot be run in Win32 mode..
        /// </summary>
        internal static string ERROR_CHILD_NOT_COMPLETE {
            get {
                return ResourceManager.GetString("ERROR_CHILD_NOT_COMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Child windows cannot have menus..
        /// </summary>
        internal static string ERROR_CHILD_WINDOW_MENU {
            get {
                return ResourceManager.GetString("ERROR_CHILD_WINDOW_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular service dependency was specified..
        /// </summary>
        internal static string ERROR_CIRCULAR_DEPENDENCY {
            get {
                return ResourceManager.GetString("ERROR_CIRCULAR_DEPENDENCY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class already exists..
        /// </summary>
        internal static string ERROR_CLASS_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_CLASS_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class does not exist..
        /// </summary>
        internal static string ERROR_CLASS_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("ERROR_CLASS_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class still has open windows..
        /// </summary>
        internal static string ERROR_CLASS_HAS_WINDOWS {
            get {
                return ResourceManager.GetString("ERROR_CLASS_HAS_WINDOWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cleaner cartridge is present in the tape library..
        /// </summary>
        internal static string ERROR_CLEANER_CARTRIDGE_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_CLEANER_CARTRIDGE_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cleaner cartridge has performed the maximum number of drive cleanings..
        /// </summary>
        internal static string ERROR_CLEANER_CARTRIDGE_SPENT {
            get {
                return ResourceManager.GetString("ERROR_CLEANER_CARTRIDGE_SPENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cleaner slot is not reserved..
        /// </summary>
        internal static string ERROR_CLEANER_SLOT_NOT_SET {
            get {
                return ResourceManager.GetString("ERROR_CLEANER_SLOT_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cleaner slot is already reserved..
        /// </summary>
        internal static string ERROR_CLEANER_SLOT_SET {
            get {
                return ResourceManager.GetString("ERROR_CLEANER_SLOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter(s) passed to the server in the client/server shared memory window were invalid. Too much data may have been put in the shared memory window..
        /// </summary>
        internal static string ERROR_CLIENT_SERVER_PARAMETERS_INVALID {
            get {
                return ResourceManager.GetString("ERROR_CLIENT_SERVER_PARAMETERS_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread does not have a clipboard open..
        /// </summary>
        internal static string ERROR_CLIPBOARD_NOT_OPEN {
            get {
                return ResourceManager.GetString("ERROR_CLIPBOARD_NOT_OPEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested clipping operation is not supported..
        /// </summary>
        internal static string ERROR_CLIPPING_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_CLIPPING_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster configuration action has already been committed..
        /// </summary>
        internal static string ERROR_CLUSCFG_ALREADY_COMMITTED {
            get {
                return ResourceManager.GetString("ERROR_CLUSCFG_ALREADY_COMMITTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster configuration action could not be rolled back..
        /// </summary>
        internal static string ERROR_CLUSCFG_ROLLBACK_FAILED {
            get {
                return ResourceManager.GetString("ERROR_CLUSCFG_ROLLBACK_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive letter assigned to a system disk on one node conflicted with the drive letter assigned to a disk on another node..
        /// </summary>
        internal static string ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cluster cannot be created with the specified cluster name because that cluster name is already in use. Specify a different name for the cluster..
        /// </summary>
        internal static string ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while deserializing a stream of cluster data..
        /// </summary>
        internal static string ERROR_CLUSTER_CANT_DESERIALIZE_DATA {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_CANT_DESERIALIZE_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The join operation failed because the cluster database sequence number has changed or is incompatible with the locker node. This may happen during a join operation if the cluster database was changing during the join..
        /// </summary>
        internal static string ERROR_CLUSTER_DATABASE_SEQMISMATCH {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_DATABASE_SEQMISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal cluster error occurred. A cluster database transaction was attempted while a transaction was already in progress..
        /// </summary>
        internal static string ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal cluster error occurred. There was an attempt to commit a cluster database transaction while no transaction was in progress..
        /// </summary>
        internal static string ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node was evicted from the cluster successfully, but the node was not cleaned up. To determine what cleanup steps failed and how to recover, see the Failover Clustering application event log using Event Viewer..
        /// </summary>
        internal static string ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group is unable to accept the request since it is moving to another node..
        /// </summary>
        internal static string ERROR_CLUSTER_GROUP_MOVING {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_GROUP_MOVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A non locker code got a request to reserve the lock for making global updates..
        /// </summary>
        internal static string ERROR_CLUSTER_GUM_NOT_LOCKER {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_GUM_NOT_LOCKER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node failed to join the cluster because the joining node and other nodes in the cluster have incompatible operating system versions. To get more information about operating system versions of the cluster, run the Validate a Configuration Wizard or the Test-Cluster Windows PowerShell cmdlet..
        /// </summary>
        internal static string ERROR_CLUSTER_INCOMPATIBLE_VERSIONS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INCOMPATIBLE_VERSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The join operation failed because the cluster instance ID of the joining node does not match the cluster instance ID of the sponsor node..
        /// </summary>
        internal static string ERROR_CLUSTER_INSTANCE_ID_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INSTANCE_ID_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal cluster error occurred. A call to an invalid function was attempted..
        /// </summary>
        internal static string ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network is not valid for an IPv6 Address resource, or it does not match the configured address..
        /// </summary>
        internal static string ERROR_CLUSTER_INVALID_IPV6_NETWORK {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INVALID_IPV6_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network is not valid for an IPv6 Tunnel resource. Check the configuration of the IP Address resource on which the IPv6 Tunnel resource depends..
        /// </summary>
        internal static string ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network is not valid..
        /// </summary>
        internal static string ERROR_CLUSTER_INVALID_NETWORK {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INVALID_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network provider is not valid..
        /// </summary>
        internal static string ERROR_CLUSTER_INVALID_NETWORK_PROVIDER {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INVALID_NETWORK_PROVIDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is not valid..
        /// </summary>
        internal static string ERROR_CLUSTER_INVALID_NODE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INVALID_NODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster request is not valid for this object..
        /// </summary>
        internal static string ERROR_CLUSTER_INVALID_REQUEST {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INVALID_REQUEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An input string of characters is not in a valid format for the data it represents..
        /// </summary>
        internal static string ERROR_CLUSTER_INVALID_STRING_FORMAT {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INVALID_STRING_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An input string of characters is not properly terminated..
        /// </summary>
        internal static string ERROR_CLUSTER_INVALID_STRING_TERMINATION {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_INVALID_STRING_TERMINATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster IP address is already in use..
        /// </summary>
        internal static string ERROR_CLUSTER_IPADDR_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_IPADDR_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster join operation was aborted..
        /// </summary>
        internal static string ERROR_CLUSTER_JOIN_ABORTED {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_JOIN_ABORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A node is in the process of joining the cluster..
        /// </summary>
        internal static string ERROR_CLUSTER_JOIN_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_JOIN_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cluster join operation is not in progress..
        /// </summary>
        internal static string ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network is the only one configured for internal cluster communication between two or more active cluster nodes. The internal communication capability cannot be removed from the network..
        /// </summary>
        internal static string ERROR_CLUSTER_LAST_INTERNAL_NETWORK {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_LAST_INTERNAL_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster local node information was not found..
        /// </summary>
        internal static string ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This resource cannot be created because the cluster has reached the limit on the number of resources it can monitor..
        /// </summary>
        internal static string ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The membership engine requested shutdown of the cluster service on this node..
        /// </summary>
        internal static string ERROR_CLUSTER_MEMBERSHIP_HALT {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_MEMBERSHIP_HALT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation was attempted that is incompatible with the current membership state of the node..
        /// </summary>
        internal static string ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the corresponding computer account doesn&apos;t match the Network Name for this resource..
        /// </summary>
        internal static string ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network interface already exists..
        /// </summary>
        internal static string ERROR_CLUSTER_NETINTERFACE_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETINTERFACE_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network interface was not found..
        /// </summary>
        internal static string ERROR_CLUSTER_NETINTERFACE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETINTERFACE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network is already offline..
        /// </summary>
        internal static string ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network is already online..
        /// </summary>
        internal static string ERROR_CLUSTER_NETWORK_ALREADY_ONLINE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETWORK_ALREADY_ONLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network already exists..
        /// </summary>
        internal static string ERROR_CLUSTER_NETWORK_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETWORK_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more cluster resources depend on the network to provide service to clients. The client access capability cannot be removed from the network..
        /// </summary>
        internal static string ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network was not found..
        /// </summary>
        internal static string ERROR_CLUSTER_NETWORK_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETWORK_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A matching cluster network for the specified IP address could not be found..
        /// </summary>
        internal static string ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster network is not configured for internal cluster communication..
        /// </summary>
        internal static string ERROR_CLUSTER_NETWORK_NOT_INTERNAL {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NETWORK_NOT_INTERNAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No network adapters are available..
        /// </summary>
        internal static string ERROR_CLUSTER_NO_NET_ADAPTERS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NO_NET_ADAPTERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A quorum of cluster nodes was not present to form a cluster..
        /// </summary>
        internal static string ERROR_CLUSTER_NO_QUORUM {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NO_QUORUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No authentication package could be registered with the RPC server..
        /// </summary>
        internal static string ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No cluster security context is available..
        /// </summary>
        internal static string ERROR_CLUSTER_NO_SECURITY_CONTEXT {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NO_SECURITY_CONTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is already down..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_ALREADY_DOWN {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_ALREADY_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DFS root already exists in this cluster node..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is already a member of the cluster..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_ALREADY_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_ALREADY_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is already up..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_ALREADY_UP {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_ALREADY_UP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is down..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_DOWN {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node already exists..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node was not found..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is not a member of the cluster..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_NOT_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_NOT_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is not paused..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_NOT_PAUSED {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_NOT_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is not ready to perform the requested operation..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_NOT_READY {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_NOT_READY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is paused..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_PAUSED {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is shutting down..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is not reachable..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_UNREACHABLE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_UNREACHABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node is up..
        /// </summary>
        internal static string ERROR_CLUSTER_NODE_UP {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NODE_UP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal cluster error occurred. Data was not properly initialized..
        /// </summary>
        internal static string ERROR_CLUSTER_NULL_DATA {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_NULL_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more nodes in the cluster are running a version of Windows that does not support this operation..
        /// </summary>
        internal static string ERROR_CLUSTER_OLD_VERSION {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_OLD_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot bring the group online because the owner of the group is not in the preferred list for the group. To change the owner node for the group, move the group..
        /// </summary>
        internal static string ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more parameter values specified for a resource&apos;s properties are in conflict..
        /// </summary>
        internal static string ERROR_CLUSTER_PARAMETER_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_PARAMETER_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter value is out of acceptable range..
        /// </summary>
        internal static string ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while reading from a stream of data. An unexpected number of bytes was returned..
        /// </summary>
        internal static string ERROR_CLUSTER_PARTIAL_READ {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_PARTIAL_READ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A network error occurred while sending data to another node in the cluster. The number of bytes transmitted was less than required..
        /// </summary>
        internal static string ERROR_CLUSTER_PARTIAL_SEND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_PARTIAL_SEND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while writing to a stream of data. The required number of bytes could not be written..
        /// </summary>
        internal static string ERROR_CLUSTER_PARTIAL_WRITE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_PARTIAL_WRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node has been poisoned..
        /// </summary>
        internal static string ERROR_CLUSTER_POISONED {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_POISONED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The actual data type of the property did not match the expected data type of the property..
        /// </summary>
        internal static string ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quorum resource does not contain the quorum log..
        /// </summary>
        internal static string ERROR_CLUSTER_QUORUMLOG_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_QUORUMLOG_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid cluster registry operation was attempted..
        /// </summary>
        internal static string ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified resource name is not supported by this resource DLL. This may be due to a bad (or changed) name supplied to the resource DLL..
        /// </summary>
        internal static string ERROR_CLUSTER_RESNAME_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_RESNAME_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource type cannot accept the request since is too busy performing another operation..
        /// </summary>
        internal static string ERROR_CLUSTER_RESOURCE_TYPE_BUSY {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_RESOURCE_TYPE_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified resource type was not found..
        /// </summary>
        internal static string ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified node does not support a resource of this type. This may be due to version inconsistencies or due to the absence of the resource DLL on this node..
        /// </summary>
        internal static string ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster software is shutting down..
        /// </summary>
        internal static string ERROR_CLUSTER_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system configuration changed during the cluster join or form operation. The join or form operation was aborted..
        /// </summary>
        internal static string ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This computer cannot be made a member of a cluster because it does not have the correct version of Windows installed..
        /// </summary>
        internal static string ERROR_CLUSTER_WRONG_OS_VERSION {
            get {
                return ResourceManager.GetString("ERROR_CLUSTER_WRONG_OS_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No checkpoint record was found in the cluster log..
        /// </summary>
        internal static string ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster log is corrupt..
        /// </summary>
        internal static string ERROR_CLUSTERLOG_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_CLUSTERLOG_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster log exceeds its maximum size..
        /// </summary>
        internal static string ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum required disk space needed for logging is not available..
        /// </summary>
        internal static string ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The record could not be written to the cluster log since it exceeds the maximum size..
        /// </summary>
        internal static string ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE {
            get {
                return ResourceManager.GetString("ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified transform does not match the bitmap&apos;s color space..
        /// </summary>
        internal static string ERROR_COLORSPACE_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_COLORSPACE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The paging file is too small for this operation to complete..
        /// </summary>
        internal static string ERROR_COMMITMENT_LIMIT {
            get {
                return ResourceManager.GetString("ERROR_COMMITMENT_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Virtual Memory Minimum Too Low} Your system is low on virtual memory. Windows is increasing the size of your virtual memory paging file. During this process, memory requests for some applications may be denied. For more information, see Help..
        /// </summary>
        internal static string ERROR_COMMITMENT_MINIMUM {
            get {
                return ResourceManager.GetString("ERROR_COMMITMENT_MINIMUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression is disabled for this volume..
        /// </summary>
        internal static string ERROR_COMPRESSION_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_COMPRESSION_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network connection was made successfully, but the user had to be prompted for a password other than the one originally specified..
        /// </summary>
        internal static string ERROR_CONNECTED_OTHER_PASSWORD {
            get {
                return ResourceManager.GetString("ERROR_CONNECTED_OTHER_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network connection was made successfully using default credentials..
        /// </summary>
        internal static string ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT {
            get {
                return ResourceManager.GetString("ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network connection was aborted by the local system..
        /// </summary>
        internal static string ERROR_CONNECTION_ABORTED {
            get {
                return ResourceManager.GetString("ERROR_CONNECTION_ABORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid operation was attempted on an active network connection..
        /// </summary>
        internal static string ERROR_CONNECTION_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_CONNECTION_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection to the server could not be made because the limit on the number of concurrent connections for this account has been reached..
        /// </summary>
        internal static string ERROR_CONNECTION_COUNT_LIMIT {
            get {
                return ResourceManager.GetString("ERROR_CONNECTION_COUNT_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation was attempted on a nonexistent network connection..
        /// </summary>
        internal static string ERROR_CONNECTION_INVALID {
            get {
                return ResourceManager.GetString("ERROR_CONNECTION_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote computer refused the network connection..
        /// </summary>
        internal static string ERROR_CONNECTION_REFUSED {
            get {
                return ResourceManager.GetString("ERROR_CONNECTION_REFUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is not currently connected but it is a remembered connection..
        /// </summary>
        internal static string ERROR_CONNECTION_UNAVAIL {
            get {
                return ResourceManager.GetString("ERROR_CONNECTION_UNAVAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested file operation failed because the storage policy blocks that type of file. For more information, contact your system administrator..
        /// </summary>
        internal static string ERROR_CONTENT_BLOCKED {
            get {
                return ResourceManager.GetString("ERROR_CONTENT_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The context has expired and can no longer be used..
        /// </summary>
        internal static string ERROR_CONTEXT_EXPIRED {
            get {
                return ResourceManager.GetString("ERROR_CONTEXT_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue with work in progress..
        /// </summary>
        internal static string ERROR_CONTINUE {
            get {
                return ResourceManager.GetString("ERROR_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Application Exit by CTRL+C} The application terminated as a result of a CTRL+C..
        /// </summary>
        internal static string ERROR_CONTROL_C_EXIT {
            get {
                return ResourceManager.GetString("ERROR_CONTROL_C_EXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control ID not found..
        /// </summary>
        internal static string ERROR_CONTROL_ID_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CONTROL_ID_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open or close the inject/eject port..
        /// </summary>
        internal static string ERROR_CONTROLLING_IEPORT {
            get {
                return ResourceManager.GetString("ERROR_CONTROLLING_IEPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal OFS status codes indicating how an allocation operation is handled. Either it is retried after the containing onode is moved or the extent stream is converted to a large stream..
        /// </summary>
        internal static string ERROR_CONVERT_TO_LARGE {
            get {
                return ResourceManager.GetString("ERROR_CONVERT_TO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find a core driver package that is required by the printer driver package..
        /// </summary>
        internal static string ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource could not be deleted since it is a core resource..
        /// </summary>
        internal static string ERROR_CORE_RESOURCE {
            get {
                return ResourceManager.GetString("ERROR_CORE_RESOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system file %1 has become corrupt and has been replaced..
        /// </summary>
        internal static string ERROR_CORRUPT_SYSTEM_FILE {
            get {
                return ResourceManager.GetString("ERROR_CORRUPT_SYSTEM_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passed ACL did not contain the minimum required information..
        /// </summary>
        internal static string ERROR_COULD_NOT_INTERPRET {
            get {
                return ResourceManager.GetString("ERROR_COULD_NOT_INTERPRET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log could not be set to the requested size..
        /// </summary>
        internal static string ERROR_COULD_NOT_RESIZE_LOG {
            get {
                return ResourceManager.GetString("ERROR_COULD_NOT_RESIZE_LOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A serial I/O operation completed because the timeout period expired. (The IOCTL_SERIAL_XOFF_COUNTER did not reach zero.).
        /// </summary>
        internal static string ERROR_COUNTER_TIMEOUT {
            get {
                return ResourceManager.GetString("ERROR_COUNTER_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crash dump exists in paging file..
        /// </summary>
        internal static string ERROR_CRASH_DUMP {
            get {
                return ResourceManager.GetString("ERROR_CRASH_DUMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data error (cyclic redundancy check)..
        /// </summary>
        internal static string ERROR_CRC {
            get {
                return ResourceManager.GetString("ERROR_CRC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Installer service failed to start. Contact your support personnel..
        /// </summary>
        internal static string ERROR_CREATE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_CREATE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RM tried to register a protocol that already exists..
        /// </summary>
        internal static string ERROR_CRM_PROTOCOL_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_CRM_PROTOCOL_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested propagation protocol was not registered as a CRM..
        /// </summary>
        internal static string ERROR_CRM_PROTOCOL_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CRM_PROTOCOL_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File is encrypted and should be opened in Client Side Encryption mode..
        /// </summary>
        internal static string ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE {
            get {
                return ResourceManager.GetString("ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SMB client requested a CSE FSCTL on a non-CSE file..
        /// </summary>
        internal static string ERROR_CS_ENCRYPTION_FILE_NOT_CSE {
            get {
                return ResourceManager.GetString("ERROR_CS_ENCRYPTION_FILE_NOT_CSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote server sent an invalid response for a file being opened with Client Side Encryption..
        /// </summary>
        internal static string ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE {
            get {
                return ResourceManager.GetString("ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new encrypted file is being created and a $EFS needs to be provided..
        /// </summary>
        internal static string ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE {
            get {
                return ResourceManager.GetString("ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Side Encryption is not supported by the remote server even though it claims to support it..
        /// </summary>
        internal static string ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER {
            get {
                return ResourceManager.GetString("ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The share is currently offline or does not exist..
        /// </summary>
        internal static string ERROR_CSCSHARE_OFFLINE {
            get {
                return ResourceManager.GetString("ERROR_CSCSHARE_OFFLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to log you on because of an account restriction..
        /// </summary>
        internal static string ERROR_CTX_ACCOUNT_RESTRICTION {
            get {
                return ResourceManager.GetString("ERROR_CTX_ACCOUNT_RESTRICTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt has been made to connect to a session whose video mode is not supported by the current client..
        /// </summary>
        internal static string ERROR_CTX_BAD_VIDEO_MODE {
            get {
                return ResourceManager.GetString("ERROR_CTX_BAD_VIDEO_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A registry key for event logging could not be created for this session..
        /// </summary>
        internal static string ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY {
            get {
                return ResourceManager.GetString("ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Client Drive Mapping Service Has Connected on Terminal Connection..
        /// </summary>
        internal static string ERROR_CTX_CDM_CONNECT {
            get {
                return ResourceManager.GetString("ERROR_CTX_CDM_CONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Client Drive Mapping Service Has Disconnected on Terminal Connection..
        /// </summary>
        internal static string ERROR_CTX_CDM_DISCONNECT {
            get {
                return ResourceManager.GetString("ERROR_CTX_CDM_DISCONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your request to connect to this Terminal Server has been rejected. Your Terminal Server client license number is currently being used by another user. Please call your system administrator to obtain a unique license number..
        /// </summary>
        internal static string ERROR_CTX_CLIENT_LICENSE_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_CTX_CLIENT_LICENSE_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your request to connect to this Terminal Server has been rejected. Your Terminal Server client license number has not been entered for this copy of the Terminal Server client. Please contact your system administrator..
        /// </summary>
        internal static string ERROR_CTX_CLIENT_LICENSE_NOT_SET {
            get {
                return ResourceManager.GetString("ERROR_CTX_CLIENT_LICENSE_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client failed to respond to the server connect message..
        /// </summary>
        internal static string ERROR_CTX_CLIENT_QUERY_TIMEOUT {
            get {
                return ResourceManager.GetString("ERROR_CTX_CLIENT_QUERY_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A close operation is pending on the session..
        /// </summary>
        internal static string ERROR_CTX_CLOSE_PENDING {
            get {
                return ResourceManager.GetString("ERROR_CTX_CLOSE_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reconnecting a disconnected session to the console is not supported..
        /// </summary>
        internal static string ERROR_CTX_CONSOLE_CONNECT {
            get {
                return ResourceManager.GetString("ERROR_CTX_CONSOLE_CONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnecting the console session is not supported..
        /// </summary>
        internal static string ERROR_CTX_CONSOLE_DISCONNECT {
            get {
                return ResourceManager.GetString("ERROR_CTX_CONSOLE_DISCONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have the proper encryption level to access this Session..
        /// </summary>
        internal static string ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application attempted to enable DOS graphics mode. DOS graphics mode is not supported..
        /// </summary>
        internal static string ERROR_CTX_GRAPHICS_INVALID {
            get {
                return ResourceManager.GetString("ERROR_CTX_GRAPHICS_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modem name was not found in MODEM.INF..
        /// </summary>
        internal static string ERROR_CTX_INVALID_MODEMNAME {
            get {
                return ResourceManager.GetString("ERROR_CTX_INVALID_MODEMNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified protocol driver is invalid..
        /// </summary>
        internal static string ERROR_CTX_INVALID_PD {
            get {
                return ResourceManager.GetString("ERROR_CTX_INVALID_PD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified terminal connection driver is invalid..
        /// </summary>
        internal static string ERROR_CTX_INVALID_WD {
            get {
                return ResourceManager.GetString("ERROR_CTX_INVALID_WD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client you are using is not licensed to use this system. Your logon request is denied..
        /// </summary>
        internal static string ERROR_CTX_LICENSE_CLIENT_INVALID {
            get {
                return ResourceManager.GetString("ERROR_CTX_LICENSE_CLIENT_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system license has expired. Your logon request is denied..
        /// </summary>
        internal static string ERROR_CTX_LICENSE_EXPIRED {
            get {
                return ResourceManager.GetString("ERROR_CTX_LICENSE_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of connections to this computer is limited and all connections are in use right now. Try connecting later or contact your system administrator..
        /// </summary>
        internal static string ERROR_CTX_LICENSE_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_CTX_LICENSE_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your interactive logon privilege has been disabled. Please contact your administrator..
        /// </summary>
        internal static string ERROR_CTX_LOGON_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_CTX_LOGON_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MODEM.INF file was not found..
        /// </summary>
        internal static string ERROR_CTX_MODEM_INF_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CTX_MODEM_INF_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Busy signal detected at remote site on callback..
        /// </summary>
        internal static string ERROR_CTX_MODEM_RESPONSE_BUSY {
            get {
                return ResourceManager.GetString("ERROR_CTX_MODEM_RESPONSE_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modem did not accept the command sent to it. Verify that the configured modem name matches the attached modem..
        /// </summary>
        internal static string ERROR_CTX_MODEM_RESPONSE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_CTX_MODEM_RESPONSE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Carrier detect has failed or carrier has been dropped due to disconnect..
        /// </summary>
        internal static string ERROR_CTX_MODEM_RESPONSE_NO_CARRIER {
            get {
                return ResourceManager.GetString("ERROR_CTX_MODEM_RESPONSE_NO_CARRIER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dial tone not detected within the required time. Verify that the phone cable is properly attached and functional..
        /// </summary>
        internal static string ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE {
            get {
                return ResourceManager.GetString("ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modem did not respond to the command sent to it. Verify that the modem is properly cabled and powered on..
        /// </summary>
        internal static string ERROR_CTX_MODEM_RESPONSE_TIMEOUT {
            get {
                return ResourceManager.GetString("ERROR_CTX_MODEM_RESPONSE_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voice detected at remote site on callback..
        /// </summary>
        internal static string ERROR_CTX_MODEM_RESPONSE_VOICE {
            get {
                return ResourceManager.GetString("ERROR_CTX_MODEM_RESPONSE_VOICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user %s\\%s is already logged on to the console of this computer. You do not have permission to log in at this time. To resolve this issue, contact %s\\%s and have them log off..
        /// </summary>
        internal static string ERROR_CTX_NO_FORCE_LOGOFF {
            get {
                return ResourceManager.GetString("ERROR_CTX_NO_FORCE_LOGOFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no free output buffers available..
        /// </summary>
        internal static string ERROR_CTX_NO_OUTBUF {
            get {
                return ResourceManager.GetString("ERROR_CTX_NO_OUTBUF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation can be performed only on the system console. This is most often the result of a driver or system DLL requiring direct console access..
        /// </summary>
        internal static string ERROR_CTX_NOT_CONSOLE {
            get {
                return ResourceManager.GetString("ERROR_CTX_NOT_CONSOLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified protocol driver was not found in the system path..
        /// </summary>
        internal static string ERROR_CTX_PD_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CTX_PD_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Terminal Server security layer detected an error in the protocol stream and has disconnected the client..
        /// </summary>
        internal static string ERROR_CTX_SECURITY_LAYER_ERROR {
            get {
                return ResourceManager.GetString("ERROR_CTX_SECURITY_LAYER_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A service with the same name already exists on the system..
        /// </summary>
        internal static string ERROR_CTX_SERVICE_NAME_COLLISION {
            get {
                return ResourceManager.GetString("ERROR_CTX_SERVICE_NAME_COLLISION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user %s\\%s is currently logged on to this computer. Only the current user or an administrator can log on to this computer..
        /// </summary>
        internal static string ERROR_CTX_SESSION_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_CTX_SESSION_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request to control another session remotely was denied..
        /// </summary>
        internal static string ERROR_CTX_SHADOW_DENIED {
            get {
                return ResourceManager.GetString("ERROR_CTX_SHADOW_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested session is not configured to allow remote control..
        /// </summary>
        internal static string ERROR_CTX_SHADOW_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_CTX_SHADOW_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote control of the console was terminated because the display mode was changed. Changing the display mode in a remote control session is not supported..
        /// </summary>
        internal static string ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE {
            get {
                return ResourceManager.GetString("ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested session cannot be controlled remotely. This may be because the session is disconnected or does not currently have a user logged on..
        /// </summary>
        internal static string ERROR_CTX_SHADOW_INVALID {
            get {
                return ResourceManager.GetString("ERROR_CTX_SHADOW_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote control could not be terminated because the specified session is not currently being remotely controlled..
        /// </summary>
        internal static string ERROR_CTX_SHADOW_NOT_RUNNING {
            get {
                return ResourceManager.GetString("ERROR_CTX_SHADOW_NOT_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transport driver error.
        /// </summary>
        internal static string ERROR_CTX_TD_ERROR {
            get {
                return ResourceManager.GetString("ERROR_CTX_TD_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified terminal connection driver was not found in the system path..
        /// </summary>
        internal static string ERROR_CTX_WD_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CTX_WD_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested session access is denied..
        /// </summary>
        internal static string ERROR_CTX_WINSTATION_ACCESS_DENIED {
            get {
                return ResourceManager.GetString("ERROR_CTX_WINSTATION_ACCESS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified session name is already in use..
        /// </summary>
        internal static string ERROR_CTX_WINSTATION_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_CTX_WINSTATION_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task you are trying to do can&apos;t be completed because Remote Desktop Services is currently busy. Please try again in a few minutes. Other users should still be able to log on..
        /// </summary>
        internal static string ERROR_CTX_WINSTATION_BUSY {
            get {
                return ResourceManager.GetString("ERROR_CTX_WINSTATION_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified session name is invalid..
        /// </summary>
        internal static string ERROR_CTX_WINSTATION_NAME_INVALID {
            get {
                return ResourceManager.GetString("ERROR_CTX_WINSTATION_NAME_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified session cannot be found..
        /// </summary>
        internal static string ERROR_CTX_WINSTATION_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_CTX_WINSTATION_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote logins are currently disabled..
        /// </summary>
        internal static string ERROR_CTX_WINSTATIONS_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_CTX_WINSTATIONS_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory cannot be removed..
        /// </summary>
        internal static string ERROR_CURRENT_DIRECTORY {
            get {
                return ResourceManager.GetString("ERROR_CURRENT_DIRECTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation cannot be performed on the current domain..
        /// </summary>
        internal static string ERROR_CURRENT_DOMAIN_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("ERROR_CURRENT_DOMAIN_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current transaction context associated with the thread is not a valid handle to a transaction object..
        /// </summary>
        internal static string ERROR_CURRENT_TRANSACTION_NOT_VALID {
            get {
                return ResourceManager.GetString("ERROR_CURRENT_TRANSACTION_NOT_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows has discovered corruption in a file, and that file has since been repaired. Data loss may have occurred..
        /// </summary>
        internal static string ERROR_DATA_LOST_REPAIR {
            get {
                return ResourceManager.GetString("ERROR_DATA_LOST_REPAIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Data Not Accepted} The TDI client could not handle the data received during an indication..
        /// </summary>
        internal static string ERROR_DATA_NOT_ACCEPTED {
            get {
                return ResourceManager.GetString("ERROR_DATA_NOT_ACCEPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The backed up cluster database is possibly corrupt..
        /// </summary>
        internal static string ERROR_DATABASE_BACKUP_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_DATABASE_BACKUP_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database specified does not exist..
        /// </summary>
        internal static string ERROR_DATABASE_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("ERROR_DATABASE_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read from or write to the database..
        /// </summary>
        internal static string ERROR_DATABASE_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_DATABASE_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database is full..
        /// </summary>
        internal static string ERROR_DATABASE_FULL {
            get {
                return ResourceManager.GetString("ERROR_DATABASE_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data supplied is of wrong type..
        /// </summary>
        internal static string ERROR_DATATYPE_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DATATYPE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger command communication exception..
        /// </summary>
        internal static string ERROR_DBG_COMMAND_EXCEPTION {
            get {
                return ResourceManager.GetString("ERROR_DBG_COMMAND_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger continued.
        /// </summary>
        internal static string ERROR_DBG_CONTINUE {
            get {
                return ResourceManager.GetString("ERROR_DBG_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger received control break..
        /// </summary>
        internal static string ERROR_DBG_CONTROL_BREAK {
            get {
                return ResourceManager.GetString("ERROR_DBG_CONTROL_BREAK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger got control C..
        /// </summary>
        internal static string ERROR_DBG_CONTROL_C {
            get {
                return ResourceManager.GetString("ERROR_DBG_CONTROL_C", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger handled exception.
        /// </summary>
        internal static string ERROR_DBG_EXCEPTION_HANDLED {
            get {
                return ResourceManager.GetString("ERROR_DBG_EXCEPTION_HANDLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger did not handle the exception..
        /// </summary>
        internal static string ERROR_DBG_EXCEPTION_NOT_HANDLED {
            get {
                return ResourceManager.GetString("ERROR_DBG_EXCEPTION_NOT_HANDLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger printed exception on control C..
        /// </summary>
        internal static string ERROR_DBG_PRINTEXCEPTION_C {
            get {
                return ResourceManager.GetString("ERROR_DBG_PRINTEXCEPTION_C", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger will reply later..
        /// </summary>
        internal static string ERROR_DBG_REPLY_LATER {
            get {
                return ResourceManager.GetString("ERROR_DBG_REPLY_LATER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger received RIP exception..
        /// </summary>
        internal static string ERROR_DBG_RIPEXCEPTION {
            get {
                return ResourceManager.GetString("ERROR_DBG_RIPEXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger terminated process..
        /// </summary>
        internal static string ERROR_DBG_TERMINATE_PROCESS {
            get {
                return ResourceManager.GetString("ERROR_DBG_TERMINATE_PROCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger terminated thread..
        /// </summary>
        internal static string ERROR_DBG_TERMINATE_THREAD {
            get {
                return ResourceManager.GetString("ERROR_DBG_TERMINATE_THREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger cannot provide handle..
        /// </summary>
        internal static string ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid device context (DC) handle..
        /// </summary>
        internal static string ERROR_DC_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DC_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred in sending the command to the application..
        /// </summary>
        internal static string ERROR_DDE_FAIL {
            get {
                return ResourceManager.GetString("ERROR_DDE_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Unexpected Failure in DebugActiveProcess} An unexpected failure occurred while processing a DebugActiveProcess API request. You may choose OK to terminate the process, or Cancel to ignore the error..
        /// </summary>
        internal static string ERROR_DEBUG_ATTACH_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DEBUG_ATTACH_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to do an operation on a debug object failed because the object is in the process of being deleted..
        /// </summary>
        internal static string ERROR_DEBUGGER_INACTIVE {
            get {
                return ResourceManager.GetString("ERROR_DEBUGGER_INACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file could not be decrypted..
        /// </summary>
        internal static string ERROR_DECRYPTION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DECRYPTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to delay-load a .dll or get a function address in a delay-loaded .dll failed..
        /// </summary>
        internal static string ERROR_DELAY_LOAD_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DELAY_LOAD_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file cannot be opened because it is in the process of being deleted..
        /// </summary>
        internal static string ERROR_DELETE_PENDING {
            get {
                return ResourceManager.GetString("ERROR_DELETE_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error while deleting the color transform..
        /// </summary>
        internal static string ERROR_DELETING_ICM_XFORM {
            get {
                return ResourceManager.GetString("ERROR_DELETING_ICM_XFORM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource cannot be made dependent on the specified resource because it is already dependent..
        /// </summary>
        internal static string ERROR_DEPENDENCY_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DEPENDENCY_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster quorum resource is not allowed to have any dependencies..
        /// </summary>
        internal static string ERROR_DEPENDENCY_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("ERROR_DEPENDENCY_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource dependency cannot be found..
        /// </summary>
        internal static string ERROR_DEPENDENCY_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DEPENDENCY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot be completed because other resources are dependent on this resource..
        /// </summary>
        internal static string ERROR_DEPENDENT_RESOURCE_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DEPENDENT_RESOURCE_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more property values for this resource are in conflict with one or more property values associated with its dependent resource(s)..
        /// </summary>
        internal static string ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A stop control has been sent to a service that other running services are dependent on..
        /// </summary>
        internal static string ERROR_DEPENDENT_SERVICES_RUNNING {
            get {
                return ResourceManager.GetString("ERROR_DEPENDENT_SERVICES_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The indicated destination element already contains media..
        /// </summary>
        internal static string ERROR_DESTINATION_ELEMENT_FULL {
            get {
                return ResourceManager.GetString("ERROR_DESTINATION_ELEMENT_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot destroy object created by another thread..
        /// </summary>
        internal static string ERROR_DESTROY_OBJECT_OF_OTHER_THREAD {
            get {
                return ResourceManager.GetString("ERROR_DESTROY_OBJECT_OF_OTHER_THREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified network resource or device is no longer available..
        /// </summary>
        internal static string ERROR_DEV_NOT_EXIST {
            get {
                return ResourceManager.GetString("ERROR_DEV_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to attach to a device that was already attached to another device..
        /// </summary>
        internal static string ERROR_DEVICE_ALREADY_ATTACHED {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_ALREADY_ATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local device name has a remembered connection to another network resource..
        /// </summary>
        internal static string ERROR_DEVICE_ALREADY_REMEMBERED {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_ALREADY_REMEMBERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device has indicated that its door is open..
        /// </summary>
        internal static string ERROR_DEVICE_DOOR_OPEN {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_DOOR_OPEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;%hs&quot; encountered an error while applying power or reading the device configuration. This may be caused by a failure of your hardware or by a poor connection..
        /// </summary>
        internal static string ERROR_DEVICE_ENUMERATION_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_ENUMERATION_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is not ready for use..
        /// </summary>
        internal static string ERROR_DEVICE_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is not connected..
        /// </summary>
        internal static string ERROR_DEVICE_NOT_CONNECTED {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_NOT_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tape partition information could not be found when loading a tape..
        /// </summary>
        internal static string ERROR_DEVICE_NOT_PARTITIONED {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_NOT_PARTITIONED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The indicated device requires reinitialization due to hardware errors..
        /// </summary>
        internal static string ERROR_DEVICE_REINITIALIZATION_NEEDED {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_REINITIALIZATION_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device has been removed..
        /// </summary>
        internal static string ERROR_DEVICE_REMOVED {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_REMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device has indicated that cleaning is required before further operations are attempted..
        /// </summary>
        internal static string ERROR_DEVICE_REQUIRES_CLEANING {
            get {
                return ResourceManager.GetString("ERROR_DEVICE_REQUIRES_CLEANING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DHCP client has obtained an IP address that is already in use on the network. The local interface will be disabled until the DHCP client can obtain a new address..
        /// </summary>
        internal static string ERROR_DHCP_ADDRESS_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_DHCP_ADDRESS_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account specified for this service is different from the account specified for other services running in the same process..
        /// </summary>
        internal static string ERROR_DIFFERENT_SERVICE_ACCOUNT {
            get {
                return ResourceManager.GetString("ERROR_DIFFERENT_SERVICE_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory has been disabled for encryption..
        /// </summary>
        internal static string ERROR_DIR_EFS_DISALLOWED {
            get {
                return ResourceManager.GetString("ERROR_DIR_EFS_DISALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory is not empty..
        /// </summary>
        internal static string ERROR_DIR_NOT_EMPTY {
            get {
                return ResourceManager.GetString("ERROR_DIR_NOT_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory is not a subdirectory of the root directory..
        /// </summary>
        internal static string ERROR_DIR_NOT_ROOT {
            get {
                return ResourceManager.GetString("ERROR_DIR_NOT_ROOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to use a file handle to an open disk partition for an operation other than raw disk I/O..
        /// </summary>
        internal static string ERROR_DIRECT_ACCESS_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_DIRECT_ACCESS_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory name is invalid..
        /// </summary>
        internal static string ERROR_DIRECTORY {
            get {
                return ResourceManager.GetString("ERROR_DIRECTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory does not contain a resource manager..
        /// </summary>
        internal static string ERROR_DIRECTORY_NOT_RM {
            get {
                return ResourceManager.GetString("ERROR_DIRECTORY_NOT_RM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The segment is already discarded and cannot be locked..
        /// </summary>
        internal static string ERROR_DISCARDED {
            get {
                return ResourceManager.GetString("ERROR_DISCARDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program stopped because an alternate diskette was not inserted..
        /// </summary>
        internal static string ERROR_DISK_CHANGE {
            get {
                return ResourceManager.GetString("ERROR_DISK_CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The disk structure is corrupted and unreadable..
        /// </summary>
        internal static string ERROR_DISK_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_DISK_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is not enough space on the disk..
        /// </summary>
        internal static string ERROR_DISK_FULL {
            get {
                return ResourceManager.GetString("ERROR_DISK_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While accessing the hard disk, a disk operation failed even after retries..
        /// </summary>
        internal static string ERROR_DISK_OPERATION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DISK_OPERATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested file operation failed because the storage quota was exceeded. To free up disk space, move files to a different location or delete unnecessary files. For more information, contact your system administrator..
        /// </summary>
        internal static string ERROR_DISK_QUOTA_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DISK_QUOTA_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While accessing the hard disk, a recalibrate operation failed, even after retries..
        /// </summary>
        internal static string ERROR_DISK_RECALIBRATE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DISK_RECALIBRATE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempted operation required self healing to be enabled..
        /// </summary>
        internal static string ERROR_DISK_REPAIR_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_DISK_REPAIR_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While accessing the hard disk, a disk controller reset was needed, but even that failed..
        /// </summary>
        internal static string ERROR_DISK_RESET_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DISK_RESET_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume is too fragmented to complete this operation..
        /// </summary>
        internal static string ERROR_DISK_TOO_FRAGMENTED {
            get {
                return ResourceManager.GetString("ERROR_DISK_TOO_FRAGMENTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dynamic link library (DLL) initialization routine failed..
        /// </summary>
        internal static string ERROR_DLL_INIT_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DLL_INIT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {DLL Initialization Failed} The application failed to initialize because the window station is shutting down..
        /// </summary>
        internal static string ERROR_DLL_INIT_FAILED_LOGOFF {
            get {
                return ResourceManager.GetString("ERROR_DLL_INIT_FAILED_LOGOFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application is loading executable code from the module %hs. This is secure, but may be incompatible with previous releases of the operating system. An alternative, %hs, is available. Should the application use the secure module %hs?.
        /// </summary>
        internal static string ERROR_DLL_MIGHT_BE_INCOMPATIBLE {
            get {
                return ResourceManager.GetString("ERROR_DLL_MIGHT_BE_INCOMPATIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application is attempting to run executable code from the module %hs. This may be insecure. An alternative, %hs, is available. Should the application use the secure module %hs?.
        /// </summary>
        internal static string ERROR_DLL_MIGHT_BE_INSECURE {
            get {
                return ResourceManager.GetString("ERROR_DLL_MIGHT_BE_INSECURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the library files needed to run this application cannot be found..
        /// </summary>
        internal static string ERROR_DLL_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DLL_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A domain controller with the specified name already exists..
        /// </summary>
        internal static string ERROR_DOMAIN_CONTROLLER_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DOMAIN_CONTROLLER_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the domain controller for this domain..
        /// </summary>
        internal static string ERROR_DOMAIN_CONTROLLER_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DOMAIN_CONTROLLER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Windows Server has an incorrect configuration..
        /// </summary>
        internal static string ERROR_DOMAIN_CTRLR_CONFIG_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DOMAIN_CTRLR_CONFIG_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified domain already exists..
        /// </summary>
        internal static string ERROR_DOMAIN_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DOMAIN_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to exceed the limit on the number of domains per server..
        /// </summary>
        internal static string ERROR_DOMAIN_LIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DOMAIN_LIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name or security ID (SID) of the domain specified is inconsistent with the trust information for that domain..
        /// </summary>
        internal static string ERROR_DOMAIN_TRUST_INCONSISTENT {
            get {
                return ResourceManager.GetString("ERROR_DOMAIN_TRUST_INCONSISTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot contact a domain controller to service the authentication request. Please try again later..
        /// </summary>
        internal static string ERROR_DOWNGRADE_DETECTED {
            get {
                return ResourceManager.GetString("ERROR_DOWNGRADE_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The disk is in use or locked by another process..
        /// </summary>
        internal static string ERROR_DRIVE_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_DRIVE_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive and medium are not compatible or exist in different libraries..
        /// </summary>
        internal static string ERROR_DRIVE_MEDIA_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DRIVE_MEDIA_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This driver has been blocked from loading.
        /// </summary>
        internal static string ERROR_DRIVER_BLOCKED {
            get {
                return ResourceManager.GetString("ERROR_DRIVER_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Cancel Timeout} The driver %hs failed to complete a cancelled I/O request in the allotted time..
        /// </summary>
        internal static string ERROR_DRIVER_CANCEL_TIMEOUT {
            get {
                return ResourceManager.GetString("ERROR_DRIVER_CANCEL_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was error [%2] processing the driver database..
        /// </summary>
        internal static string ERROR_DRIVER_DATABASE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DRIVER_DATABASE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The driver could not be loaded because a previous version of the driver is still in memory..
        /// </summary>
        internal static string ERROR_DRIVER_FAILED_PRIOR_UNLOAD {
            get {
                return ResourceManager.GetString("ERROR_DRIVER_FAILED_PRIOR_UNLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {System Standby Failed} The driver %hs does not support standby mode. Updating this driver may allow the system to go to standby mode..
        /// </summary>
        internal static string ERROR_DRIVER_FAILED_SLEEP {
            get {
                return ResourceManager.GetString("ERROR_DRIVER_FAILED_SLEEP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process hosting the driver for this device has been terminated..
        /// </summary>
        internal static string ERROR_DRIVER_PROCESS_TERMINATED {
            get {
                return ResourceManager.GetString("ERROR_DRIVER_PROCESS_TERMINATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A device driver is leaking locked I/O pages causing system degradation. The system has automatically enabled tracking code in order to try and catch the culprit..
        /// </summary>
        internal static string ERROR_DRIVERS_LEAKING_LOCKED_PAGES {
            get {
                return ResourceManager.GetString("ERROR_DRIVERS_LEAKING_LOCKED_PAGES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The add replica operation cannot be performed. The naming context must be writeable in order to create the replica..
        /// </summary>
        internal static string ERROR_DS_ADD_REPLICA_INHIBITED {
            get {
                return ResourceManager.GetString("ERROR_DS_ADD_REPLICA_INHIBITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The administrative limit for this request was exceeded..
        /// </summary>
        internal static string ERROR_DS_ADMIN_LIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DS_ADMIN_LIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation affects multiple DSAs.
        /// </summary>
        internal static string ERROR_DS_AFFECTS_MULTIPLE_DSAS {
            get {
                return ResourceManager.GetString("ERROR_DS_AFFECTS_MULTIPLE_DSAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An account group cannot have a universal group as a member..
        /// </summary>
        internal static string ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an alias dereferencing problem..
        /// </summary>
        internal static string ERROR_DS_ALIAS_DEREF_PROBLEM {
            get {
                return ResourceManager.GetString("ERROR_DS_ALIAS_DEREF_PROBLEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not permitted for an alias to refer to another alias..
        /// </summary>
        internal static string ERROR_DS_ALIAS_POINTS_TO_ALIAS {
            get {
                return ResourceManager.GetString("ERROR_DS_ALIAS_POINTS_TO_ALIAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an alias problem..
        /// </summary>
        internal static string ERROR_DS_ALIAS_PROBLEM {
            get {
                return ResourceManager.GetString("ERROR_DS_ALIAS_PROBLEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The aliased object is missing..
        /// </summary>
        internal static string ERROR_DS_ALIASED_OBJ_MISSING {
            get {
                return ResourceManager.GetString("ERROR_DS_ALIASED_OBJ_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified attribute is already present on the object..
        /// </summary>
        internal static string ERROR_DS_ATT_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DS_ATT_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute specified in the operation is not present on the object..
        /// </summary>
        internal static string ERROR_DS_ATT_IS_NOT_ON_OBJ {
            get {
                return ResourceManager.GetString("ERROR_DS_ATT_IS_NOT_ON_OBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to modify an object to include an attribute that is not legal for its class..
        /// </summary>
        internal static string ERROR_DS_ATT_NOT_DEF_FOR_CLASS {
            get {
                return ResourceManager.GetString("ERROR_DS_ATT_NOT_DEF_FOR_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference to an attribute that is not defined in the schema occurred..
        /// </summary>
        internal static string ERROR_DS_ATT_NOT_DEF_IN_SCHEMA {
            get {
                return ResourceManager.GetString("ERROR_DS_ATT_NOT_DEF_IN_SCHEMA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read the governs class identifier for the schema record..
        /// </summary>
        internal static string ERROR_DS_ATT_SCHEMA_REQ_ID {
            get {
                return ResourceManager.GetString("ERROR_DS_ATT_SCHEMA_REQ_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to obtain the required syntax for the attribute schema..
        /// </summary>
        internal static string ERROR_DS_ATT_SCHEMA_REQ_SYNTAX {
            get {
                return ResourceManager.GetString("ERROR_DS_ATT_SCHEMA_REQ_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value already exists..
        /// </summary>
        internal static string ERROR_DS_ATT_VAL_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DS_ATT_VAL_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory service attribute or value already exists..
        /// </summary>
        internal static string ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the attribute is not permitted because the attribute is owned by the Security Accounts Manager (SAM)..
        /// </summary>
        internal static string ERROR_DS_ATTRIBUTE_OWNED_BY_SAM {
            get {
                return ResourceManager.GetString("ERROR_DS_ATTRIBUTE_OWNED_BY_SAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute type specified to the directory service is not defined..
        /// </summary>
        internal static string ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED {
            get {
                return ResourceManager.GetString("ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required audit event could not be generated for the operation..
        /// </summary>
        internal static string ERROR_DS_AUDIT_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_DS_AUDIT_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested authentication method is not supported by the server..
        /// </summary>
        internal static string ERROR_DS_AUTH_METHOD_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_DS_AUTH_METHOD_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication mechanism is unknown..
        /// </summary>
        internal static string ERROR_DS_AUTH_UNKNOWN {
            get {
                return ResourceManager.GetString("ERROR_DS_AUTH_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service failed to authorize the request..
        /// </summary>
        internal static string ERROR_DS_AUTHORIZATION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_AUTHORIZATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: class in aux-class list does not exist or is not an auxiliary class..
        /// </summary>
        internal static string ERROR_DS_AUX_CLS_TEST_FAIL {
            get {
                return ResourceManager.GetString("ERROR_DS_AUX_CLS_TEST_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema update operation tried to add a backward link attribute that has no corresponding forward link..
        /// </summary>
        internal static string ERROR_DS_BACKLINK_WITHOUT_LINK {
            get {
                return ResourceManager.GetString("ERROR_DS_BACKLINK_WITHOUT_LINK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute schema has bad syntax..
        /// </summary>
        internal static string ERROR_DS_BAD_ATT_SCHEMA_SYNTAX {
            get {
                return ResourceManager.GetString("ERROR_DS_BAD_ATT_SCHEMA_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hierarchy file is invalid..
        /// </summary>
        internal static string ERROR_DS_BAD_HIERARCHY_FILE {
            get {
                return ResourceManager.GetString("ERROR_DS_BAD_HIERARCHY_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified instance type is not valid..
        /// </summary>
        internal static string ERROR_DS_BAD_INSTANCE_TYPE {
            get {
                return ResourceManager.GetString("ERROR_DS_BAD_INSTANCE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object name has bad syntax..
        /// </summary>
        internal static string ERROR_DS_BAD_NAME_SYNTAX {
            get {
                return ResourceManager.GetString("ERROR_DS_BAD_NAME_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: Rdn-Att-Id has wrong syntax..
        /// </summary>
        internal static string ERROR_DS_BAD_RDN_ATT_ID_SYNTAX {
            get {
                return ResourceManager.GetString("ERROR_DS_BAD_RDN_ATT_ID_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempt to build the hierarchy table failed..
        /// </summary>
        internal static string ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service is busy..
        /// </summary>
        internal static string ERROR_DS_BUSY {
            get {
                return ResourceManager.GetString("ERROR_DS_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not access a partition of the directory service located on a remote server. Make sure at least one server is running for the partition in question..
        /// </summary>
        internal static string ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified attribute is not present, or has no values..
        /// </summary>
        internal static string ERROR_DS_CANT_ADD_ATT_VALUES {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_ADD_ATT_VALUES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not permitted to add an attribute which is owned by the system..
        /// </summary>
        internal static string ERROR_DS_CANT_ADD_SYSTEM_ONLY {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_ADD_SYSTEM_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute is not allowed to be replicated to the GC because of security reasons..
        /// </summary>
        internal static string ERROR_DS_CANT_ADD_TO_GC {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_ADD_TO_GC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute could not be cached..
        /// </summary>
        internal static string ERROR_DS_CANT_CACHE_ATT {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_CACHE_ATT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class could not be cached..
        /// </summary>
        internal static string ERROR_DS_CANT_CACHE_CLASS {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_CACHE_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security principal objects can only be created inside domain naming contexts..
        /// </summary>
        internal static string ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object of this class cannot be created under the schema container. You can only create attribute-schema and class-schema objects under the schema container..
        /// </summary>
        internal static string ERROR_DS_CANT_CREATE_UNDER_SCHEMA {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_CREATE_UNDER_SCHEMA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not permitted to delete a master cross reference..
        /// </summary>
        internal static string ERROR_DS_CANT_DEL_MASTER_CROSSREF {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_DEL_MASTER_CROSSREF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested delete operation could not be performed..
        /// </summary>
        internal static string ERROR_DS_CANT_DELETE {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DSA object cannot be deleted..
        /// </summary>
        internal static string ERROR_DS_CANT_DELETE_DSA_OBJ {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_DELETE_DSA_OBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writeable NCs prevent this DC from demoting..
        /// </summary>
        internal static string ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The alias cannot be dereferenced..
        /// </summary>
        internal static string ERROR_DS_CANT_DEREF_ALIAS {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_DEREF_ALIAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DS cannot derive a service principal name (SPN) with which to mutually authenticate the target server because the server&apos;s domain has been deleted from the forest..
        /// </summary>
        internal static string ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DS cannot derive a service principal name (SPN) with which to mutually authenticate the target server because the corresponding server object in the local DS database has no serverReference attribute..
        /// </summary>
        internal static string ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation couldn&apos;t locate a DC for the source domain..
        /// </summary>
        internal static string ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DSA object could not be found..
        /// </summary>
        internal static string ERROR_DS_CANT_FIND_DSA_OBJ {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_FIND_DSA_OBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The naming context could not be found..
        /// </summary>
        internal static string ERROR_DS_CANT_FIND_EXPECTED_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_FIND_EXPECTED_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The naming context could not be found in the cache..
        /// </summary>
        internal static string ERROR_DS_CANT_FIND_NC_IN_CACHE {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_FIND_NC_IN_CACHE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object and parent must be of the same type, either both masters or both replicas..
        /// </summary>
        internal static string ERROR_DS_CANT_MIX_MASTER_AND_REPS {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MIX_MASTER_AND_REPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service detected an attempt to modify the object class of an object..
        /// </summary>
        internal static string ERROR_DS_CANT_MOD_OBJ_CLASS {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MOD_OBJ_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change the primary group ID of a domain controller account..
        /// </summary>
        internal static string ERROR_DS_CANT_MOD_PRIMARYGROUPID {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MOD_PRIMARYGROUPID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute cannot be modified because it is owned by the system..
        /// </summary>
        internal static string ERROR_DS_CANT_MOD_SYSTEM_ONLY {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MOD_SYSTEM_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-domain move of non-empty account groups is not allowed..
        /// </summary>
        internal static string ERROR_DS_CANT_MOVE_ACCOUNT_GROUP {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MOVE_ACCOUNT_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-domain move of non-empty basic application groups is not allowed..
        /// </summary>
        internal static string ERROR_DS_CANT_MOVE_APP_BASIC_GROUP {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MOVE_APP_BASIC_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-domain move of non-empty query based application groups is not allowed..
        /// </summary>
        internal static string ERROR_DS_CANT_MOVE_APP_QUERY_GROUP {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MOVE_APP_QUERY_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object being moved across-domains is already known to be deleted by the destination server. The source server does not have the latest version of the source object..
        /// </summary>
        internal static string ERROR_DS_CANT_MOVE_DELETED_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MOVE_DELETED_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-domain move of non-empty resource groups is not allowed..
        /// </summary>
        internal static string ERROR_DS_CANT_MOVE_RESOURCE_GROUP {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_MOVE_RESOURCE_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service can perform the requested operation only on a leaf object..
        /// </summary>
        internal static string ERROR_DS_CANT_ON_NON_LEAF {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_ON_NON_LEAF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service cannot perform the requested operation on the RDN attribute of an object..
        /// </summary>
        internal static string ERROR_DS_CANT_ON_RDN {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_ON_RDN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute cannot be removed because it is not present on the object..
        /// </summary>
        internal static string ERROR_DS_CANT_REM_MISSING_ATT {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_REM_MISSING_ATT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute value cannot be removed because it is not present on the object..
        /// </summary>
        internal static string ERROR_DS_CANT_REM_MISSING_ATT_VAL {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_REM_MISSING_ATT_VAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute could not be removed from the cache..
        /// </summary>
        internal static string ERROR_DS_CANT_REMOVE_ATT_CACHE {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_REMOVE_ATT_CACHE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class could not be removed from the cache..
        /// </summary>
        internal static string ERROR_DS_CANT_REMOVE_CLASS_CACHE {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_REMOVE_CLASS_CACHE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot replace the hidden record..
        /// </summary>
        internal static string ERROR_DS_CANT_REPLACE_HIDDEN_REC {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_REPLACE_HIDDEN_REC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search failed to retrieve attributes from the database..
        /// </summary>
        internal static string ERROR_DS_CANT_RETRIEVE_ATTS {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_RETRIEVE_ATTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The child object could not be retrieved..
        /// </summary>
        internal static string ERROR_DS_CANT_RETRIEVE_CHILD {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_RETRIEVE_CHILD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The distinguished name attribute could not be read..
        /// </summary>
        internal static string ERROR_DS_CANT_RETRIEVE_DN {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_RETRIEVE_DN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance type attribute could not be retrieved..
        /// </summary>
        internal static string ERROR_DS_CANT_RETRIEVE_INSTANCE {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_RETRIEVE_INSTANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Security Descriptor attribute could not be read..
        /// </summary>
        internal static string ERROR_DS_CANT_RETRIEVE_SD {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_RETRIEVE_SD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory Service cannot start..
        /// </summary>
        internal static string ERROR_DS_CANT_START {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Critical Directory Service System objects cannot be deleted during tree delete operations. The tree delete may have been partially performed..
        /// </summary>
        internal static string ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t move objects with memberships across domain boundaries as once moved, this would violate the membership conditions of the account group. Remove the object from any account group memberships and retry..
        /// </summary>
        internal static string ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS {
            get {
                return ResourceManager.GetString("ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot be performed because child objects exist. This operation can only be performed on a leaf object..
        /// </summary>
        internal static string ERROR_DS_CHILDREN_EXIST {
            get {
                return ResourceManager.GetString("ERROR_DS_CHILDREN_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class of the object must be structural; you cannot instantiate an abstract class..
        /// </summary>
        internal static string ERROR_DS_CLASS_MUST_BE_CONCRETE {
            get {
                return ResourceManager.GetString("ERROR_DS_CLASS_MUST_BE_CONCRETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object must be of class DSA..
        /// </summary>
        internal static string ERROR_DS_CLASS_NOT_DSA {
            get {
                return ResourceManager.GetString("ERROR_DS_CLASS_NOT_DSA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A referral loop was detected by the client..
        /// </summary>
        internal static string ERROR_DS_CLIENT_LOOP {
            get {
                return ResourceManager.GetString("ERROR_DS_CLIENT_LOOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal error has occurred..
        /// </summary>
        internal static string ERROR_DS_CODE_INCONSISTENCY {
            get {
                return ResourceManager.GetString("ERROR_DS_CODE_INCONSISTENCY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The compare response was false..
        /// </summary>
        internal static string ERROR_DS_COMPARE_FALSE {
            get {
                return ResourceManager.GetString("ERROR_DS_COMPARE_FALSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The compare response was true..
        /// </summary>
        internal static string ERROR_DS_COMPARE_TRUE {
            get {
                return ResourceManager.GetString("ERROR_DS_COMPARE_TRUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This request requires a secure connection..
        /// </summary>
        internal static string ERROR_DS_CONFIDENTIALITY_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_DS_CONFIDENTIALITY_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory configuration parameter is missing from the registry..
        /// </summary>
        internal static string ERROR_DS_CONFIG_PARAM_MISSING {
            get {
                return ResourceManager.GetString("ERROR_DS_CONFIG_PARAM_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constraint violation occurred..
        /// </summary>
        internal static string ERROR_DS_CONSTRAINT_VIOLATION {
            get {
                return ResourceManager.GetString("ERROR_DS_CONSTRAINT_VIOLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modification of a constructed attribute is not allowed..
        /// </summary>
        internal static string ERROR_DS_CONSTRUCTED_ATT_MOD {
            get {
                return ResourceManager.GetString("ERROR_DS_CONSTRUCTED_ATT_MOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified control is not supported by the server..
        /// </summary>
        internal static string ERROR_DS_CONTROL_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DS_CONTROL_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested FSMO operation failed. The current FSMO holder could not be contacted..
        /// </summary>
        internal static string ERROR_DS_COULDNT_CONTACT_FSMO {
            get {
                return ResourceManager.GetString("ERROR_DS_COULDNT_CONTACT_FSMO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service failed to identify the list of objects to delete while attempting a tree deletion..
        /// </summary>
        internal static string ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE {
            get {
                return ResourceManager.GetString("ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service failed to lock a tree in preparation for a tree deletion because the tree was in use..
        /// </summary>
        internal static string ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE {
            get {
                return ResourceManager.GetString("ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While processing a change to the DNS Host Name for an object, the Service Principal Name values could not be kept in sync..
        /// </summary>
        internal static string ERROR_DS_COULDNT_UPDATE_SPNS {
            get {
                return ResourceManager.GetString("ERROR_DS_COULDNT_UPDATE_SPNS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempt to count the address book indices failed..
        /// </summary>
        internal static string ERROR_DS_COUNTING_AB_INDICES_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_COUNTING_AB_INDICES_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory cannot validate the proposed naming context name because it does not hold a replica of the naming context above the proposed naming context. Please ensure that the domain naming master role is held by a server that is configured as a global catalog server, and that the server is up to date with its replication partners. (Applies only to Windows 2000 Domain Naming masters).
        /// </summary>
        internal static string ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE {
            get {
                return ResourceManager.GetString("ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory cannot validate the proposed naming context (or partition) name because it does not hold a replica nor can it contact a replica of the naming context above the proposed naming context. Please ensure that the parent naming context is properly registered in DNS, and at least one replica of this naming context is reachable by the Domain Naming master..
        /// </summary>
        internal static string ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 {
            get {
                return ResourceManager.GetString("ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested cross-domain move operation could not be performed..
        /// </summary>
        internal static string ERROR_DS_CROSS_DOM_MOVE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_CROSS_DOM_MOVE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cross-domain move operation failed such that two versions of the moved object exist - one each in the source and destination domains. The destination object needs to be removed to restore the system to a consistent state..
        /// </summary>
        internal static string ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD {
            get {
                return ResourceManager.GetString("ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modification of a DN across a naming context is not permitted..
        /// </summary>
        internal static string ERROR_DS_CROSS_NC_DN_RENAME {
            get {
                return ResourceManager.GetString("ERROR_DS_CROSS_NC_DN_RENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cross reference is in use locally with the same name..
        /// </summary>
        internal static string ERROR_DS_CROSS_REF_BUSY {
            get {
                return ResourceManager.GetString("ERROR_DS_CROSS_REF_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cross reference already exists..
        /// </summary>
        internal static string ERROR_DS_CROSS_REF_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DS_CROSS_REF_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A database error has occurred..
        /// </summary>
        internal static string ERROR_DS_DATABASE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_DATABASE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A decoding error has occurred..
        /// </summary>
        internal static string ERROR_DS_DECODING_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_DECODING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation requires that destination domain auditing be enabled..
        /// </summary>
        internal static string ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED {
            get {
                return ResourceManager.GetString("ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination domain must be in the forest..
        /// </summary>
        internal static string ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST {
            get {
                return ResourceManager.GetString("ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service cannot perform the requested operation because the servers involved are of different replication epochs (which is usually related to a domain rename that is in progress)..
        /// </summary>
        internal static string ERROR_DS_DIFFERENT_REPL_EPOCHS {
            get {
                return ResourceManager.GetString("ERROR_DS_DIFFERENT_REPL_EPOCHS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation is not allowed on an object under the system container..
        /// </summary>
        internal static string ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER {
            get {
                return ResourceManager.GetString("ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DSA operation is unable to proceed because of a DNS lookup failure..
        /// </summary>
        internal static string ERROR_DS_DNS_LOOKUP_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_DS_DNS_LOOKUP_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Directory Service cannot perform the requested operation because a domain rename operation is in progress..
        /// </summary>
        internal static string ERROR_DS_DOMAIN_RENAME_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_DS_DOMAIN_RENAME_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the operating system installed is incompatible with the current domain functional level. You must upgrade to a new version of the operating system before this server can become a domain controller in this domain..
        /// </summary>
        internal static string ERROR_DS_DOMAIN_VERSION_TOO_HIGH {
            get {
                return ResourceManager.GetString("ERROR_DS_DOMAIN_VERSION_TOO_HIGH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the operating system installed on this server no longer supports the current domain functional level. You must raise the domain functional level before this server can become a domain controller in this domain..
        /// </summary>
        internal static string ERROR_DS_DOMAIN_VERSION_TOO_LOW {
            get {
                return ResourceManager.GetString("ERROR_DS_DOMAIN_VERSION_TOO_LOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication synchronization attempt was abandoned because of a lack of updates..
        /// </summary>
        internal static string ERROR_DS_DRA_ABANDON_SYNC {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_ABANDON_SYNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replication access was denied..
        /// </summary>
        internal static string ERROR_DS_DRA_ACCESS_DENIED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_ACCESS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The distinguished name specified for this replication operation is invalid..
        /// </summary>
        internal static string ERROR_DS_DRA_BAD_DN {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_BAD_DN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation encountered an object with an invalid instance type..
        /// </summary>
        internal static string ERROR_DS_DRA_BAD_INSTANCE_TYPE {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_BAD_INSTANCE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The naming context specified for this replication operation is invalid..
        /// </summary>
        internal static string ERROR_DS_DRA_BAD_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_BAD_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service is too busy to complete the replication operation at this time..
        /// </summary>
        internal static string ERROR_DS_DRA_BUSY {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server specified for this replication operation could not be contacted..
        /// </summary>
        internal static string ERROR_DS_DRA_CONNECTION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_CONNECTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation encountered a database error..
        /// </summary>
        internal static string ERROR_DS_DRA_DB_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_DB_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The distinguished name specified for this replication operation already exists..
        /// </summary>
        internal static string ERROR_DS_DRA_DN_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_DN_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation could not be completed due to a previous schema incompatibility..
        /// </summary>
        internal static string ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server specified for this replication operation was contacted, but that server was unable to contact an additional server needed to complete the operation..
        /// </summary>
        internal static string ERROR_DS_DRA_EXTN_CONNECTION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_EXTN_CONNECTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation failed..
        /// </summary>
        internal static string ERROR_DS_DRA_GENERIC {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_GENERIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronization attempt failed because the destination DC is currently waiting to synchronize new partial attributes from source. This condition is normal if a recent schema change modified the partial attribute set. The destination partial attribute set is not a subset of source partial attribute set..
        /// </summary>
        internal static string ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation encountered a database inconsistency..
        /// </summary>
        internal static string ERROR_DS_DRA_INCONSISTENT_DIT {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_INCONSISTENT_DIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication system encountered an internal error..
        /// </summary>
        internal static string ERROR_DS_DRA_INTERNAL_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_INTERNAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid parameter was specified for this replication operation..
        /// </summary>
        internal static string ERROR_DS_DRA_INVALID_PARAMETER {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_INVALID_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation encountered an error with the mail system..
        /// </summary>
        internal static string ERROR_DS_DRA_MAIL_PROBLEM {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_MAIL_PROBLEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation failed because a required parent object is missing..
        /// </summary>
        internal static string ERROR_DS_DRA_MISSING_PARENT {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_MISSING_PARENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation failed due to a collision of object names..
        /// </summary>
        internal static string ERROR_DS_DRA_NAME_COLLISION {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_NAME_COLLISION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The naming context is in the process of being removed or is not replicated from the specified server..
        /// </summary>
        internal static string ERROR_DS_DRA_NO_REPLICA {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_NO_REPLICA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation is not supported by this version of the directory service..
        /// </summary>
        internal static string ERROR_DS_DRA_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The naming context cannot be removed because it is replicated to another server..
        /// </summary>
        internal static string ERROR_DS_DRA_OBJ_IS_REP_SOURCE {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_OBJ_IS_REP_SOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication update could not be applied because either the source or the destination has not yet received information regarding a recent cross-domain move operation..
        /// </summary>
        internal static string ERROR_DS_DRA_OBJ_NC_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_OBJ_NC_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation failed to allocate memory..
        /// </summary>
        internal static string ERROR_DS_DRA_OUT_OF_MEM {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_OUT_OF_MEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scheduled replication did not take place because the system was too busy to execute the request within the schedule window. The replication queue is overloaded. Consider reducing the number of partners or decreasing the scheduled replication frequency..
        /// </summary>
        internal static string ERROR_DS_DRA_OUT_SCHEDULE_WINDOW {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_OUT_SCHEDULE_WINDOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation was preempted..
        /// </summary>
        internal static string ERROR_DS_DRA_PREEMPTED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_PREEMPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation failed because the target object referred by a link value is recycled..
        /// </summary>
        internal static string ERROR_DS_DRA_RECYCLED_TARGET {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_RECYCLED_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication reference information for the target server already exists..
        /// </summary>
        internal static string ERROR_DS_DRA_REF_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_REF_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication reference information for the target server does not exist..
        /// </summary>
        internal static string ERROR_DS_DRA_REF_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_REF_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication request has been posted; waiting for reply..
        /// </summary>
        internal static string ERROR_DS_DRA_REPL_PENDING {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_REPL_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication remote procedure call was cancelled..
        /// </summary>
        internal static string ERROR_DS_DRA_RPC_CANCELLED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_RPC_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation could not be completed due to a schema incompatibility..
        /// </summary>
        internal static string ERROR_DS_DRA_SCHEMA_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_SCHEMA_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema information could not be included in the replication request..
        /// </summary>
        internal static string ERROR_DS_DRA_SCHEMA_INFO_SHIP {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_SCHEMA_INFO_SHIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation failed because of a schema mismatch between the servers involved..
        /// </summary>
        internal static string ERROR_DS_DRA_SCHEMA_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_SCHEMA_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication operation was terminated because the system is shutting down..
        /// </summary>
        internal static string ERROR_DS_DRA_SHUTDOWN {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination server is currently rejecting replication requests..
        /// </summary>
        internal static string ERROR_DS_DRA_SINK_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_SINK_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source server is currently rejecting replication requests..
        /// </summary>
        internal static string ERROR_DS_DRA_SOURCE_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_SOURCE_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication synchronization attempt failed because a master replica attempted to sync from a partial replica..
        /// </summary>
        internal static string ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replication source has been reinstalled..
        /// </summary>
        internal static string ERROR_DS_DRA_SOURCE_REINSTALLED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRA_SOURCE_REINSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service binding must be renegotiated due to a change in the server extensions information..
        /// </summary>
        internal static string ERROR_DS_DRS_EXTENSIONS_CHANGED {
            get {
                return ResourceManager.GetString("ERROR_DS_DRS_EXTENSIONS_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation requires a directory service, and none was available..
        /// </summary>
        internal static string ERROR_DS_DS_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_DS_DS_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation can only be performed on an internal master DSA object..
        /// </summary>
        internal static string ERROR_DS_DSA_MUST_BE_INT_MASTER {
            get {
                return ResourceManager.GetString("ERROR_DS_DSA_MUST_BE_INT_MASTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination domain must be in native mode..
        /// </summary>
        internal static string ERROR_DS_DST_DOMAIN_NOT_NATIVE {
            get {
                return ResourceManager.GetString("ERROR_DS_DST_DOMAIN_NOT_NATIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source and destination for a cross-domain move are not in agreement on the naming contexts in the forest. Either source or destination does not have the latest version of the Partitions container..
        /// </summary>
        internal static string ERROR_DS_DST_NC_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_DST_NC_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: duplicate LDAP display name..
        /// </summary>
        internal static string ERROR_DS_DUP_LDAP_DISPLAY_NAME {
            get {
                return ResourceManager.GetString("ERROR_DS_DUP_LDAP_DISPLAY_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: An attribute with the same link identifier already exists..
        /// </summary>
        internal static string ERROR_DS_DUP_LINK_ID {
            get {
                return ResourceManager.GetString("ERROR_DS_DUP_LINK_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: duplicate MAPI identifier..
        /// </summary>
        internal static string ERROR_DS_DUP_MAPI_ID {
            get {
                return ResourceManager.GetString("ERROR_DS_DUP_MAPI_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: Duplicate msDS-INtId. Retry the operation..
        /// </summary>
        internal static string ERROR_DS_DUP_MSDS_INTID {
            get {
                return ResourceManager.GetString("ERROR_DS_DUP_MSDS_INTID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: duplicate OID..
        /// </summary>
        internal static string ERROR_DS_DUP_OID {
            get {
                return ResourceManager.GetString("ERROR_DS_DUP_OID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: duplicate RDN..
        /// </summary>
        internal static string ERROR_DS_DUP_RDN {
            get {
                return ResourceManager.GetString("ERROR_DS_DUP_RDN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: duplicate schema-id GUID..
        /// </summary>
        internal static string ERROR_DS_DUP_SCHEMA_ID_GUID {
            get {
                return ResourceManager.GetString("ERROR_DS_DUP_SCHEMA_ID_GUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested object has a non-unique identifier and cannot be retrieved..
        /// </summary>
        internal static string ERROR_DS_DUPLICATE_ID_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DS_DUPLICATE_ID_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An encoding error has occurred..
        /// </summary>
        internal static string ERROR_DS_ENCODING_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_ENCODING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source and destination of a cross-domain move do not agree on the object&apos;s epoch number. Either source or destination does not have the latest version of the object..
        /// </summary>
        internal static string ERROR_DS_EPOCH_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_EPOCH_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service detected a child partition below the requested partition name. The partition hierarchy must be created in a top down method..
        /// </summary>
        internal static string ERROR_DS_EXISTING_AD_CHILD_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_EXISTING_AD_CHILD_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema deletion failed: class is used as auxiliary class..
        /// </summary>
        internal static string ERROR_DS_EXISTS_IN_AUX_CLS {
            get {
                return ResourceManager.GetString("ERROR_DS_EXISTS_IN_AUX_CLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema deletion failed: attribute is used in may-contain..
        /// </summary>
        internal static string ERROR_DS_EXISTS_IN_MAY_HAVE {
            get {
                return ResourceManager.GetString("ERROR_DS_EXISTS_IN_MAY_HAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema deletion failed: attribute is used in must-contain..
        /// </summary>
        internal static string ERROR_DS_EXISTS_IN_MUST_HAVE {
            get {
                return ResourceManager.GetString("ERROR_DS_EXISTS_IN_MUST_HAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema deletion failed: class is used as poss superior..
        /// </summary>
        internal static string ERROR_DS_EXISTS_IN_POSS_SUP {
            get {
                return ResourceManager.GetString("ERROR_DS_EXISTS_IN_POSS_SUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema deletion failed: attribute is used in rDNAttID..
        /// </summary>
        internal static string ERROR_DS_EXISTS_IN_RDNATTID {
            get {
                return ResourceManager.GetString("ERROR_DS_EXISTS_IN_RDNATTID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema deletion failed: class is used as sub class..
        /// </summary>
        internal static string ERROR_DS_EXISTS_IN_SUB_CLS {
            get {
                return ResourceManager.GetString("ERROR_DS_EXISTS_IN_SUB_CLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search filter cannot be recognized..
        /// </summary>
        internal static string ERROR_DS_FILTER_UNKNOWN {
            get {
                return ResourceManager.GetString("ERROR_DS_FILTER_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Filter was passed that uses constructed attributes..
        /// </summary>
        internal static string ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS {
            get {
                return ResourceManager.GetString("ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the operating system is incompatible with the current AD DS forest functional level or AD LDS Configuration Set functional level. You must upgrade to a new version of the operating system before this server can become an AD DS Domain Controller or add an AD LDS Instance in this AD DS Forest or AD LDS Configuration Set..
        /// </summary>
        internal static string ERROR_DS_FOREST_VERSION_TOO_HIGH {
            get {
                return ResourceManager.GetString("ERROR_DS_FOREST_VERSION_TOO_HIGH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the operating system installed on this server no longer supports the current AD DS Forest functional level or AD LDS Configuration Set functional level. You must raise the AD DS Forest functional level or AD LDS Configuration Set functional level before this server can become an AD DS Domain Controller or an AD LDS Instance in this Forest or Configuration Set..
        /// </summary>
        internal static string ERROR_DS_FOREST_VERSION_TOO_LOW {
            get {
                return ResourceManager.GetString("ERROR_DS_FOREST_VERSION_TOO_LOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to contact the global catalog server..
        /// </summary>
        internal static string ERROR_DS_GC_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_DS_GC_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation can be performed only on a global catalog server..
        /// </summary>
        internal static string ERROR_DS_GC_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_DS_GC_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The global catalog verification failed. The global catalog is not available or does not support the operation. Some part of the directory is currently not available..
        /// </summary>
        internal static string ERROR_DS_GCVERIFY_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_GCVERIFY_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A directory service error has occurred..
        /// </summary>
        internal static string ERROR_DS_GENERIC_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_GENERIC_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A global group cannot have a cross-domain member..
        /// </summary>
        internal static string ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A global group cannot have a local group as a member..
        /// </summary>
        internal static string ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A global group cannot have a universal group as a member..
        /// </summary>
        internal static string ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute GOVERNSID is missing..
        /// </summary>
        internal static string ERROR_DS_GOVERNSID_MISSING {
            get {
                return ResourceManager.GetString("ERROR_DS_GOVERNSID_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group cannot be converted due to attribute restrictions on the requested group type..
        /// </summary>
        internal static string ERROR_DS_GROUP_CONVERSION_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_GROUP_CONVERSION_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A group with primary members cannot change to a security-disabled group..
        /// </summary>
        internal static string ERROR_DS_HAVE_PRIMARY_MEMBERS {
            get {
                return ResourceManager.GetString("ERROR_DS_HAVE_PRIMARY_MEMBERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The allocation of the hierarchy table failed..
        /// </summary>
        internal static string ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The functional level of the domain (or forest) cannot be lowered to the requested value..
        /// </summary>
        internal static string ERROR_DS_HIGH_DSA_VERSION {
            get {
                return ResourceManager.GetString("ERROR_DS_HIGH_DSA_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt is made to modify the base schema..
        /// </summary>
        internal static string ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD {
            get {
                return ResourceManager.GetString("ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal modify operation. Some aspect of the modification is not permitted..
        /// </summary>
        internal static string ERROR_DS_ILLEGAL_MOD_OPERATION {
            get {
                return ResourceManager.GetString("ERROR_DS_ILLEGAL_MOD_OPERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object cannot be added because the parent is not on the list of possible superiors..
        /// </summary>
        internal static string ERROR_DS_ILLEGAL_SUPERIOR {
            get {
                return ResourceManager.GetString("ERROR_DS_ILLEGAL_SUPERIOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This object may not be moved across domain boundaries either because cross-domain moves for this class are disallowed, or the object has some special characteristics, e.g.: trust account or restricted RID, which prevent its move..
        /// </summary>
        internal static string ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION {
            get {
                return ResourceManager.GetString("ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inappropriate authentication..
        /// </summary>
        internal static string ERROR_DS_INAPPROPRIATE_AUTH {
            get {
                return ResourceManager.GetString("ERROR_DS_INAPPROPRIATE_AUTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inappropriate matching..
        /// </summary>
        internal static string ERROR_DS_INAPPROPRIATE_MATCHING {
            get {
                return ResourceManager.GetString("ERROR_DS_INAPPROPRIATE_MATCHING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to continue operation because multiple conflicting controls were used..
        /// </summary>
        internal static string ERROR_DS_INCOMPATIBLE_CONTROLS_USED {
            get {
                return ResourceManager.GetString("ERROR_DS_INCOMPATIBLE_CONTROLS_USED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the operating system installed on this server is incompatible with the functional level of the domain or forest..
        /// </summary>
        internal static string ERROR_DS_INCOMPATIBLE_VERSION {
            get {
                return ResourceManager.GetString("ERROR_DS_INCOMPATIBLE_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation could not be performed because the directory service is not the master for that type of operation..
        /// </summary>
        internal static string ERROR_DS_INCORRECT_ROLE_OWNER {
            get {
                return ResourceManager.GetString("ERROR_DS_INCORRECT_ROLE_OWNER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory Services could not start..
        /// </summary>
        internal static string ERROR_DS_INIT_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_DS_INIT_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory Services could not start because of the following error: %1. Error Status: 0x%2. Please click OK to shutdown the system. You can use the recovery console to diagnose the system further..
        /// </summary>
        internal static string ERROR_DS_INIT_FAILURE_CONSOLE {
            get {
                return ResourceManager.GetString("ERROR_DS_INIT_FAILURE_CONSOLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replica/child install failed to read the objectVersion attribute in the SCHEMA section of the file schema.ini in the system32 directory..
        /// </summary>
        internal static string ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE {
            get {
                return ResourceManager.GetString("ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replica/child install failed to get the objectVersion attribute on the schema container on the source DC. Either the attribute is missing on the schema container or the credentials supplied do not have permission to read it..
        /// </summary>
        internal static string ERROR_DS_INSTALL_NO_SRC_SCH_VERSION {
            get {
                return ResourceManager.GetString("ERROR_DS_INSTALL_NO_SRC_SCH_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the directory service schema of the source forest is not compatible with the version of directory service on this computer..
        /// </summary>
        internal static string ERROR_DS_INSTALL_SCHEMA_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_INSTALL_SCHEMA_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient access rights to perform the operation..
        /// </summary>
        internal static string ERROR_DS_INSUFF_ACCESS_RIGHTS {
            get {
                return ResourceManager.GetString("ERROR_DS_INSUFF_ACCESS_RIGHTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient attributes were given to create an object. This object may not exist because it may have been deleted and already garbage collected..
        /// </summary>
        internal static string ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service encountered an internal failure..
        /// </summary>
        internal static string ERROR_DS_INTERNAL_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_DS_INTERNAL_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute syntax specified to the directory service is invalid..
        /// </summary>
        internal static string ERROR_DS_INVALID_ATTRIBUTE_SYNTAX {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_ATTRIBUTE_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema object could not be found..
        /// </summary>
        internal static string ERROR_DS_INVALID_DMD {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_DMD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid dn syntax has been specified..
        /// </summary>
        internal static string ERROR_DS_INVALID_DN_SYNTAX {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_DN_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified group type is invalid..
        /// </summary>
        internal static string ERROR_DS_INVALID_GROUP_TYPE {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_GROUP_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The LDAP display name of the class or attribute contains non-ASCII characters..
        /// </summary>
        internal static string ERROR_DS_INVALID_LDAP_DISPLAY_NAME {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_LDAP_DISPLAY_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Service Principal Name (SPN) could not be constructed because the provided hostname is not in the necessary format..
        /// </summary>
        internal static string ERROR_DS_INVALID_NAME_FOR_SPN {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_NAME_FOR_SPN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The role owner attribute could not be read..
        /// </summary>
        internal static string ERROR_DS_INVALID_ROLE_OWNER {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_ROLE_OWNER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Directory Service cannot process the script because it is invalid..
        /// </summary>
        internal static string ERROR_DS_INVALID_SCRIPT {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_SCRIPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search flags for the attribute are invalid. The ANR bit is valid only on attributes of Unicode or Teletex strings..
        /// </summary>
        internal static string ERROR_DS_INVALID_SEARCH_FLAG {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_SEARCH_FLAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search flags for the attribute are invalid. The subtree index bit is valid only on single valued attributes..
        /// </summary>
        internal static string ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search flags for the attribute are invalid. The tuple index bit is valid only on attributes of Unicode strings..
        /// </summary>
        internal static string ERROR_DS_INVALID_SEARCH_FLAG_TUPLE {
            get {
                return ResourceManager.GetString("ERROR_DS_INVALID_SEARCH_FLAG_TUPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object is a leaf object..
        /// </summary>
        internal static string ERROR_DS_IS_LEAF {
            get {
                return ResourceManager.GetString("ERROR_DS_IS_LEAF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object requested was not found, but an object with that key was found..
        /// </summary>
        internal static string ERROR_DS_KEY_NOT_UNIQUE {
            get {
                return ResourceManager.GetString("ERROR_DS_KEY_NOT_UNIQUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The LDAP servers network send queue has filled up because the client is not processing the results of its requests fast enough. No more requests will be processed until the client catches up. If the client does not catch up then it will be disconnected..
        /// </summary>
        internal static string ERROR_DS_LDAP_SEND_QUEUE_FULL {
            get {
                return ResourceManager.GetString("ERROR_DS_LDAP_SEND_QUEUE_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: There are no link identifiers available..
        /// </summary>
        internal static string ERROR_DS_LINK_ID_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_DS_LINK_ID_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local group cannot have another cross domain local group as a member..
        /// </summary>
        internal static string ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local error has occurred..
        /// </summary>
        internal static string ERROR_DS_LOCAL_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_LOCAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local group can only be a member of other local groups in the same domain..
        /// </summary>
        internal static string ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY {
            get {
                return ResourceManager.GetString("ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A loop has been detected..
        /// </summary>
        internal static string ERROR_DS_LOOP_DETECT {
            get {
                return ResourceManager.GetString("ERROR_DS_LOOP_DETECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The functional level of the domain (or forest) cannot be raised to the requested value, because there exist one or more domain controllers in the domain (or forest) that are at a lower incompatible functional level..
        /// </summary>
        internal static string ERROR_DS_LOW_DSA_VERSION {
            get {
                return ResourceManager.GetString("ERROR_DS_LOW_DSA_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The machine account was created pre-NT4. The account needs to be recreated..
        /// </summary>
        internal static string ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 {
            get {
                return ResourceManager.GetString("ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your computer could not be joined to the domain. You have exceeded the maximum number of computer accounts you are allowed to create in this domain. Contact your system administrator to have this limit reset or increased..
        /// </summary>
        internal static string ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation must be performed at a master DSA..
        /// </summary>
        internal static string ERROR_DS_MASTERDSA_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_DS_MASTERDSA_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum size of an object has been exceeded..
        /// </summary>
        internal static string ERROR_DS_MAX_OBJ_SIZE_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DS_MAX_OBJ_SIZE_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service evaluated group memberships locally..
        /// </summary>
        internal static string ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY {
            get {
                return ResourceManager.GetString("ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expected attribute is missing..
        /// </summary>
        internal static string ERROR_DS_MISSING_EXPECTED_ATT {
            get {
                return ResourceManager.GetString("ERROR_DS_MISSING_EXPECTED_ATT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service is missing mandatory configuration information, and is unable to determine the ownership of floating single-master operation roles..
        /// </summary>
        internal static string ERROR_DS_MISSING_FSMO_SETTINGS {
            get {
                return ResourceManager.GetString("ERROR_DS_MISSING_FSMO_SETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot be performed because the server does not have an infrastructure container in the domain of interest..
        /// </summary>
        internal static string ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER {
            get {
                return ResourceManager.GetString("ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required attribute is missing..
        /// </summary>
        internal static string ERROR_DS_MISSING_REQUIRED_ATT {
            get {
                return ResourceManager.GetString("ERROR_DS_MISSING_REQUIRED_ATT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No superior reference has been configured for the directory service. The directory service is therefore unable to issue referrals to objects outside this forest..
        /// </summary>
        internal static string ERROR_DS_MISSING_SUPREF {
            get {
                return ResourceManager.GetString("ERROR_DS_MISSING_SUPREF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A system flag has been set on the object and does not allow the object to be moved or renamed..
        /// </summary>
        internal static string ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG {
            get {
                return ResourceManager.GetString("ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename or move operations on naming context heads or read-only objects are not allowed..
        /// </summary>
        internal static string ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE {
            get {
                return ResourceManager.GetString("ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This object is not allowed to change its grandparent container. Moves are not forbidden on this object, but are restricted to sibling containers..
        /// </summary>
        internal static string ERROR_DS_MODIFYDN_WRONG_GRANDPARENT {
            get {
                return ResourceManager.GetString("ERROR_DS_MODIFYDN_WRONG_GRANDPARENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For security reasons, the operation must be run on the destination DC..
        /// </summary>
        internal static string ERROR_DS_MUST_BE_RUN_ON_DST_DC {
            get {
                return ResourceManager.GetString("ERROR_DS_MUST_BE_RUN_ON_DST_DC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name translation: Unable to resolve completely, only the domain was found..
        /// </summary>
        internal static string ERROR_DS_NAME_ERROR_DOMAIN_ONLY {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_ERROR_DOMAIN_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name translation: Input name found, but not the associated output format..
        /// </summary>
        internal static string ERROR_DS_NAME_ERROR_NO_MAPPING {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_ERROR_NO_MAPPING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name translation: Unable to perform purely syntactical mapping at the client without going out to the wire..
        /// </summary>
        internal static string ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name translation: Could not find the name or insufficient right to see name..
        /// </summary>
        internal static string ERROR_DS_NAME_ERROR_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_ERROR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name translation: Input name mapped to more than one output name..
        /// </summary>
        internal static string ERROR_DS_NAME_ERROR_NOT_UNIQUE {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_ERROR_NOT_UNIQUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name translation: Generic processing error..
        /// </summary>
        internal static string ERROR_DS_NAME_ERROR_RESOLVING {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_ERROR_RESOLVING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve completely, a referral to another forest is generated..
        /// </summary>
        internal static string ERROR_DS_NAME_ERROR_TRUST_REFERRAL {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_ERROR_TRUST_REFERRAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested name already exists as a unique identifier..
        /// </summary>
        internal static string ERROR_DS_NAME_NOT_UNIQUE {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_NOT_UNIQUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name reference is invalid..
        /// </summary>
        internal static string ERROR_DS_NAME_REFERENCE_INVALID {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_REFERENCE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name is too long..
        /// </summary>
        internal static string ERROR_DS_NAME_TOO_LONG {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_TOO_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name has too many parts..
        /// </summary>
        internal static string ERROR_DS_NAME_TOO_MANY_PARTS {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_TOO_MANY_PARTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service cannot get the attribute type for a name..
        /// </summary>
        internal static string ERROR_DS_NAME_TYPE_UNKNOWN {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_TYPE_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service encountered an error parsing a name..
        /// </summary>
        internal static string ERROR_DS_NAME_UNPARSEABLE {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_UNPARSEABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name value is too long..
        /// </summary>
        internal static string ERROR_DS_NAME_VALUE_TOO_LONG {
            get {
                return ResourceManager.GetString("ERROR_DS_NAME_VALUE_TOO_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only DSAs configured to be Global Catalog servers should be allowed to hold the Domain Naming Master FSMO role. (Applies only to Windows 2000 servers).
        /// </summary>
        internal static string ERROR_DS_NAMING_MASTER_GC {
            get {
                return ResourceManager.GetString("ERROR_DS_NAMING_MASTER_GC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a naming violation..
        /// </summary>
        internal static string ERROR_DS_NAMING_VIOLATION {
            get {
                return ResourceManager.GetString("ERROR_DS_NAMING_VIOLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A naming context head must be the immediate child of another naming context head, not of an interior node..
        /// </summary>
        internal static string ERROR_DS_NC_MUST_HAVE_NC_PARENT {
            get {
                return ResourceManager.GetString("ERROR_DS_NC_MUST_HAVE_NC_PARENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested domain could not be deleted because there exist domain controllers that still host this domain..
        /// </summary>
        internal static string ERROR_DS_NC_STILL_HAS_DSAS {
            get {
                return ResourceManager.GetString("ERROR_DS_NC_STILL_HAS_DSAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified naming context is missing a cross reference..
        /// </summary>
        internal static string ERROR_DS_NCNAME_MISSING_CR_REF {
            get {
                return ResourceManager.GetString("ERROR_DS_NCNAME_MISSING_CR_REF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object must be a naming context..
        /// </summary>
        internal static string ERROR_DS_NCNAME_MUST_BE_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_NCNAME_MUST_BE_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory service attribute or value does not exist..
        /// </summary>
        internal static string ERROR_DS_NO_ATTRIBUTE_OR_VALUE {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_ATTRIBUTE_OR_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The forest functional level cannot be raised to the requested value since one or more domains are still in mixed domain mode. All domains in the forest must be in native mode, for you to raise the forest functional level..
        /// </summary>
        internal static string ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chained evaluation is not permitted..
        /// </summary>
        internal static string ERROR_DS_NO_CHAINED_EVAL {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_CHAINED_EVAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chaining is not permitted..
        /// </summary>
        internal static string ERROR_DS_NO_CHAINING {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_CHAINING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The checkpoint with the PDC could not be taken because there too many modifications being processed currently..
        /// </summary>
        internal static string ERROR_DS_NO_CHECKPOINT_WITH_PDC {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_CHECKPOINT_WITH_PDC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cross reference for the specified naming context could not be found..
        /// </summary>
        internal static string ERROR_DS_NO_CROSSREF_FOR_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_CROSSREF_FOR_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create name for deleted object..
        /// </summary>
        internal static string ERROR_DS_NO_DELETED_NAME {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_DELETED_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Foreign security principals cannot be members of universal groups..
        /// </summary>
        internal static string ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service has exhausted the pool of relative identifiers..
        /// </summary>
        internal static string ERROR_DS_NO_MORE_RIDS {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_MORE_RIDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: No values for msDS-IntId are available..
        /// </summary>
        internal static string ERROR_DS_NO_MSDS_INTID {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_MSDS_INTID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot nest global groups in a mixed domain if the group is security-enabled..
        /// </summary>
        internal static string ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot nest local groups in a mixed domain if the group is security-enabled..
        /// </summary>
        internal static string ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NTDS Settings object for the domain controller does not exist..
        /// </summary>
        internal static string ERROR_DS_NO_NTDSA_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_NTDSA_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move operations on objects in the schema naming context are not allowed..
        /// </summary>
        internal static string ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation could not be performed because the object&apos;s parent is either uninstantiated or deleted..
        /// </summary>
        internal static string ERROR_DS_NO_PARENT_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_PARENT_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection between client and server requires packet privacy or better..
        /// </summary>
        internal static string ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to add an object of a class that does not have an RDN defined in the schema..
        /// </summary>
        internal static string ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find a valid security descriptor reference domain for this partition..
        /// </summary>
        internal static string ERROR_DS_NO_REF_DOMAIN {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_REF_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of the requested attributes were found on the objects..
        /// </summary>
        internal static string ERROR_DS_NO_REQUESTED_ATTS_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_REQUESTED_ATTS_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No results were returned..
        /// </summary>
        internal static string ERROR_DS_NO_RESULTS_RETURNED {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_RESULTS_RETURNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service was unable to allocate a relative identifier..
        /// </summary>
        internal static string ERROR_DS_NO_RIDS_ALLOCATED {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_RIDS_ALLOCATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server object for the domain controller does not exist..
        /// </summary>
        internal static string ERROR_DS_NO_SERVER_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_SERVER_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no such object on the server..
        /// </summary>
        internal static string ERROR_DS_NO_SUCH_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_SUCH_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tree deletions starting at an object which has an NC head as a descendant are not allowed..
        /// </summary>
        internal static string ERROR_DS_NO_TREE_DELETE_ABOVE_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_NO_TREE_DELETE_ABOVE_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested search operation is not supported for ASQ searches..
        /// </summary>
        internal static string ERROR_DS_NON_ASQ_SEARCH {
            get {
                return ResourceManager.GetString("ERROR_DS_NON_ASQ_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested search operation is only supported for base searches..
        /// </summary>
        internal static string ERROR_DS_NON_BASE_SEARCH {
            get {
                return ResourceManager.GetString("ERROR_DS_NON_BASE_SEARCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: attribute in may-contain does not exist..
        /// </summary>
        internal static string ERROR_DS_NONEXISTENT_MAY_HAVE {
            get {
                return ResourceManager.GetString("ERROR_DS_NONEXISTENT_MAY_HAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: attribute in must-contain does not exist..
        /// </summary>
        internal static string ERROR_DS_NONEXISTENT_MUST_HAVE {
            get {
                return ResourceManager.GetString("ERROR_DS_NONEXISTENT_MUST_HAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: class in poss-superiors does not exist..
        /// </summary>
        internal static string ERROR_DS_NONEXISTENT_POSS_SUP {
            get {
                return ResourceManager.GetString("ERROR_DS_NONEXISTENT_POSS_SUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a new mandatory attribute to an existing class, deleting a mandatory attribute from an existing class, or adding an optional attribute to the special class Top that is not a backlink attribute (directly or through inheritance, for example, by adding or deleting an auxiliary class) is not allowed..
        /// </summary>
        internal static string ERROR_DS_NONSAFE_SCHEMA_CHANGE {
            get {
                return ResourceManager.GetString("ERROR_DS_NONSAFE_SCHEMA_CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name does not identify an object; the name identifies a phantom..
        /// </summary>
        internal static string ERROR_DS_NOT_AN_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_DS_NOT_AN_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination of a cross-domain move is not authoritative for the destination naming context..
        /// </summary>
        internal static string ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Global catalog server is not in the closest site..
        /// </summary>
        internal static string ERROR_DS_NOT_CLOSEST {
            get {
                return ResourceManager.GetString("ERROR_DS_NOT_CLOSEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while installing the directory service. For more information, see the event log..
        /// </summary>
        internal static string ERROR_DS_NOT_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_DS_NOT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot be performed on a back link..
        /// </summary>
        internal static string ERROR_DS_NOT_ON_BACKLINK {
            get {
                return ResourceManager.GetString("ERROR_DS_NOT_ON_BACKLINK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified method is not supported..
        /// </summary>
        internal static string ERROR_DS_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_DS_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sort order requested is not supported..
        /// </summary>
        internal static string ERROR_DS_NOT_SUPPORTED_SORT_ORDER {
            get {
                return ResourceManager.GetString("ERROR_DS_NOT_SUPPORTED_SORT_ORDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification filter is too complex..
        /// </summary>
        internal static string ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX {
            get {
                return ResourceManager.GetString("ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Directory Service cannot process the script because of an error..
        /// </summary>
        internal static string ERROR_DS_NTDSCRIPT_PROCESS_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_NTDSCRIPT_PROCESS_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Directory Service cannot parse the script because of a syntax error..
        /// </summary>
        internal static string ERROR_DS_NTDSCRIPT_SYNTAX_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_NTDSCRIPT_SYNTAX_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified class is not defined..
        /// </summary>
        internal static string ERROR_DS_OBJ_CLASS_NOT_DEFINED {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJ_CLASS_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified class is not a subclass..
        /// </summary>
        internal static string ERROR_DS_OBJ_CLASS_NOT_SUBCLASS {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJ_CLASS_NOT_SUBCLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation did not satisfy one or more constraints associated with the class of the object..
        /// </summary>
        internal static string ERROR_DS_OBJ_CLASS_VIOLATION {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJ_CLASS_VIOLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local object with this GUID (dead or alive) already exists..
        /// </summary>
        internal static string ERROR_DS_OBJ_GUID_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJ_GUID_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory object not found..
        /// </summary>
        internal static string ERROR_DS_OBJ_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJ_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to add an object to the directory with a name that is already in use..
        /// </summary>
        internal static string ERROR_DS_OBJ_STRING_NAME_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJ_STRING_NAME_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified object is too large..
        /// </summary>
        internal static string ERROR_DS_OBJ_TOO_LARGE {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJ_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot continue because the object is in the process of being removed..
        /// </summary>
        internal static string ERROR_DS_OBJECT_BEING_REMOVED {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJECT_BEING_REMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object class attribute must be specified..
        /// </summary>
        internal static string ERROR_DS_OBJECT_CLASS_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJECT_CLASS_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result set is too large..
        /// </summary>
        internal static string ERROR_DS_OBJECT_RESULTS_TOO_LARGE {
            get {
                return ResourceManager.GetString("ERROR_DS_OBJECT_RESULTS_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search results exceed the offset range specified..
        /// </summary>
        internal static string ERROR_DS_OFFSET_RANGE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_OFFSET_RANGE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operations error occurred..
        /// </summary>
        internal static string ERROR_DS_OPERATIONS_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_OPERATIONS_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is out of scope..
        /// </summary>
        internal static string ERROR_DS_OUT_OF_SCOPE {
            get {
                return ResourceManager.GetString("ERROR_DS_OUT_OF_SCOPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database is out of version store..
        /// </summary>
        internal static string ERROR_DS_OUT_OF_VERSION_STORE {
            get {
                return ResourceManager.GetString("ERROR_DS_OUT_OF_VERSION_STORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more parameters are illegal..
        /// </summary>
        internal static string ERROR_DS_PARAM_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_PARAM_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Having a parent that is an alias is not permitted. Aliases are leaf objects..
        /// </summary>
        internal static string ERROR_DS_PARENT_IS_AN_ALIAS {
            get {
                return ResourceManager.GetString("ERROR_DS_PARENT_IS_AN_ALIAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another operation which requires exclusive access to the PDC FSMO is already in progress..
        /// </summary>
        internal static string ERROR_DS_PDC_OPERATION_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_DS_PDC_OPERATION_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At this time, it cannot be determined if the branch replication policy is available on the hub domain controller. Please retry at a later time to account for replication latencies..
        /// </summary>
        internal static string ERROR_DS_POLICY_NOT_KNOWN {
            get {
                return ResourceManager.GetString("ERROR_DS_POLICY_NOT_KNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A protocol error occurred..
        /// </summary>
        internal static string ERROR_DS_PROTOCOL_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_PROTOCOL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value for the attribute was not in the acceptable range of values..
        /// </summary>
        internal static string ERROR_DS_RANGE_CONSTRAINT {
            get {
                return ResourceManager.GetString("ERROR_DS_RANGE_CONSTRAINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to add an object using an RDN that is not the RDN defined in the schema..
        /// </summary>
        internal static string ERROR_DS_RDN_DOESNT_MATCH_SCHEMA {
            get {
                return ResourceManager.GetString("ERROR_DS_RDN_DOESNT_MATCH_SCHEMA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed in recalculating validation cache..
        /// </summary>
        internal static string ERROR_DS_RECALCSCHEMA_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_RECALCSCHEMA_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A referral was returned from the server..
        /// </summary>
        internal static string ERROR_DS_REFERRAL {
            get {
                return ResourceManager.GetString("ERROR_DS_REFERRAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The preset referral limit was exceeded..
        /// </summary>
        internal static string ERROR_DS_REFERRAL_LIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DS_REFERRAL_LIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This directory server is shutting down, and cannot take ownership of new floating single-master operation roles..
        /// </summary>
        internal static string ERROR_DS_REFUSING_FSMO_ROLES {
            get {
                return ResourceManager.GetString("ERROR_DS_REFUSING_FSMO_ROLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote create cross reference operation failed on the Domain Naming Master FSMO. The operation&apos;s error is in the extended data..
        /// </summary>
        internal static string ERROR_DS_REMOTE_CROSSREF_OP_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_REMOTE_CROSSREF_OP_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service cannot replicate with this server because the time since the last replication with this server has exceeded the tombstone lifetime..
        /// </summary>
        internal static string ERROR_DS_REPL_LIFETIME_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DS_REPL_LIFETIME_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation not allowed on a disabled cross ref..
        /// </summary>
        internal static string ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR {
            get {
                return ResourceManager.GetString("ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the replicator can perform this function..
        /// </summary>
        internal static string ERROR_DS_REPLICATOR_ONLY {
            get {
                return ResourceManager.GetString("ERROR_DS_REPLICATOR_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: The link identifier is reserved..
        /// </summary>
        internal static string ERROR_DS_RESERVED_LINK_ID {
            get {
                return ResourceManager.GetString("ERROR_DS_RESERVED_LINK_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service was unable to initialize the subsystem that allocates relative identifiers..
        /// </summary>
        internal static string ERROR_DS_RIDMGR_INIT_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_RIDMGR_INIT_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FSMO role ownership could not be verified because its directory partition has not replicated successfully with at least one replication partner..
        /// </summary>
        internal static string ERROR_DS_ROLE_NOT_VERIFIED {
            get {
                return ResourceManager.GetString("ERROR_DS_ROLE_NOT_VERIFIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified root object cannot be a subref..
        /// </summary>
        internal static string ERROR_DS_ROOT_CANT_BE_SUBREF {
            get {
                return ResourceManager.GetString("ERROR_DS_ROOT_CANT_BE_SUBREF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root object must be the head of a naming context. The root object cannot have an instantiated parent..
        /// </summary>
        internal static string ERROR_DS_ROOT_MUST_BE_NC {
            get {
                return ResourceManager.GetString("ERROR_DS_ROOT_MUST_BE_NC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A root object requires a class of &apos;top&apos;..
        /// </summary>
        internal static string ERROR_DS_ROOT_REQUIRES_CLASS_TOP {
            get {
                return ResourceManager.GetString("ERROR_DS_ROOT_REQUIRES_CLASS_TOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Accounts Manager initialization failed because of the following error: %1. Error Status: 0x%2. Please shutdown this system and reboot into Directory Services Restore Mode, check the event log for more detailed information..
        /// </summary>
        internal static string ERROR_DS_SAM_INIT_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_DS_SAM_INIT_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Accounts Manager initialization failed because of the following error: %1. Error Status: 0x%2. Please click OK to shutdown the system. You can use the recovery console to diagnose the system further..
        /// </summary>
        internal static string ERROR_DS_SAM_INIT_FAILURE_CONSOLE {
            get {
                return ResourceManager.GetString("ERROR_DS_SAM_INIT_FAILURE_CONSOLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Account Manager needs to get the boot key from floppy disk..
        /// </summary>
        internal static string ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY {
            get {
                return ResourceManager.GetString("ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Account Manager needs to get the boot password..
        /// </summary>
        internal static string ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD {
            get {
                return ResourceManager.GetString("ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema allocation failed. Please check if the machine is running low on memory..
        /// </summary>
        internal static string ERROR_DS_SCHEMA_ALLOC_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_SCHEMA_ALLOC_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema is not loaded..
        /// </summary>
        internal static string ERROR_DS_SCHEMA_NOT_LOADED {
            get {
                return ResourceManager.GetString("ERROR_DS_SCHEMA_NOT_LOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update is not allowed on this DC because the DC is not the schema FSMO Role Owner..
        /// </summary>
        internal static string ERROR_DS_SCHEMA_UPDATE_DISALLOWED {
            get {
                return ResourceManager.GetString("ERROR_DS_SCHEMA_UPDATE_DISALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security descriptor is invalid..
        /// </summary>
        internal static string ERROR_DS_SEC_DESC_INVALID {
            get {
                return ResourceManager.GetString("ERROR_DS_SEC_DESC_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security descriptor is too short..
        /// </summary>
        internal static string ERROR_DS_SEC_DESC_TOO_SHORT {
            get {
                return ResourceManager.GetString("ERROR_DS_SEC_DESC_TOO_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A security checking error has occurred..
        /// </summary>
        internal static string ERROR_DS_SECURITY_CHECKING_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_SECURITY_CHECKING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modification was not permitted for security reasons..
        /// </summary>
        internal static string ERROR_DS_SECURITY_ILLEGAL_MODIFY {
            get {
                return ResourceManager.GetString("ERROR_DS_SECURITY_ILLEGAL_MODIFY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: range-lower less than range upper..
        /// </summary>
        internal static string ERROR_DS_SEMANTIC_ATT_TEST {
            get {
                return ResourceManager.GetString("ERROR_DS_SEMANTIC_ATT_TEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only an administrator can modify the membership list of an administrative group..
        /// </summary>
        internal static string ERROR_DS_SENSITIVE_GROUP_VIOLATION {
            get {
                return ResourceManager.GetString("ERROR_DS_SENSITIVE_GROUP_VIOLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is not operational..
        /// </summary>
        internal static string ERROR_DS_SERVER_DOWN {
            get {
                return ResourceManager.GetString("ERROR_DS_SERVER_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation could not be performed because the directory service is shutting down..
        /// </summary>
        internal static string ERROR_DS_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("ERROR_DS_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Directory Service failed to enter single user mode..
        /// </summary>
        internal static string ERROR_DS_SINGLE_USER_MODE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_SINGLE_USER_MODE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple values were specified for an attribute that can have only one value..
        /// </summary>
        internal static string ERROR_DS_SINGLE_VALUE_CONSTRAINT {
            get {
                return ResourceManager.GetString("ERROR_DS_SINGLE_VALUE_CONSTRAINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size limit for this request was exceeded..
        /// </summary>
        internal static string ERROR_DS_SIZELIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DS_SIZELIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search requires a SORT control..
        /// </summary>
        internal static string ERROR_DS_SORT_CONTROL_MISSING {
            get {
                return ResourceManager.GetString("ERROR_DS_SORT_CONTROL_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation requires that source domain auditing be enabled..
        /// </summary>
        internal static string ERROR_DS_SOURCE_AUDITING_NOT_ENABLED {
            get {
                return ResourceManager.GetString("ERROR_DS_SOURCE_AUDITING_NOT_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source domain may not be in the same forest as destination..
        /// </summary>
        internal static string ERROR_DS_SOURCE_DOMAIN_IN_FOREST {
            get {
                return ResourceManager.GetString("ERROR_DS_SOURCE_DOMAIN_IN_FOREST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation failed because SPN value provided for addition/modification is not unique forest-wide..
        /// </summary>
        internal static string ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST {
            get {
                return ResourceManager.GetString("ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source and destination for the cross-domain move operation are identical. Caller should use local move operation instead of cross-domain move operation..
        /// </summary>
        internal static string ERROR_DS_SRC_AND_DST_NC_IDENTICAL {
            get {
                return ResourceManager.GetString("ERROR_DS_SRC_AND_DST_NC_IDENTICAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source and destination object must be of the same type..
        /// </summary>
        internal static string ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For security reasons, the source DC must be NT4SP4 or greater..
        /// </summary>
        internal static string ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER {
            get {
                return ResourceManager.GetString("ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source and destination of a cross-domain move do not agree on the identity of the source object. Either source or destination does not have the latest version of the source object..
        /// </summary>
        internal static string ERROR_DS_SRC_GUID_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_SRC_GUID_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source and destination of a cross-domain move do not agree on the object&apos;s current name. Either source or destination does not have the latest version of the object..
        /// </summary>
        internal static string ERROR_DS_SRC_NAME_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_SRC_NAME_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source object must be a group or user..
        /// </summary>
        internal static string ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER {
            get {
                return ResourceManager.GetString("ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source object&apos;s SID already exists in destination forest..
        /// </summary>
        internal static string ERROR_DS_SRC_SID_EXISTS_IN_FOREST {
            get {
                return ResourceManager.GetString("ERROR_DS_SRC_SID_EXISTS_IN_FOREST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema cache load failed to convert the string default SD on a class-schema object..
        /// </summary>
        internal static string ERROR_DS_STRING_SD_CONVERSION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_DS_STRING_SD_CONVERSION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A more secure authentication method is required for this server..
        /// </summary>
        internal static string ERROR_DS_STRONG_AUTH_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_DS_STRONG_AUTH_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: class in subclassof list does not exist or does not satisfy hierarchy rules..
        /// </summary>
        internal static string ERROR_DS_SUB_CLS_TEST_FAIL {
            get {
                return ResourceManager.GetString("ERROR_DS_SUB_CLS_TEST_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parent of a new subref must exist..
        /// </summary>
        internal static string ERROR_DS_SUBREF_MUST_HAVE_PARENT {
            get {
                return ResourceManager.GetString("ERROR_DS_SUBREF_MUST_HAVE_PARENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subtree notifications are only supported on NC heads..
        /// </summary>
        internal static string ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD {
            get {
                return ResourceManager.GetString("ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schema update failed: syntax mismatch..
        /// </summary>
        internal static string ERROR_DS_SYNTAX_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_DS_SYNTAX_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The thread limit for this request was exceeded..
        /// </summary>
        internal static string ERROR_DS_THREAD_LIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DS_THREAD_LIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The time limit for this request was exceeded..
        /// </summary>
        internal static string ERROR_DS_TIMELIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_DS_TIMELIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tree deletion is not finished. The request must be made again to continue deleting the tree..
        /// </summary>
        internal static string ERROR_DS_TREE_DELETE_NOT_FINISHED {
            get {
                return ResourceManager.GetString("ERROR_DS_TREE_DELETE_NOT_FINISHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service was unable to transfer ownership of one or more floating single-master operation roles to other servers..
        /// </summary>
        internal static string ERROR_DS_UNABLE_TO_SURRENDER_ROLES {
            get {
                return ResourceManager.GetString("ERROR_DS_UNABLE_TO_SURRENDER_ROLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service is unavailable..
        /// </summary>
        internal static string ERROR_DS_UNAVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_DS_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server does not support the requested critical extension..
        /// </summary>
        internal static string ERROR_DS_UNAVAILABLE_CRIT_EXTENSION {
            get {
                return ResourceManager.GetString("ERROR_DS_UNAVAILABLE_CRIT_EXTENSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unicodePwd attribute value must be enclosed in double quotes..
        /// </summary>
        internal static string ERROR_DS_UNICODEPWD_NOT_IN_QUOTES {
            get {
                return ResourceManager.GetString("ERROR_DS_UNICODEPWD_NOT_IN_QUOTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A universal group cannot have a local group as a member..
        /// </summary>
        internal static string ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service encountered an unknown failure..
        /// </summary>
        internal static string ERROR_DS_UNKNOWN_ERROR {
            get {
                return ResourceManager.GetString("ERROR_DS_UNKNOWN_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory service request is invalid..
        /// </summary>
        internal static string ERROR_DS_UNKNOWN_OPERATION {
            get {
                return ResourceManager.GetString("ERROR_DS_UNKNOWN_OPERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is unwilling to process the request..
        /// </summary>
        internal static string ERROR_DS_UNWILLING_TO_PERFORM {
            get {
                return ResourceManager.GetString("ERROR_DS_UNWILLING_TO_PERFORM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation failed because UPN value provided for addition/modification is not unique forest-wide..
        /// </summary>
        internal static string ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST {
            get {
                return ResourceManager.GetString("ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user buffer is too small..
        /// </summary>
        internal static string ERROR_DS_USER_BUFFER_TO_SMALL {
            get {
                return ResourceManager.GetString("ERROR_DS_USER_BUFFER_TO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of Windows is not compatible with the behavior version of directory forest, domain or domain controller..
        /// </summary>
        internal static string ERROR_DS_VERSION_CHECK_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_DS_VERSION_CHECK_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target container for a redirection of a well known object container cannot already be a special container..
        /// </summary>
        internal static string ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL {
            get {
                return ResourceManager.GetString("ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The syntax of the linked attribute being added is incorrect. Forward links can only have syntax 2.5.5.1, 2.5.5.7, and 2.5.5.14, and backlinks can only have syntax 2.5.5.1.
        /// </summary>
        internal static string ERROR_DS_WRONG_LINKED_ATT_SYNTAX {
            get {
                return ResourceManager.GetString("ERROR_DS_WRONG_LINKED_ATT_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The OM-Object-Class specified is incorrect for an attribute with the specified syntax..
        /// </summary>
        internal static string ERROR_DS_WRONG_OM_OBJ_CLASS {
            get {
                return ResourceManager.GetString("ERROR_DS_WRONG_OM_OBJ_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The workgroup or domain name is already in use by another computer on the network..
        /// </summary>
        internal static string ERROR_DUP_DOMAINNAME {
            get {
                return ResourceManager.GetString("ERROR_DUP_DOMAINNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You were not connected because a duplicate name exists on the network. If joining a domain, go to System in Control Panel to change the computer name and try again. If joining a workgroup, choose another workgroup name..
        /// </summary>
        internal static string ERROR_DUP_NAME {
            get {
                return ResourceManager.GetString("ERROR_DUP_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name is already in use as either a service name or a service display name..
        /// </summary>
        internal static string ERROR_DUPLICATE_SERVICE_NAME {
            get {
                return ResourceManager.GetString("ERROR_DUPLICATE_SERVICE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified tag is already present..
        /// </summary>
        internal static string ERROR_DUPLICATE_TAG {
            get {
                return ResourceManager.GetString("ERROR_DUPLICATE_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run this application program..
        /// </summary>
        internal static string ERROR_DYNLINK_FROM_INVALID_RING {
            get {
                return ResourceManager.GetString("ERROR_DYNLINK_FROM_INVALID_RING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the extended attribute was denied..
        /// </summary>
        internal static string ERROR_EA_ACCESS_DENIED {
            get {
                return ResourceManager.GetString("ERROR_EA_ACCESS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extended attribute file on the mounted file system is corrupt..
        /// </summary>
        internal static string ERROR_EA_FILE_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_EA_FILE_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extended attributes are inconsistent..
        /// </summary>
        internal static string ERROR_EA_LIST_INCONSISTENT {
            get {
                return ResourceManager.GetString("ERROR_EA_LIST_INCONSISTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extended attribute table file is full..
        /// </summary>
        internal static string ERROR_EA_TABLE_FULL {
            get {
                return ResourceManager.GetString("ERROR_EA_TABLE_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extended attributes did not fit in the buffer..
        /// </summary>
        internal static string ERROR_EAS_DIDNT_FIT {
            get {
                return ResourceManager.GetString("ERROR_EAS_DIDNT_FIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mounted file system does not support extended attributes..
        /// </summary>
        internal static string ERROR_EAS_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_EAS_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log of the subscription is in disabled state, and can not be used to forward events to. The log must first be enabled before the subscription can be activated..
        /// </summary>
        internal static string ERROR_EC_LOG_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_EC_LOG_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscription fails to activate..
        /// </summary>
        internal static string ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE {
            get {
                return ResourceManager.GetString("ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encryption algorithm used on the source file needs a bigger key buffer than the one on the destination file..
        /// </summary>
        internal static string ERROR_EFS_ALG_BLOB_TOO_BIG {
            get {
                return ResourceManager.GetString("ERROR_EFS_ALG_BLOB_TOO_BIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This machine is disabled for file encryption..
        /// </summary>
        internal static string ERROR_EFS_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_EFS_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encryption operation could not be completed because a transaction is active..
        /// </summary>
        internal static string ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION {
            get {
                return ResourceManager.GetString("ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is not trusted for remote encryption operation..
        /// </summary>
        internal static string ERROR_EFS_SERVER_NOT_TRUSTED {
            get {
                return ResourceManager.GetString("ERROR_EFS_SERVER_NOT_TRUSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A newer system is required to decrypt this encrypted file..
        /// </summary>
        internal static string ERROR_EFS_VERSION_NOT_SUPPORT {
            get {
                return ResourceManager.GetString("ERROR_EFS_VERSION_NOT_SUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation requires elevation..
        /// </summary>
        internal static string ERROR_ELEVATION_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_ELEVATION_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The library, drive, or media pool is empty..
        /// </summary>
        internal static string ERROR_EMPTY {
            get {
                return ResourceManager.GetString("ERROR_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file could not be encrypted..
        /// </summary>
        internal static string ERROR_ENCRYPTION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_ENCRYPTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The physical end of the tape has been reached..
        /// </summary>
        internal static string ERROR_END_OF_MEDIA {
            get {
                return ResourceManager.GetString("ERROR_END_OF_MEDIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified Enlistment object could not be opened, because it was not found..
        /// </summary>
        internal static string ERROR_ENLISTMENT_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_ENLISTMENT_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request was rejected because the enlistment in question is not a superior enlistment..
        /// </summary>
        internal static string ERROR_ENLISTMENT_NOT_SUPERIOR {
            get {
                return ResourceManager.GetString("ERROR_ENLISTMENT_NOT_SUPERIOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system could not find the environment option that was entered..
        /// </summary>
        internal static string ERROR_ENVVAR_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_ENVVAR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Physical end of tape encountered..
        /// </summary>
        internal static string ERROR_EOM_OVERFLOW {
            get {
                return ResourceManager.GetString("ERROR_EOM_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more errors occurred while processing the request..
        /// </summary>
        internal static string ERROR_ERRORS_ENCOUNTERED {
            get {
                return ResourceManager.GetString("ERROR_ERRORS_ENCOUNTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Windows Evaluation Notification} The evaluation period for this installation of Windows has expired. This system will shutdown in 1 hour. To restore access to this installation of Windows, please upgrade this installation using a licensed distribution of this product..
        /// </summary>
        internal static string ERROR_EVALUATION_EXPIRATION {
            get {
                return ResourceManager.GetString("ERROR_EVALUATION_EXPIRATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {TDI Event Done} The TDI indication has completed successfully..
        /// </summary>
        internal static string ERROR_EVENT_DONE {
            get {
                return ResourceManager.GetString("ERROR_EVENT_DONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {TDI Event Pending} The TDI indication has entered the pending state..
        /// </summary>
        internal static string ERROR_EVENT_PENDING {
            get {
                return ResourceManager.GetString("ERROR_EVENT_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No event log file could be opened, so the event logging service did not start..
        /// </summary>
        internal static string ERROR_EVENTLOG_CANT_START {
            get {
                return ResourceManager.GetString("ERROR_EVENTLOG_CANT_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event log file has changed between read operations..
        /// </summary>
        internal static string ERROR_EVENTLOG_FILE_CHANGED {
            get {
                return ResourceManager.GetString("ERROR_EVENTLOG_FILE_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event log file is corrupted..
        /// </summary>
        internal static string ERROR_EVENTLOG_FILE_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_EVENTLOG_FILE_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel at index %1!d! of the query can&apos;t be opened..
        /// </summary>
        internal static string ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY {
            get {
                return ResourceManager.GetString("ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel failed to activate..
        /// </summary>
        internal static string ERROR_EVT_CHANNEL_CANNOT_ACTIVATE {
            get {
                return ResourceManager.GetString("ERROR_EVT_CHANNEL_CANNOT_ACTIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified channel could not be found..
        /// </summary>
        internal static string ERROR_EVT_CHANNEL_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_EVT_CHANNEL_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration error..
        /// </summary>
        internal static string ERROR_EVT_CONFIGURATION_ERROR {
            get {
                return ResourceManager.GetString("ERROR_EVT_CONFIGURATION_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event definition could not be found for event ID (%1)..
        /// </summary>
        internal static string ERROR_EVT_EVENT_DEFINITION_NOT_OUND {
            get {
                return ResourceManager.GetString("ERROR_EVT_EVENT_DEFINITION_NOT_OUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template for an event definition cannot be found in the resource (error = %1)..
        /// </summary>
        internal static string ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression can only be followed by a change-of-scope operation if the expression evaluates to a node set and is not already part of another change-of-scope operation..
        /// </summary>
        internal static string ERROR_EVT_FILTER_ALREADYSCOPED {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_ALREADYSCOPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left-hand side arguments to binary operators must be either attributes, nodes or variables. Right-hand side arguments must be constants..
        /// </summary>
        internal static string ERROR_EVT_FILTER_INVARG {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_INVARG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A step operation must involve a node test or, in the case of a predicate, an algebraic expression against which to test each node in the preceeding node set..
        /// </summary>
        internal static string ERROR_EVT_FILTER_INVTEST {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_INVTEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This data type is currently unsupported..
        /// </summary>
        internal static string ERROR_EVT_FILTER_INVTYPE {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_INVTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot perform a step operation from a term that does not represent an element set..
        /// </summary>
        internal static string ERROR_EVT_FILTER_NOTELTSET {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_NOTELTSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A syntax error occurred at position %1!d!.
        /// </summary>
        internal static string ERROR_EVT_FILTER_PARSEERR {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_PARSEERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XPath expression exceeded the supported complexity. Simplify the expression or split it into multiple expressions..
        /// </summary>
        internal static string ERROR_EVT_FILTER_TOO_COMPLEX {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_TOO_COMPLEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected token was encountered..
        /// </summary>
        internal static string ERROR_EVT_FILTER_UNEXPECTEDTOKEN {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_UNEXPECTEDTOKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operator is unsupported by this implementation of the filter..
        /// </summary>
        internal static string ERROR_EVT_FILTER_UNSUPPORTEDOP {
            get {
                return ResourceManager.GetString("ERROR_EVT_FILTER_UNSUPPORTEDOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified channel path is invalid..
        /// </summary>
        internal static string ERROR_EVT_INVALID_CHANNEL_PATH {
            get {
                return ResourceManager.GetString("ERROR_EVT_INVALID_CHANNEL_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel property %1 contains an invalid value. The value has an invalid type, is outside of its valid range, cannot be changed, or is not supported by this type of channel..
        /// </summary>
        internal static string ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE {
            get {
                return ResourceManager.GetString("ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event data raised by the publisher is not compatible with the event template definition in the publisher&apos;s manifest..
        /// </summary>
        internal static string ERROR_EVT_INVALID_EVENT_DATA {
            get {
                return ResourceManager.GetString("ERROR_EVT_INVALID_EVENT_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation cannot be performed over an enabled direct channel. The channel must first be disabled..
        /// </summary>
        internal static string ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL {
            get {
                return ResourceManager.GetString("ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified publisher name is invalid..
        /// </summary>
        internal static string ERROR_EVT_INVALID_PUBLISHER_NAME {
            get {
                return ResourceManager.GetString("ERROR_EVT_INVALID_PUBLISHER_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher property %1 contains an invalid value. The value has an invalid type, is outside of its valid range, cannot be changed, or is not supported by this type of publisher..
        /// </summary>
        internal static string ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE {
            get {
                return ResourceManager.GetString("ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified query is invalid..
        /// </summary>
        internal static string ERROR_EVT_INVALID_QUERY {
            get {
                return ResourceManager.GetString("ERROR_EVT_INVALID_QUERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified XML text was not well-formed. See Extended Error for more details..
        /// </summary>
        internal static string ERROR_EVT_MALFORMED_XML_TEXT {
            get {
                return ResourceManager.GetString("ERROR_EVT_MALFORMED_XML_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of replacements has been reached..
        /// </summary>
        internal static string ERROR_EVT_MAX_INSERTS_REACHED {
            get {
                return ResourceManager.GetString("ERROR_EVT_MAX_INSERTS_REACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message ID for the desired message could not be found..
        /// </summary>
        internal static string ERROR_EVT_MESSAGE_ID_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_EVT_MESSAGE_ID_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The locale specific resource for the desired message is not present..
        /// </summary>
        internal static string ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message resource is present but the message was not found in the message table..
        /// </summary>
        internal static string ERROR_EVT_MESSAGE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_EVT_MESSAGE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registered MSXML doesn&apos;t support validation..
        /// </summary>
        internal static string ERROR_EVT_NON_VALIDATING_MSXML {
            get {
                return ResourceManager.GetString("ERROR_EVT_NON_VALIDATING_MSXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher has been disabled and its resource is not available. This usually occurs when the publisher is in the process of being uninstalled or upgraded..
        /// </summary>
        internal static string ERROR_EVT_PUBLISHER_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_EVT_PUBLISHER_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The publisher metadata cannot be found in the resource..
        /// </summary>
        internal static string ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query result is currently at an invalid position..
        /// </summary>
        internal static string ERROR_EVT_QUERY_RESULT_INVALID_POSITION {
            get {
                return ResourceManager.GetString("ERROR_EVT_QUERY_RESULT_INVALID_POSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query result is stale or invalid and must be recreated. This may be due to the log being cleared or rolling over after the query result was created..
        /// </summary>
        internal static string ERROR_EVT_QUERY_RESULT_STALE {
            get {
                return ResourceManager.GetString("ERROR_EVT_QUERY_RESULT_STALE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The events for a direct channel go directly to a log file and cannot be subscribed to..
        /// </summary>
        internal static string ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL {
            get {
                return ResourceManager.GetString("ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The description string for parameter reference (%1) could not be found..
        /// </summary>
        internal static string ERROR_EVT_UNRESOLVED_PARAMETER_INSERT {
            get {
                return ResourceManager.GetString("ERROR_EVT_UNRESOLVED_PARAMETER_INSERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The substitution string for insert index (%1) could not be found..
        /// </summary>
        internal static string ERROR_EVT_UNRESOLVED_VALUE_INSERT {
            get {
                return ResourceManager.GetString("ERROR_EVT_UNRESOLVED_VALUE_INSERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource is too new and is not supported..
        /// </summary>
        internal static string ERROR_EVT_VERSION_TOO_NEW {
            get {
                return ResourceManager.GetString("ERROR_EVT_VERSION_TOO_NEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource is too old and is not supported..
        /// </summary>
        internal static string ERROR_EVT_VERSION_TOO_OLD {
            get {
                return ResourceManager.GetString("ERROR_EVT_VERSION_TOO_OLD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred in the service when handling the control request..
        /// </summary>
        internal static string ERROR_EXCEPTION_IN_SERVICE {
            get {
                return ResourceManager.GetString("ERROR_EXCEPTION_IN_SERVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exclusive semaphore is owned by another process..
        /// </summary>
        internal static string ERROR_EXCL_SEM_ALREADY_OWNED {
            get {
                return ResourceManager.GetString("ERROR_EXCL_SEM_ALREADY_OWNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image file %1 is signed, unable to modify..
        /// </summary>
        internal static string ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY {
            get {
                return ResourceManager.GetString("ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image file %1 is strong signed, unable to modify..
        /// </summary>
        internal static string ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY {
            get {
                return ResourceManager.GetString("ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of %1 is not compatible with the version of Windows you&apos;re running. Check your computer&apos;s system information and then contact the software publisher..
        /// </summary>
        internal static string ERROR_EXE_MACHINE_TYPE_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_EXE_MACHINE_TYPE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_EXE_MARKED_INVALID {
            get {
                return ResourceManager.GetString("ERROR_EXE_MARKED_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An extended error has occurred..
        /// </summary>
        internal static string ERROR_EXTENDED_ERROR {
            get {
                return ResourceManager.GetString("ERROR_EXTENDED_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Too Much Information} The specified access control list (ACL) contained more information than was expected..
        /// </summary>
        internal static string ERROR_EXTRANEOUS_INFORMATION {
            get {
                return ResourceManager.GetString("ERROR_EXTRANEOUS_INFORMATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail on INT 24..
        /// </summary>
        internal static string ERROR_FAIL_I24 {
            get {
                return ResourceManager.GetString("ERROR_FAIL_I24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No action was taken as a system reboot is required..
        /// </summary>
        internal static string ERROR_FAIL_NOACTION_REBOOT {
            get {
                return ResourceManager.GetString("ERROR_FAIL_NOACTION_REBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation failed. A system reboot has been initiated to roll back changes made..
        /// </summary>
        internal static string ERROR_FAIL_REBOOT_INITIATED {
            get {
                return ResourceManager.GetString("ERROR_FAIL_REBOOT_INITIATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation failed. A system reboot is required to roll back changes made..
        /// </summary>
        internal static string ERROR_FAIL_REBOOT_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_FAIL_REBOOT_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The restart operation failed..
        /// </summary>
        internal static string ERROR_FAIL_RESTART {
            get {
                return ResourceManager.GetString("ERROR_FAIL_RESTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shutdown operation failed..
        /// </summary>
        internal static string ERROR_FAIL_SHUTDOWN {
            get {
                return ResourceManager.GetString("ERROR_FAIL_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The driver was not loaded because it failed its initialization call..
        /// </summary>
        internal static string ERROR_FAILED_DRIVER_ENTRY {
            get {
                return ResourceManager.GetString("ERROR_FAILED_DRIVER_ENTRY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service process could not connect to the service controller..
        /// </summary>
        internal static string ERROR_FAILED_SERVICE_CONTROLLER_CONNECT {
            get {
                return ResourceManager.GetString("ERROR_FAILED_SERVICE_CONTROLLER_CONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Fatal Application Exit} %hs.
        /// </summary>
        internal static string ERROR_FATAL_APP_EXIT {
            get {
                return ResourceManager.GetString("ERROR_FATAL_APP_EXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file is checked out or locked for editing by another user..
        /// </summary>
        internal static string ERROR_FILE_CHECKED_OUT {
            get {
                return ResourceManager.GetString("ERROR_FILE_CHECKED_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file or directory is corrupted and unreadable..
        /// </summary>
        internal static string ERROR_FILE_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_FILE_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file is encrypted and the user does not have the ability to decrypt it..
        /// </summary>
        internal static string ERROR_FILE_ENCRYPTED {
            get {
                return ResourceManager.GetString("ERROR_FILE_ENCRYPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file exists..
        /// </summary>
        internal static string ERROR_FILE_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_FILE_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file cannot be opened transactionally, because its identity depends on the outcome of an unresolved transaction..
        /// </summary>
        internal static string ERROR_FILE_IDENTITY_NOT_PERSISTENT {
            get {
                return ResourceManager.GetString("ERROR_FILE_IDENTITY_NOT_PERSISTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume for a file has been externally altered so that the opened file is no longer valid..
        /// </summary>
        internal static string ERROR_FILE_INVALID {
            get {
                return ResourceManager.GetString("ERROR_FILE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file is not encrypted..
        /// </summary>
        internal static string ERROR_FILE_NOT_ENCRYPTED {
            get {
                return ResourceManager.GetString("ERROR_FILE_NOT_ENCRYPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot find the file specified..
        /// </summary>
        internal static string ERROR_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file is currently not available for use on this computer..
        /// </summary>
        internal static string ERROR_FILE_OFFLINE {
            get {
                return ResourceManager.GetString("ERROR_FILE_OFFLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file is read only..
        /// </summary>
        internal static string ERROR_FILE_READ_ONLY {
            get {
                return ResourceManager.GetString("ERROR_FILE_READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation could not be completed due to a file system limitation.
        /// </summary>
        internal static string ERROR_FILE_SYSTEM_LIMITATION {
            get {
                return ResourceManager.GetString("ERROR_FILE_SYSTEM_LIMITATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file size exceeds the limit allowed and cannot be saved..
        /// </summary>
        internal static string ERROR_FILE_TOO_LARGE {
            get {
                return ResourceManager.GetString("ERROR_FILE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A tape access reached a filemark..
        /// </summary>
        internal static string ERROR_FILEMARK_DETECTED {
            get {
                return ResourceManager.GetString("ERROR_FILEMARK_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filename or extension is too long..
        /// </summary>
        internal static string ERROR_FILENAME_EXCED_RANGE {
            get {
                return ResourceManager.GetString("ERROR_FILENAME_EXCED_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows has detected that the system firmware (BIOS) was updated [previous firmware date = %2, current firmware date %3]..
        /// </summary>
        internal static string ERROR_FIRMWARE_UPDATED {
            get {
                return ResourceManager.GetString("ERROR_FIRMWARE_UPDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {EXCEPTION} Multiple floating point faults..
        /// </summary>
        internal static string ERROR_FLOAT_MULTIPLE_FAULTS {
            get {
                return ResourceManager.GetString("ERROR_FLOAT_MULTIPLE_FAULTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {EXCEPTION} Multiple floating point traps..
        /// </summary>
        internal static string ERROR_FLOAT_MULTIPLE_TRAPS {
            get {
                return ResourceManager.GetString("ERROR_FLOAT_MULTIPLE_TRAPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I/O was attempted on a section object that has been floated as a result of a transaction ending. There is no valid data..
        /// </summary>
        internal static string ERROR_FLOATED_SECTION {
            get {
                return ResourceManager.GetString("ERROR_FLOATED_SECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The floppy disk controller returned inconsistent results in its registers..
        /// </summary>
        internal static string ERROR_FLOPPY_BAD_REGISTERS {
            get {
                return ResourceManager.GetString("ERROR_FLOPPY_BAD_REGISTERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No ID address mark was found on the floppy disk..
        /// </summary>
        internal static string ERROR_FLOPPY_ID_MARK_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_FLOPPY_ID_MARK_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The floppy disk controller reported an error that is not recognized by the floppy disk driver..
        /// </summary>
        internal static string ERROR_FLOPPY_UNKNOWN_ERROR {
            get {
                return ResourceManager.GetString("ERROR_FLOPPY_UNKNOWN_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The paging file cannot be created on a floppy diskette..
        /// </summary>
        internal static string ERROR_FLOPPY_VOLUME {
            get {
                return ResourceManager.GetString("ERROR_FLOPPY_VOLUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mismatch between the floppy disk sector ID field and the floppy disk controller track address..
        /// </summary>
        internal static string ERROR_FLOPPY_WRONG_CYLINDER {
            get {
                return ResourceManager.GetString("ERROR_FLOPPY_WRONG_CYLINDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Denied. Before opening files in this location, you must first add the web site to your trusted sites list, browse to the web site, and select the option to login automatically..
        /// </summary>
        internal static string ERROR_FORMS_AUTH_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_FORMS_AUTH_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempt to find the object found an object matching by ID on the volume but it is out of the scope of the handle used for the operation..
        /// </summary>
        internal static string ERROR_FOUND_OUT_OF_SCOPE {
            get {
                return ResourceManager.GetString("ERROR_FOUND_OUT_OF_SCOPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A volume has been accessed for which a file system driver is required that has not yet been loaded..
        /// </summary>
        internal static string ERROR_FS_DRIVER_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_FS_DRIVER_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file system or file system filter driver has successfully completed an FsFilter operation..
        /// </summary>
        internal static string ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY {
            get {
                return ResourceManager.GetString("ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Redundant Read} To satisfy a read request, the NT fault-tolerant file system successfully read the requested data from a redundant copy. This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was unable to reassign the failing area of the device..
        /// </summary>
        internal static string ERROR_FT_READ_RECOVERY_FROM_BACKUP {
            get {
                return ResourceManager.GetString("ERROR_FT_READ_RECOVERY_FROM_BACKUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Redundant Write} To satisfy a write request, the NT fault-tolerant file system successfully wrote a redundant copy of the information. This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was not able to reassign the failing area of the device..
        /// </summary>
        internal static string ERROR_FT_WRITE_RECOVERY {
            get {
                return ResourceManager.GetString("ERROR_FT_WRITE_RECOVERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The backup failed. Check the directory to which you are backing the database..
        /// </summary>
        internal static string ERROR_FULL_BACKUP {
            get {
                return ResourceManager.GetString("ERROR_FULL_BACKUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation cannot be performed in full-screen mode..
        /// </summary>
        internal static string ERROR_FULLSCREEN_MODE {
            get {
                return ResourceManager.GetString("ERROR_FULLSCREEN_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function failed during execution..
        /// </summary>
        internal static string ERROR_FUNCTION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_FUNCTION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function could not be executed..
        /// </summary>
        internal static string ERROR_FUNCTION_NOT_CALLED {
            get {
                return ResourceManager.GetString("ERROR_FUNCTION_NOT_CALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A device attached to the system is not functioning..
        /// </summary>
        internal static string ERROR_GEN_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_GEN_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic access types were contained in an access mask which should already be mapped to nongeneric types..
        /// </summary>
        internal static string ERROR_GENERIC_NOT_MAPPED {
            get {
                return ResourceManager.GetString("ERROR_GENERIC_NOT_MAPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This hook procedure can only be set globally..
        /// </summary>
        internal static string ERROR_GLOBAL_ONLY_HOOK {
            get {
                return ResourceManager.GetString("ERROR_GLOBAL_ONLY_HOOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network connection was gracefully closed..
        /// </summary>
        internal static string ERROR_GRACEFUL_DISCONNECT {
            get {
                return ResourceManager.GetString("ERROR_GRACEFUL_DISCONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified group already exists..
        /// </summary>
        internal static string ERROR_GROUP_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_GROUP_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster group is not available for any new requests..
        /// </summary>
        internal static string ERROR_GROUP_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_GROUP_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster group could not be found..
        /// </summary>
        internal static string ERROR_GROUP_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_GROUP_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation could not be completed because the cluster group is not online..
        /// </summary>
        internal static string ERROR_GROUP_NOT_ONLINE {
            get {
                return ResourceManager.GetString("ERROR_GROUP_NOT_ONLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {GUID Substitution} During the translation of a global identifier (GUID) to a Windows security ID (SID), no administratively-defined GUID prefix was found. A substitute prefix was used, which will not compromise system security. However, this may provide a more restrictive access than intended..
        /// </summary>
        internal static string ERROR_GUID_SUBSTITUTION_MADE {
            get {
                return ResourceManager.GetString("ERROR_GUID_SUBSTITUTION_MADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The disk is full..
        /// </summary>
        internal static string ERROR_HANDLE_DISK_FULL {
            get {
                return ResourceManager.GetString("ERROR_HANDLE_DISK_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reached the end of the file..
        /// </summary>
        internal static string ERROR_HANDLE_EOF {
            get {
                return ResourceManager.GetString("ERROR_HANDLE_EOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The handle has been invalidated by a transaction. The most likely cause is the presence of memory mapping on a file or an open handle when the transaction ended or rolled back to savepoint..
        /// </summary>
        internal static string ERROR_HANDLE_NO_LONGER_VALID {
            get {
                return ResourceManager.GetString("ERROR_HANDLE_NO_LONGER_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Handles Closed} Handles to objects have been automatically closed as a result of the requested operation..
        /// </summary>
        internal static string ERROR_HANDLES_CLOSED {
            get {
                return ResourceManager.GetString("ERROR_HANDLES_CLOSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system was put into hibernation..
        /// </summary>
        internal static string ERROR_HIBERNATED {
            get {
                return ResourceManager.GetString("ERROR_HIBERNATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system has failed to hibernate (The error code is %hs). Hibernation will be disabled until the system is restarted..
        /// </summary>
        internal static string ERROR_HIBERNATION_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_HIBERNATION_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set nonlocal hook without a module handle..
        /// </summary>
        internal static string ERROR_HOOK_NEEDS_HMOD {
            get {
                return ResourceManager.GetString("ERROR_HOOK_NEEDS_HMOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hook procedure is not installed..
        /// </summary>
        internal static string ERROR_HOOK_NOT_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_HOOK_NOT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hook type not allowed..
        /// </summary>
        internal static string ERROR_HOOK_TYPE_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("ERROR_HOOK_TYPE_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote system is not available. For information about network troubleshooting, see Windows Help..
        /// </summary>
        internal static string ERROR_HOST_DOWN {
            get {
                return ResourceManager.GetString("ERROR_HOST_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cluster node is not available for this operation..
        /// </summary>
        internal static string ERROR_HOST_NODE_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_HOST_NODE_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation failed because either the specified cluster node is not the owner of the group, or the node is not a possible owner of the group..
        /// </summary>
        internal static string ERROR_HOST_NODE_NOT_GROUP_OWNER {
            get {
                return ResourceManager.GetString("ERROR_HOST_NODE_NOT_GROUP_OWNER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation failed because either the specified cluster node is not the owner of the resource, or the node is not a possible owner of the resource..
        /// </summary>
        internal static string ERROR_HOST_NODE_NOT_RESOURCE_OWNER {
            get {
                return ResourceManager.GetString("ERROR_HOST_NODE_NOT_RESOURCE_OWNER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network location cannot be reached. For information about network troubleshooting, see Windows Help..
        /// </summary>
        internal static string ERROR_HOST_UNREACHABLE {
            get {
                return ResourceManager.GetString("ERROR_HOST_UNREACHABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hot key is already registered..
        /// </summary>
        internal static string ERROR_HOTKEY_ALREADY_REGISTERED {
            get {
                return ResourceManager.GetString("ERROR_HOTKEY_ALREADY_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hot key is not registered..
        /// </summary>
        internal static string ERROR_HOTKEY_NOT_REGISTERED {
            get {
                return ResourceManager.GetString("ERROR_HOTKEY_NOT_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All handles to windows in a multiple-window position structure must have the same parent..
        /// </summary>
        internal static string ERROR_HWNDS_HAVE_DIFF_PARENT {
            get {
                return ResourceManager.GetString("ERROR_HWNDS_HAVE_DIFF_PARENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image Color Management is not enabled..
        /// </summary>
        internal static string ERROR_ICM_NOT_ENABLED {
            get {
                return ResourceManager.GetString("ERROR_ICM_NOT_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use the inject/eject port because it is not empty..
        /// </summary>
        internal static string ERROR_IEPORT_FULL {
            get {
                return ResourceManager.GetString("ERROR_IEPORT_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update the password. The value provided for the new password contains values that are not allowed in passwords..
        /// </summary>
        internal static string ERROR_ILL_FORMED_PASSWORD {
            get {
                return ResourceManager.GetString("ERROR_ILL_FORMED_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An illegal character was encountered. For a multi-byte character set this includes a lead byte without a succeeding trail byte. For the Unicode character set this includes the characters 0xFFFF and 0xFFFE..
        /// </summary>
        internal static string ERROR_ILLEGAL_CHARACTER {
            get {
                return ResourceManager.GetString("ERROR_ILLEGAL_CHARACTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Illegal System DLL Relocation} The system DLL %hs was relocated in memory. The application will not run properly. The relocation occurred because the DLL %hs occupied an address range reserved for Windows system DLLs. The vendor supplying the DLL should be contacted for a new DLL..
        /// </summary>
        internal static string ERROR_ILLEGAL_DLL_RELOCATION {
            get {
                return ResourceManager.GetString("ERROR_ILLEGAL_DLL_RELOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The indicated element does not exist..
        /// </summary>
        internal static string ERROR_ILLEGAL_ELEMENT_ADDRESS {
            get {
                return ResourceManager.GetString("ERROR_ILLEGAL_ELEMENT_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {EXCEPTION} A real-mode application issued a floating-point instruction and floating-point hardware is not present..
        /// </summary>
        internal static string ERROR_ILLEGAL_FLOAT_CONTEXT {
            get {
                return ResourceManager.GetString("ERROR_ILLEGAL_FLOAT_CONTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Machine Type Mismatch} The image file %hs is valid, but is for a machine type other than the current machine. Select OK to continue, or CANCEL to fail the DLL load..
        /// </summary>
        internal static string ERROR_IMAGE_MACHINE_TYPE_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_IMAGE_MACHINE_TYPE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Machine Type Mismatch} The image file %hs is valid, but is for a machine type other than the current machine..
        /// </summary>
        internal static string ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE {
            get {
                return ResourceManager.GetString("ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Image Relocated} An image file could not be mapped at the address specified in the image file. Local fixups must be performed on this image..
        /// </summary>
        internal static string ERROR_IMAGE_NOT_AT_BASE {
            get {
                return ResourceManager.GetString("ERROR_IMAGE_NOT_AT_BASE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation attempted to exceed an implementation-defined limit..
        /// </summary>
        internal static string ERROR_IMPLEMENTATION_LIMIT {
            get {
                return ResourceManager.GetString("ERROR_IMPLEMENTATION_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The backup failed. Was a full backup done before?.
        /// </summary>
        internal static string ERROR_INC_BACKUP {
            get {
                return ResourceManager.GetString("ERROR_INC_BACKUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A privilege that the service requires to function properly does not exist in the service account configuration. You may use the Services Microsoft Management Console (MMC) snap-in (services.msc) and the Local Security Settings MMC snap-in (secpol.msc) to view the service configuration and the account configuration..
        /// </summary>
        internal static string ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE {
            get {
                return ResourceManager.GetString("ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service start failed since one or more services in the same process have an incompatible service SID type setting. A service with restricted service SID type can only coexist in the same process with other services with a restricted SID type. If the service SID type for this service was just configured, the hosting process must be restarted in order to start this service..
        /// </summary>
        internal static string ERROR_INCOMPATIBLE_SERVICE_SID_TYPE {
            get {
                return ResourceManager.GetString("ERROR_INCOMPATIBLE_SERVICE_SID_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network address could not be used for the operation requested..
        /// </summary>
        internal static string ERROR_INCORRECT_ADDRESS {
            get {
                return ResourceManager.GetString("ERROR_INCORRECT_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect size argument..
        /// </summary>
        internal static string ERROR_INCORRECT_SIZE {
            get {
                return ResourceManager.GetString("ERROR_INCORRECT_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Component qualifier not present..
        /// </summary>
        internal static string ERROR_INDEX_ABSENT {
            get {
                return ResourceManager.GetString("ERROR_INDEX_ABSENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The media type cannot be removed from this library since at least one drive in the library reports it can support this media type..
        /// </summary>
        internal static string ERROR_INDIGENOUS_TYPE {
            get {
                return ResourceManager.GetString("ERROR_INDIGENOUS_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation would leave a transactional resource manager in an inconsistent state and is therefore not allowed..
        /// </summary>
        internal static string ERROR_INDOUBT_TRANSACTIONS_EXIST {
            get {
                return ResourceManager.GetString("ERROR_INDOUBT_TRANSACTIONS_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_INFLOOP_IN_RELOC_CHAIN {
            get {
                return ResourceManager.GetString("ERROR_INFLOOP_IN_RELOC_CHAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another installation is already in progress. Complete that installation before proceeding with this install..
        /// </summary>
        internal static string ERROR_INSTALL_ALREADY_RUNNING {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_ALREADY_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error during installation..
        /// </summary>
        internal static string ERROR_INSTALL_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The language of this installation package is not supported by your system..
        /// </summary>
        internal static string ERROR_INSTALL_LANGUAGE_UNSUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_LANGUAGE_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening installation log file. Verify that the specified log file location exists and that you can write to it..
        /// </summary>
        internal static string ERROR_INSTALL_LOG_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_LOG_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Component not used on this computer..
        /// </summary>
        internal static string ERROR_INSTALL_NOTUSED {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_NOTUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This installation package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer package..
        /// </summary>
        internal static string ERROR_INSTALL_PACKAGE_INVALID {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_PACKAGE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This installation package could not be opened. Verify that the package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer package..
        /// </summary>
        internal static string ERROR_INSTALL_PACKAGE_OPEN_FAILED {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_PACKAGE_OPEN_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This installation is forbidden by system policy. Contact your system administrator..
        /// </summary>
        internal static string ERROR_INSTALL_PACKAGE_REJECTED {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_PACKAGE_REJECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This installation package cannot be installed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service..
        /// </summary>
        internal static string ERROR_INSTALL_PACKAGE_VERSION {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_PACKAGE_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This installation package is not supported by this processor type. Contact your product vendor..
        /// </summary>
        internal static string ERROR_INSTALL_PLATFORM_UNSUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_PLATFORM_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only administrators have permission to add, remove, or configure server software during a Terminal services remote session. If you want to install or configure software on the server, contact your network administrator..
        /// </summary>
        internal static string ERROR_INSTALL_REMOTE_DISALLOWED {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_REMOTE_DISALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Installer does not permit installation from a Remote Desktop Connection..
        /// </summary>
        internal static string ERROR_INSTALL_REMOTE_PROHIBITED {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_REMOTE_PROHIBITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Installer Service could not be accessed. This can occur if the Windows Installer is not correctly installed. Contact your support personnel for assistance..
        /// </summary>
        internal static string ERROR_INSTALL_SERVICE_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_SERVICE_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Installer service is not accessible in Safe Mode. Please try again when your computer is not in Safe Mode or you can use System Restore to return your machine to a previous good state..
        /// </summary>
        internal static string ERROR_INSTALL_SERVICE_SAFEBOOT {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_SERVICE_SAFEBOOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installation source for this product is not available. Verify that the source exists and that you can access it..
        /// </summary>
        internal static string ERROR_INSTALL_SOURCE_ABSENT {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_SOURCE_ABSENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation suspended, incomplete..
        /// </summary>
        internal static string ERROR_INSTALL_SUSPEND {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_SUSPEND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Temp folder is on a drive that is full or is inaccessible. Free up space on the drive or verify that you have write permission on the Temp folder..
        /// </summary>
        internal static string ERROR_INSTALL_TEMP_UNWRITABLE {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_TEMP_UNWRITABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error applying transforms. Verify that the specified transform paths are valid..
        /// </summary>
        internal static string ERROR_INSTALL_TRANSFORM_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_TRANSFORM_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more customizations are not permitted by software restriction policy..
        /// </summary>
        internal static string ERROR_INSTALL_TRANSFORM_REJECTED {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_TRANSFORM_REJECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error starting the Windows Installer service user interface. Contact your support personnel..
        /// </summary>
        internal static string ERROR_INSTALL_UI_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_UI_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User cancelled installation..
        /// </summary>
        internal static string ERROR_INSTALL_USEREXIT {
            get {
                return ResourceManager.GetString("ERROR_INSTALL_USEREXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to execute an instruction at an unaligned address and the host system does not support unaligned instruction references..
        /// </summary>
        internal static string ERROR_INSTRUCTION_MISALIGNMENT {
            get {
                return ResourceManager.GetString("ERROR_INSTRUCTION_MISALIGNMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data area passed to a system call is too small..
        /// </summary>
        internal static string ERROR_INSUFFICIENT_BUFFER {
            get {
                return ResourceManager.GetString("ERROR_INSUFFICIENT_BUFFER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is insufficient account information to log you on..
        /// </summary>
        internal static string ERROR_INSUFFICIENT_LOGON_INFO {
            get {
                return ResourceManager.GetString("ERROR_INSUFFICIENT_LOGON_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is not enough power to complete the requested operation..
        /// </summary>
        internal static string ERROR_INSUFFICIENT_POWER {
            get {
                return ResourceManager.GetString("ERROR_INSUFFICIENT_POWER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Desktop heap encountered an error while allocating session memory. There is more information in the system event log..
        /// </summary>
        internal static string ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE {
            get {
                return ResourceManager.GetString("ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to complete the requested operation because of either a catastrophic media failure or a data structure corruption on the disk..
        /// </summary>
        internal static string ERROR_INTERNAL_DB_CORRUPTION {
            get {
                return ResourceManager.GetString("ERROR_INTERNAL_DB_CORRUPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local security authority database contains an internal inconsistency..
        /// </summary>
        internal static string ERROR_INTERNAL_DB_ERROR {
            get {
                return ResourceManager.GetString("ERROR_INTERNAL_DB_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal error occurred..
        /// </summary>
        internal static string ERROR_INTERNAL_ERROR {
            get {
                return ResourceManager.GetString("ERROR_INTERNAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified interrupt vector is still connected..
        /// </summary>
        internal static string ERROR_INTERRUPT_STILL_CONNECTED {
            get {
                return ResourceManager.GetString("ERROR_INTERRUPT_STILL_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified interrupt vector was already connected..
        /// </summary>
        internal static string ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED {
            get {
                return ResourceManager.GetString("ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid accelerator table handle..
        /// </summary>
        internal static string ERROR_INVALID_ACCEL_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ACCEL_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access code is invalid..
        /// </summary>
        internal static string ERROR_INVALID_ACCESS {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name provided is not a properly formed account name..
        /// </summary>
        internal static string ERROR_INVALID_ACCOUNT_NAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ACCOUNT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access control list (ACL) structure is invalid..
        /// </summary>
        internal static string ERROR_INVALID_ACL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ACL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to access invalid address..
        /// </summary>
        internal static string ERROR_INVALID_ADDRESS {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot request exclusive semaphores at interrupt time..
        /// </summary>
        internal static string ERROR_INVALID_AT_INTERRUPT_TIME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_AT_INTERRUPT_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage control block address is invalid..
        /// </summary>
        internal static string ERROR_INVALID_BLOCK {
            get {
                return ResourceManager.GetString("ERROR_INVALID_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When accessing a new tape of a multivolume partition, the current block size is incorrect..
        /// </summary>
        internal static string ERROR_INVALID_BLOCK_LENGTH {
            get {
                return ResourceManager.GetString("ERROR_INVALID_BLOCK_LENGTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IOCTL call made by the application program is not correct..
        /// </summary>
        internal static string ERROR_INVALID_CATEGORY {
            get {
                return ResourceManager.GetString("ERROR_INVALID_CATEGORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The media identifier does not represent a valid cleaner..
        /// </summary>
        internal static string ERROR_INVALID_CLEANER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_CLEANER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The address is not valid for an IPv6 Address resource. A global IPv6 address is required, and it must match a cluster network. Compatibility addresses are not permitted..
        /// </summary>
        internal static string ERROR_INVALID_CLUSTER_IPV6_ADDRESS {
            get {
                return ResourceManager.GetString("ERROR_INVALID_CLUSTER_IPV6_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified color management module is invalid..
        /// </summary>
        internal static string ERROR_INVALID_CMM {
            get {
                return ResourceManager.GetString("ERROR_INVALID_CMM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified named color index is not present in the profile..
        /// </summary>
        internal static string ERROR_INVALID_COLORINDEX {
            get {
                return ResourceManager.GetString("ERROR_INVALID_COLORINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified color space is invalid..
        /// </summary>
        internal static string ERROR_INVALID_COLORSPACE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_COLORSPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid message for a combo box because it does not have an edit control..
        /// </summary>
        internal static string ERROR_INVALID_COMBOBOX_MESSAGE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_COMBOBOX_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command line argument. Consult the Windows Installer SDK for detailed command line help..
        /// </summary>
        internal static string ERROR_INVALID_COMMAND_LINE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_COMMAND_LINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified computer name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_COMPUTERNAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_COMPUTERNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter passed to a C runtime function is incorrect..
        /// </summary>
        internal static string ERROR_INVALID_CRUNTIME_PARAMETER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_CRUNTIME_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid cursor handle..
        /// </summary>
        internal static string ERROR_INVALID_CURSOR_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_CURSOR_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data is invalid..
        /// </summary>
        internal static string ERROR_INVALID_DATA {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified datatype is invalid..
        /// </summary>
        internal static string ERROR_INVALID_DATATYPE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DATATYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device object parameter is either not a valid device object or is not attached to the volume specified by the file name..
        /// </summary>
        internal static string ERROR_INVALID_DEVICE_OBJECT_PARAMETER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DEVICE_OBJECT_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the library files needed to run this application is damaged..
        /// </summary>
        internal static string ERROR_INVALID_DLL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DLL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is only allowed for the Primary Domain Controller of the domain..
        /// </summary>
        internal static string ERROR_INVALID_DOMAIN_ROLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DOMAIN_ROLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain was in the wrong state to perform the security operation..
        /// </summary>
        internal static string ERROR_INVALID_DOMAIN_STATE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DOMAIN_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified domain name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_DOMAINNAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DOMAINNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot find the drive specified..
        /// </summary>
        internal static string ERROR_INVALID_DRIVE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive identifier does not represent a valid drive..
        /// </summary>
        internal static string ERROR_INVALID_DRIVE_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DRIVE_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid handle to a multiple-window position structure..
        /// </summary>
        internal static string ERROR_INVALID_DWP_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_DWP_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified extended attribute handle is invalid..
        /// </summary>
        internal static string ERROR_INVALID_EA_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_EA_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified extended attribute name was invalid..
        /// </summary>
        internal static string ERROR_INVALID_EA_NAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_EA_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height must be less than 256..
        /// </summary>
        internal static string ERROR_INVALID_EDIT_HEIGHT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_EDIT_HEIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment specified is invalid..
        /// </summary>
        internal static string ERROR_INVALID_ENVIRONMENT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ENVIRONMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of specified semaphore events for DosMuxSemWait is not correct..
        /// </summary>
        internal static string ERROR_INVALID_EVENT_COUNT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_EVENT_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified event name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_EVENTNAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_EVENTNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot run %1 in Win32 mode..
        /// </summary>
        internal static string ERROR_INVALID_EXE_SIGNATURE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_EXE_SIGNATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record field does not exist..
        /// </summary>
        internal static string ERROR_INVALID_FIELD {
            get {
                return ResourceManager.GetString("ERROR_INVALID_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hook procedure..
        /// </summary>
        internal static string ERROR_INVALID_FILTER_PROC {
            get {
                return ResourceManager.GetString("ERROR_INVALID_FILTER_PROC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The flag passed is not correct..
        /// </summary>
        internal static string ERROR_INVALID_FLAG_NUMBER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_FLAG_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid flags..
        /// </summary>
        internal static string ERROR_INVALID_FLAGS {
            get {
                return ResourceManager.GetString("ERROR_INVALID_FLAGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified form name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_FORM_NAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_FORM_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified form size is invalid..
        /// </summary>
        internal static string ERROR_INVALID_FORM_SIZE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_FORM_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect function..
        /// </summary>
        internal static string ERROR_INVALID_FUNCTION {
            get {
                return ResourceManager.GetString("ERROR_INVALID_FUNCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified attributes are invalid, or incompatible with the attributes for the group as a whole..
        /// </summary>
        internal static string ERROR_INVALID_GROUP_ATTRIBUTES {
            get {
                return ResourceManager.GetString("ERROR_INVALID_GROUP_ATTRIBUTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified group name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_GROUPNAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_GROUPNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid GW_* command..
        /// </summary>
        internal static string ERROR_INVALID_GW_COMMAND {
            get {
                return ResourceManager.GetString("ERROR_INVALID_GW_COMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The handle is invalid..
        /// </summary>
        internal static string ERROR_INVALID_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handle is in an invalid state..
        /// </summary>
        internal static string ERROR_INVALID_HANDLE_STATE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_HANDLE_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hook procedure type..
        /// </summary>
        internal static string ERROR_INVALID_HOOK_FILTER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_HOOK_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hook handle..
        /// </summary>
        internal static string ERROR_INVALID_HOOK_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_HOOK_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified hardware profile configuration is invalid..
        /// </summary>
        internal static string ERROR_INVALID_HW_PROFILE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_HW_PROFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid icon handle..
        /// </summary>
        internal static string ERROR_INVALID_ICON_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ICON_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value provided was an invalid value for an identifier authority..
        /// </summary>
        internal static string ERROR_INVALID_ID_AUTHORITY {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ID_AUTHORITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows cannot verify the digital signature for this file. A recent hardware or software change might have installed a file that is signed incorrectly or damaged, or that might be malicious software from an unknown source..
        /// </summary>
        internal static string ERROR_INVALID_IMAGE_HASH {
            get {
                return ResourceManager.GetString("ERROR_INVALID_IMAGE_HASH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A dynamic link library (DLL) referenced a module that was neither a DLL nor the process&apos;s executable image..
        /// </summary>
        internal static string ERROR_INVALID_IMPORT_OF_NON_DLL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_IMPORT_OF_NON_DLL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid index..
        /// </summary>
        internal static string ERROR_INVALID_INDEX {
            get {
                return ResourceManager.GetString("ERROR_INVALID_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid keyboard layout handle..
        /// </summary>
        internal static string ERROR_INVALID_KEYBOARD_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_KEYBOARD_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates a particular Security ID may not be assigned as the label of an object..
        /// </summary>
        internal static string ERROR_INVALID_LABEL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid message for single-selection list box..
        /// </summary>
        internal static string ERROR_INVALID_LB_MESSAGE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LB_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that the user supplied an invalid descriptor when trying to set up Ldt descriptors..
        /// </summary>
        internal static string ERROR_INVALID_LDT_DESCRIPTOR {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LDT_DESCRIPTOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that the starting value for the LDT information was not an integral multiple of the selector size..
        /// </summary>
        internal static string ERROR_INVALID_LDT_OFFSET {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LDT_OFFSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that an attempt was made to grow an LDT by setting its size, or that the size was not an even number of selectors..
        /// </summary>
        internal static string ERROR_INVALID_LDT_SIZE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LDT_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system call level is not correct..
        /// </summary>
        internal static string ERROR_INVALID_LEVEL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The library identifier does not represent a valid library..
        /// </summary>
        internal static string ERROR_INVALID_LIBRARY {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LIBRARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DosMuxSemWait list is not correct..
        /// </summary>
        internal static string ERROR_INVALID_LIST_FORMAT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LIST_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your account has time restrictions that keep you from signing in right now..
        /// </summary>
        internal static string ERROR_INVALID_LOGON_HOURS {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LOGON_HOURS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A logon request contained an invalid logon type value..
        /// </summary>
        internal static string ERROR_INVALID_LOGON_TYPE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_LOGON_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The media identifier does not represent a valid medium..
        /// </summary>
        internal static string ERROR_INVALID_MEDIA {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MEDIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The media pool identifier does not represent a valid media pool..
        /// </summary>
        internal static string ERROR_INVALID_MEDIA_POOL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MEDIA_POOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new member could not be added to a local group because the member has the wrong account type..
        /// </summary>
        internal static string ERROR_INVALID_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid menu handle..
        /// </summary>
        internal static string ERROR_INVALID_MENU_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MENU_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window cannot act on the sent message..
        /// </summary>
        internal static string ERROR_INVALID_MESSAGE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MESSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified message destination is invalid..
        /// </summary>
        internal static string ERROR_INVALID_MESSAGEDEST {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MESSAGEDEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified message name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_MESSAGENAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MESSAGENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_INVALID_MINALLOCSIZE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MINALLOCSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_INVALID_MODULETYPE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MODULETYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid monitor handle..
        /// </summary>
        internal static string ERROR_INVALID_MONITOR_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MONITOR_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid message box style..
        /// </summary>
        internal static string ERROR_INVALID_MSGBOX_STYLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_MSGBOX_STYLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filename, directory name, or volume label syntax is incorrect..
        /// </summary>
        internal static string ERROR_INVALID_NAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified network name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_NETNAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_NETNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation identifier is not valid..
        /// </summary>
        internal static string ERROR_INVALID_OPERATION {
            get {
                return ResourceManager.GetString("ERROR_INVALID_OPERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation cannot currently be performed on the cluster group containing the quorum resource..
        /// </summary>
        internal static string ERROR_INVALID_OPERATION_ON_QUORUM {
            get {
                return ResourceManager.GetString("ERROR_INVALID_OPERATION_ON_QUORUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid oplock acknowledgment was received by the system..
        /// </summary>
        internal static string ERROR_INVALID_OPLOCK_PROTOCOL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_OPLOCK_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_INVALID_ORDINAL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_ORDINAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This security ID may not be assigned as the owner of this object..
        /// </summary>
        internal static string ERROR_INVALID_OWNER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_OWNER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter is incorrect..
        /// </summary>
        internal static string ERROR_INVALID_PARAMETER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified network password is not correct..
        /// </summary>
        internal static string ERROR_INVALID_PASSWORD {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified password is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PASSWORDNAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PASSWORDNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XML update data is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PATCH_XML {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PATCH_XML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pixel format is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PIXEL_FORMAT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PIXEL_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified Plug and Play registry device path is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PLUGPLAY_DEVICE_PATH {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PLUGPLAY_DEVICE_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Object Attributes specified to NtCreatePort or invalid Port Attributes specified to NtConnectPort.
        /// </summary>
        internal static string ERROR_INVALID_PORT_ATTRIBUTES {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PORT_ATTRIBUTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This security ID may not be assigned as the primary group of an object..
        /// </summary>
        internal static string ERROR_INVALID_PRIMARY_GROUP {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PRIMARY_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified print monitor does not have the required functions..
        /// </summary>
        internal static string ERROR_INVALID_PRINT_MONITOR {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PRINT_MONITOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer command is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PRINTER_COMMAND {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PRINTER_COMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PRINTER_NAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PRINTER_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The state of the printer is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PRINTER_STATE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PRINTER_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified priority is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PRIORITY {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PRIORITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified color profile is invalid..
        /// </summary>
        internal static string ERROR_INVALID_PROFILE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_PROFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to lower a quota limit below the current usage..
        /// </summary>
        internal static string ERROR_INVALID_QUOTA_LOWER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_QUOTA_LOWER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data present in the reparse point buffer is invalid..
        /// </summary>
        internal static string ERROR_INVALID_REPARSE_DATA {
            get {
                return ResourceManager.GetString("ERROR_INVALID_REPARSE_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scroll bar range cannot be greater than MAXLONG..
        /// </summary>
        internal static string ERROR_INVALID_SCROLLBAR_RANGE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SCROLLBAR_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security descriptor structure is invalid..
        /// </summary>
        internal static string ERROR_INVALID_SECURITY_DESCR {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SECURITY_DESCR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_INVALID_SEGDPL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SEGDPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system detected a segment number that was not correct..
        /// </summary>
        internal static string ERROR_INVALID_SEGMENT_NUMBER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SEGMENT_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified separator file is invalid..
        /// </summary>
        internal static string ERROR_INVALID_SEPARATOR_FILE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SEPARATOR_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security account manager (SAM) or local security authority (LSA) server was in the wrong state to perform the security operation..
        /// </summary>
        internal static string ERROR_INVALID_SERVER_STATE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SERVER_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account name is invalid or does not exist, or the password is invalid for the account name specified..
        /// </summary>
        internal static string ERROR_INVALID_SERVICE_ACCOUNT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SERVICE_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested control is not valid for this service..
        /// </summary>
        internal static string ERROR_INVALID_SERVICE_CONTROL {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SERVICE_CONTROL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified service database lock is invalid..
        /// </summary>
        internal static string ERROR_INVALID_SERVICE_LOCK {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SERVICE_LOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified service name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_SERVICENAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SERVICENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the specified share name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_SHARENAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SHARENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot show or remove the window in the way specified..
        /// </summary>
        internal static string ERROR_INVALID_SHOWWIN_COMMAND {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SHOWWIN_COMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security ID structure is invalid..
        /// </summary>
        internal static string ERROR_INVALID_SID {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signal being posted is not correct..
        /// </summary>
        internal static string ERROR_INVALID_SIGNAL_NUMBER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SIGNAL_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid system-wide (SPI_*) parameter..
        /// </summary>
        internal static string ERROR_INVALID_SPI_VALUE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SPI_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_INVALID_STACKSEG {
            get {
                return ResourceManager.GetString("ERROR_INVALID_STACKSEG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_INVALID_STARTING_CODESEG {
            get {
                return ResourceManager.GetString("ERROR_INVALID_STARTING_CODESEG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group or resource is not in the correct state to perform the requested operation..
        /// </summary>
        internal static string ERROR_INVALID_STATE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subauthority part of a security ID is invalid for this particular use..
        /// </summary>
        internal static string ERROR_INVALID_SUB_AUTHORITY {
            get {
                return ResourceManager.GetString("ERROR_INVALID_SUB_AUTHORITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid or unknown table specified..
        /// </summary>
        internal static string ERROR_INVALID_TABLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_TABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target internal file identifier is incorrect..
        /// </summary>
        internal static string ERROR_INVALID_TARGET_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_TARGET_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified task index is invalid..
        /// </summary>
        internal static string ERROR_INVALID_TASK_INDEX {
            get {
                return ResourceManager.GetString("ERROR_INVALID_TASK_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified task name is invalid..
        /// </summary>
        internal static string ERROR_INVALID_TASK_NAME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_TASK_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid thread identifier..
        /// </summary>
        internal static string ERROR_INVALID_THREAD_ID {
            get {
                return ResourceManager.GetString("ERROR_INVALID_THREAD_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified time is invalid..
        /// </summary>
        internal static string ERROR_INVALID_TIME {
            get {
                return ResourceManager.GetString("ERROR_INVALID_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transaction handle associated with this operation is not valid..
        /// </summary>
        internal static string ERROR_INVALID_TRANSACTION {
            get {
                return ResourceManager.GetString("ERROR_INVALID_TRANSACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified color transform is invalid..
        /// </summary>
        internal static string ERROR_INVALID_TRANSFORM {
            get {
                return ResourceManager.GetString("ERROR_INVALID_TRANSFORM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid unwind target was encountered during an unwind operation..
        /// </summary>
        internal static string ERROR_INVALID_UNWIND_TARGET {
            get {
                return ResourceManager.GetString("ERROR_INVALID_UNWIND_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied user buffer is not valid for the requested operation..
        /// </summary>
        internal static string ERROR_INVALID_USER_BUFFER {
            get {
                return ResourceManager.GetString("ERROR_INVALID_USER_BUFFER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied variant structure contains invalid data..
        /// </summary>
        internal static string ERROR_INVALID_VARIANT {
            get {
                return ResourceManager.GetString("ERROR_INVALID_VARIANT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The verify-on-write switch parameter value is not correct..
        /// </summary>
        internal static string ERROR_INVALID_VERIFY_SWITCH {
            get {
                return ResourceManager.GetString("ERROR_INVALID_VERIFY_SWITCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid window handle..
        /// </summary>
        internal static string ERROR_INVALID_WINDOW_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_WINDOW_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window style or class attribute is invalid for this operation..
        /// </summary>
        internal static string ERROR_INVALID_WINDOW_STYLE {
            get {
                return ResourceManager.GetString("ERROR_INVALID_WINDOW_STYLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user isn&apos;t allowed to sign in to this computer..
        /// </summary>
        internal static string ERROR_INVALID_WORKSTATION {
            get {
                return ResourceManager.GetString("ERROR_INVALID_WORKSTATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request could not be performed because of an I/O device error..
        /// </summary>
        internal static string ERROR_IO_DEVICE {
            get {
                return ResourceManager.GetString("ERROR_IO_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlapped I/O event is not in a signaled state..
        /// </summary>
        internal static string ERROR_IO_INCOMPLETE {
            get {
                return ResourceManager.GetString("ERROR_IO_INCOMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlapped I/O operation is in progress..
        /// </summary>
        internal static string ERROR_IO_PENDING {
            get {
                return ResourceManager.GetString("ERROR_IO_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Privilege Failed} The I/O permissions for the process could not be changed..
        /// </summary>
        internal static string ERROR_IO_PRIVILEGE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_IO_PRIVILEGE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reissue the given operation as a cached IO operation.
        /// </summary>
        internal static string ERROR_IO_REISSUE_AS_CACHED {
            get {
                return ResourceManager.GetString("ERROR_IO_REISSUE_AS_CACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system is not presently configured to run this application..
        /// </summary>
        internal static string ERROR_IOPL_NOT_ENABLED {
            get {
                return ResourceManager.GetString("ERROR_IOPL_NOT_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an IP address conflict with another system on the network.
        /// </summary>
        internal static string ERROR_IP_ADDRESS_CONFLICT1 {
            get {
                return ResourceManager.GetString("ERROR_IP_ADDRESS_CONFLICT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an IP address conflict with another system on the network.
        /// </summary>
        internal static string ERROR_IP_ADDRESS_CONFLICT2 {
            get {
                return ResourceManager.GetString("ERROR_IP_ADDRESS_CONFLICT2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified default main mode authentication list was not found..
        /// </summary>
        internal static string ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified default main mode policy was not found..
        /// </summary>
        internal static string ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified default quick mode policy was not found..
        /// </summary>
        internal static string ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add Security Association to IPsec Driver. The most common cause for this is if the IKE negotiation took too long to complete. If the problem persists, reduce the load on the faulting machine..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE security attributes are unacceptable.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_ATTRIB_FAIL {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_ATTRIB_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE authentication credentials are unacceptable.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_AUTH_FAIL {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_AUTH_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary state created to perform reinitialization. This is not a real failure..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_BENIGN_REINIT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_BENIGN_REINIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate doesn&apos;t chain to a trusted root in IPsec policy..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not verify binding between CGA address and certificate..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_CGA_AUTH_FAILED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_CGA_AUTH_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Revocation Check failed.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_CRL_FAILED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_CRL_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error decrypting payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_DECRYPT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_DECRYPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure in Diffie-Hellman computation.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_DH_FAIL {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_DH_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diffie-Hellman failure.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_DH_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_DH_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sent DoS cookie notify to initiator..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_DOS_COOKIE_SENT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_DOS_COOKIE_SENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No response from peer.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_DROP_NO_RESPONSE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_DROP_NO_RESPONSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error encrypting payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_ENCRYPT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_ENCRYPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error occurred.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to query Kerberos package to obtain max token size..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_FAILQUERYSSP {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_FAILQUERYSSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to obtain security function table dispatch address from SSPI..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_FAILSSPINIT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_FAILSSPINIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General processing error.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to obtain new SPI for the inbound SA from IPsec driver. The most common cause for this is that the driver does not have the correct filter. Check your policy to verify the filters..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_GETSPIFAIL {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_GETSPIFAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid authentication algorithm.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_AUTH_ALG {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_AUTH_ALG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key length in certificate is too small for configured security requirements..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate type.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_CERT_TYPE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_CERT_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid cookie received..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_COOKIE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_COOKIE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid encryption algorithm.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given filter is invalid.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_FILTER {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Diffie-Hellman group.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_GROUP {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash verification failed.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_HASH {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_HASH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hash algorithm.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_HASH_ALG {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_HASH_ALG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hash size.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_HASH_SIZE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_HASH_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid header.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_HEADER {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate key usage.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_KEY_USAGE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_KEY_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters of the main mode are invalid for this quick mode..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_MM_FOR_QM {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_MM_FOR_QM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid payload received.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_PAYLOAD {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_PAYLOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid policy.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_POLICY {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lifetime value received in the Responder Lifetime Notify is below the Windows 2000 configured minimum value. Please fix the policy on the peer machine..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate signature.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_SIG {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_SIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to verify signature.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_SIGNATURE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_SIGNATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid situation.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_SITUATION {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_SITUATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received invalid authentication offers..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_INVALID_UMATTS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_INVALID_UMATTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to authenticate using Kerberos.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_KERBEROS_ERROR {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_KERBEROS_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load failed.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_LOAD_FAILED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_LOAD_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Soft SA loaded.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_LOAD_SOFT_SA {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_LOAD_SOFT_SA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negotiation request sat in Queue too long.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_MM_ACQUIRE_DROP {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_MM_ACQUIRE_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negotiation took too long.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_MM_DELAY_DROP {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_MM_DELAY_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main mode SA lifetime expired or peer sent a main mode delete..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_MM_EXPIRED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_MM_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max number of established MM SAs to peer exceeded..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_MM_LIMIT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_MM_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR_IPSEC_IKE_NEG_STATUS_BEGIN.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NEG_STATUS_BEGIN {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NEG_STATUS_BEGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR_IPSEC_IKE_NEG_STATUS_END.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NEG_STATUS_END {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NEG_STATUS_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE received a policy that disables negotiation..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NEGOTIATION_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NEGOTIATION_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE Negotiation in progress.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NEGOTIATION_PENDING {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NEGOTIATION_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE failed to find valid machine certificate. Contact your Network Security Administrator about installing a valid certificate in the appropriate Certificate Store..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NO_CERT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NO_CERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no available Main Mode IKE policy..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NO_MM_POLICY {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NO_MM_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer failed to send valid machine certificate.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NO_PEER_CERT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NO_PEER_CERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No policy configured.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NO_POLICY {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NO_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE negotiation failed because the machine certificate used does not have a private key. IPsec certificates require a private key. Contact your Network Security administrator about replacing with a certificate that has a private key..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NO_PRIVATE_KEY {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NO_PRIVATE_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peer&apos;s certificate did not have a public key.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NO_PUBLIC_KEY {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NO_PUBLIC_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to enabled TCB privilege..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_NOTCBPRIV {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_NOTCBPRIV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory allocation failed..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_OUT_OF_MEMORY {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_OUT_OF_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certification Revocation check of peer&apos;s certificate failed.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PEER_CRL_FAILED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PEER_CRL_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main mode SA assumed to be invalid because peer stopped responding..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New policy invalidated SAs formed with old policy.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_POLICY_CHANGE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_POLICY_CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy match error.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_POLICY_MATCH {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_POLICY_MATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing error payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Cert payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_CERT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_CERT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Certificate Request payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Delete Payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_DELETE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Hash payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_HASH {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_HASH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing ID payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_ID {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing KE payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_KE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_KE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing NatOA payload..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_NATOA {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_NATOA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Nonce payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_NONCE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_NONCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Notify payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Proposal payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_PROP {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_PROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing SA payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_SA {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_SA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Signature payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_SIG {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_SIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing Transform payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_TRANS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_TRANS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing VendorId payload.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negotiation request sat in Queue too long.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_QM_ACQUIRE_DROP {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_QM_ACQUIRE_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negotiation took too long.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_QM_DELAY_DROP {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_QM_DELAY_DROP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick mode SA was expired by IPsec driver..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_QM_EXPIRED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_QM_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reached maximum quick mode limit for the main mode. New main mode will be started..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_QM_LIMIT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_QM_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negotiation request sat in Queue too long.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_QUEUE_DROP_MM {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_QUEUE_DROP_MM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negotiation request sat in Queue too long.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleted via RPC call.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_RPC_DELETE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_RPC_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE SA deleted by peer before establishment completed.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_SA_DELETED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_SA_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE SA deleted before establishment completed.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_SA_REAPED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_SA_REAPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load SECURITY.DLL..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_SECLOADFAIL {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_SECLOADFAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IKE service is shutting down..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_SHUTTING_DOWN {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_SHUTTING_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Soft SA torn down.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to obtain Kerberos server credentials for ISAKMP/ERROR_IPSEC_IKE service. Kerberos authentication will not function. The most likely reason for this is lack of domain membership. This is normal if your computer is a member of a workgroup..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_SRVACQFAIL {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_SRVACQFAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to determine SSPI principal name for ISAKMP/ERROR_IPSEC_IKE service (QueryCredentialsAttributes)..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_SRVQUERYCRED {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_SRVQUERYCRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negotiation timed out.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_TIMED_OUT {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_TIMED_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many dynamically added IKEEXT filters were detected..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_TOO_MANY_FILTERS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_TOO_MANY_FILTERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received unexpected message ID..
        /// </summary>
        internal static string ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid DOI.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_UNKNOWN_DOI {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_UNKNOWN_DOI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported ID.
        /// </summary>
        internal static string ERROR_IPSEC_IKE_UNSUPPORTED_ID {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_IKE_UNSUPPORTED_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified main mode authentication list exists..
        /// </summary>
        internal static string ERROR_IPSEC_MM_AUTH_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_AUTH_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified main mode authentication list is being used..
        /// </summary>
        internal static string ERROR_IPSEC_MM_AUTH_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_AUTH_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified main mode authentication list was not found..
        /// </summary>
        internal static string ERROR_IPSEC_MM_AUTH_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_AUTH_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Main Mode authentication bundle is pending deletion..
        /// </summary>
        internal static string ERROR_IPSEC_MM_AUTH_PENDING_DELETION {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_AUTH_PENDING_DELETION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified main mode filter already exists..
        /// </summary>
        internal static string ERROR_IPSEC_MM_FILTER_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_FILTER_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified main mode filter was not found..
        /// </summary>
        internal static string ERROR_IPSEC_MM_FILTER_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_FILTER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Main Mode filter is pending deletion..
        /// </summary>
        internal static string ERROR_IPSEC_MM_FILTER_PENDING_DELETION {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_FILTER_PENDING_DELETION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified main mode policy already exists..
        /// </summary>
        internal static string ERROR_IPSEC_MM_POLICY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_POLICY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified main mode policy is being used..
        /// </summary>
        internal static string ERROR_IPSEC_MM_POLICY_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_POLICY_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified main mode policy was not found.
        /// </summary>
        internal static string ERROR_IPSEC_MM_POLICY_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_POLICY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Main Mode policy is pending deletion..
        /// </summary>
        internal static string ERROR_IPSEC_MM_POLICY_PENDING_ELETION {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_MM_POLICY_PENDING_ELETION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified quick mode policy already exists..
        /// </summary>
        internal static string ERROR_IPSEC_QM_POLICY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_QM_POLICY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified quick mode policy is being used..
        /// </summary>
        internal static string ERROR_IPSEC_QM_POLICY_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_QM_POLICY_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified quick mode policy was not found..
        /// </summary>
        internal static string ERROR_IPSEC_QM_POLICY_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_QM_POLICY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Quick Mode policy is pending deletion..
        /// </summary>
        internal static string ERROR_IPSEC_QM_POLICY_PENDING_DELETION {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_QM_POLICY_PENDING_DELETION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transport filter is pending deletion..
        /// </summary>
        internal static string ERROR_IPSEC_TRANSPORT_FILTER_ENDING_DELETION {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_TRANSPORT_FILTER_ENDING_DELETION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified transport mode filter already exists..
        /// </summary>
        internal static string ERROR_IPSEC_TRANSPORT_FILTER_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_TRANSPORT_FILTER_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified transport mode filter does not exist..
        /// </summary>
        internal static string ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified tunnel mode filter exists..
        /// </summary>
        internal static string ERROR_IPSEC_TUNNEL_FILTER_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_TUNNEL_FILTER_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified tunnel mode filter was not found..
        /// </summary>
        internal static string ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tunnel filter is pending deletion..
        /// </summary>
        internal static string ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION {
            get {
                return ResourceManager.GetString("ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open a device that was sharing an interrupt request (IRQ) with other devices. At least one other device that uses that IRQ was already opened..
        /// </summary>
        internal static string ERROR_IRQ_BUSY {
            get {
                return ResourceManager.GetString("ERROR_IRQ_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough resources are available to process this command..
        /// </summary>
        internal static string ERROR_IS_JOIN_PATH {
            get {
                return ResourceManager.GetString("ERROR_IS_JOIN_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A JOIN or SUBST command cannot be used for a drive that contains previously joined drives..
        /// </summary>
        internal static string ERROR_IS_JOIN_TARGET {
            get {
                return ResourceManager.GetString("ERROR_IS_JOIN_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to use a JOIN or SUBST command on a drive that has already been joined..
        /// </summary>
        internal static string ERROR_IS_JOINED {
            get {
                return ResourceManager.GetString("ERROR_IS_JOINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path specified is being used in a substitute..
        /// </summary>
        internal static string ERROR_IS_SUBST_PATH {
            get {
                return ResourceManager.GetString("ERROR_IS_SUBST_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to join or substitute a drive for which a directory on the drive is the target of a previous substitute..
        /// </summary>
        internal static string ERROR_IS_SUBST_TARGET {
            get {
                return ResourceManager.GetString("ERROR_IS_SUBST_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to use a JOIN or SUBST command on a drive that has already been substituted..
        /// </summary>
        internal static string ERROR_IS_SUBSTED {
            get {
                return ResourceManager.GetString("ERROR_IS_SUBSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_ITERATED_DATA_EXCEEDS_64k {
            get {
                return ResourceManager.GetString("ERROR_ITERATED_DATA_EXCEEDS_64k", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system tried to join a drive to a directory on a joined drive..
        /// </summary>
        internal static string ERROR_JOIN_TO_JOIN {
            get {
                return ResourceManager.GetString("ERROR_JOIN_TO_JOIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system tried to join a drive to a directory on a substituted drive..
        /// </summary>
        internal static string ERROR_JOIN_TO_SUBST {
            get {
                return ResourceManager.GetString("ERROR_JOIN_TO_SUBST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume change journal is being deleted..
        /// </summary>
        internal static string ERROR_JOURNAL_DELETE_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_JOURNAL_DELETE_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The journal entry has been deleted from the journal..
        /// </summary>
        internal static string ERROR_JOURNAL_ENTRY_DELETED {
            get {
                return ResourceManager.GetString("ERROR_JOURNAL_ENTRY_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The journal hook procedure is already installed..
        /// </summary>
        internal static string ERROR_JOURNAL_HOOK_SET {
            get {
                return ResourceManager.GetString("ERROR_JOURNAL_HOOK_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume change journal is not active..
        /// </summary>
        internal static string ERROR_JOURNAL_NOT_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_JOURNAL_NOT_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal operation attempted on a registry key that has been marked for deletion..
        /// </summary>
        internal static string ERROR_KEY_DELETED {
            get {
                return ResourceManager.GetString("ERROR_KEY_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a symbolic link in a registry key that already has subkeys or values..
        /// </summary>
        internal static string ERROR_KEY_HAS_CHILDREN {
            get {
                return ResourceManager.GetString("ERROR_KEY_HAS_CHILDREN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer driver is not compatible with a policy enabled on your computer that blocks NT 4.0 drivers..
        /// </summary>
        internal static string ERROR_KM_DRIVER_BLOCKED {
            get {
                return ResourceManager.GetString("ERROR_KM_DRIVER_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume label you entered exceeds the label character limit of the target file system..
        /// </summary>
        internal static string ERROR_LABEL_TOO_LONG {
            get {
                return ResourceManager.GetString("ERROR_LABEL_TOO_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is disallowed as it could result in an administration account being disabled, deleted or unable to logon..
        /// </summary>
        internal static string ERROR_LAST_ADMIN {
            get {
                return ResourceManager.GetString("ERROR_LAST_ADMIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This list box does not support tab stops..
        /// </summary>
        internal static string ERROR_LB_WITHOUT_TABSTOPS {
            get {
                return ResourceManager.GetString("ERROR_LB_WITHOUT_TABSTOPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Library is full. No slot is available for use..
        /// </summary>
        internal static string ERROR_LIBRARY_FULL {
            get {
                return ResourceManager.GetString("ERROR_LIBRARY_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation cannot be performed on an offline library..
        /// </summary>
        internal static string ERROR_LIBRARY_OFFLINE {
            get {
                return ResourceManager.GetString("ERROR_LIBRARY_OFFLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service being accessed is licensed for a particular number of connections. No more connections can be made to the service at this time because there are already as many connections as the service can accept..
        /// </summary>
        internal static string ERROR_LICENSE_QUOTA_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_LICENSE_QUOTA_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list box identifier was not found..
        /// </summary>
        internal static string ERROR_LISTBOX_ID_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_LISTBOX_ID_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cross-encrypted password is necessary to change this user password..
        /// </summary>
        internal static string ERROR_LM_CROSS_ENCRYPTION_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_LM_CROSS_ENCRYPTION_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No encryption key is available. A well-known encryption key was returned..
        /// </summary>
        internal static string ERROR_LOCAL_USER_SESSION_KEY {
            get {
                return ResourceManager.GetString("ERROR_LOCAL_USER_SESSION_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to lock a region of a file..
        /// </summary>
        internal static string ERROR_LOCK_FAILED {
            get {
                return ResourceManager.GetString("ERROR_LOCK_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process cannot access the file because another process has locked a portion of the file..
        /// </summary>
        internal static string ERROR_LOCK_VIOLATION {
            get {
                return ResourceManager.GetString("ERROR_LOCK_VIOLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The segment is locked and cannot be reallocated..
        /// </summary>
        internal static string ERROR_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Records were appended to the log or reservation changes were made, but the log could not be flushed..
        /// </summary>
        internal static string ERROR_LOG_APPENDED_FLUSH_FAILED {
            get {
                return ResourceManager.GetString("ERROR_LOG_APPENDED_FLUSH_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log archival is in progress..
        /// </summary>
        internal static string ERROR_LOG_ARCHIVE_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_LOG_ARCHIVE_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation requires an archive context..
        /// </summary>
        internal static string ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered a partial or incomplete log block..
        /// </summary>
        internal static string ERROR_LOG_BLOCK_INCOMPLETE {
            get {
                return ResourceManager.GetString("ERROR_LOG_BLOCK_INCOMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an invalid log block..
        /// </summary>
        internal static string ERROR_LOG_BLOCK_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_BLOCK_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an invalid log block version..
        /// </summary>
        internal static string ERROR_LOG_BLOCK_VERSION {
            get {
                return ResourceManager.GetString("ERROR_LOG_BLOCK_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service user marshalling buffers are exhausted..
        /// </summary>
        internal static string ERROR_LOG_BLOCKS_EXHAUSTED {
            get {
                return ResourceManager.GetString("ERROR_LOG_BLOCKS_EXHAUSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service cannot delete log file or file system container..
        /// </summary>
        internal static string ERROR_LOG_CANT_DELETE {
            get {
                return ResourceManager.GetString("ERROR_LOG_CANT_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A log client has already registered on the stream..
        /// </summary>
        internal static string ERROR_LOG_CLIENT_ALREADY_REGISTERED {
            get {
                return ResourceManager.GetString("ERROR_LOG_CLIENT_ALREADY_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A log client has not been registered on the stream..
        /// </summary>
        internal static string ERROR_LOG_CLIENT_NOT_REGISTERED {
            get {
                return ResourceManager.GetString("ERROR_LOG_CLIENT_NOT_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service has reached the maximum allowable containers allocated to a log file..
        /// </summary>
        internal static string ERROR_LOG_CONTAINER_LIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_LOG_CONTAINER_LIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an error when attempting open a log container..
        /// </summary>
        internal static string ERROR_LOG_CONTAINER_OPEN_FAILED {
            get {
                return ResourceManager.GetString("ERROR_LOG_CONTAINER_OPEN_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an error when attempting to read from a log container..
        /// </summary>
        internal static string ERROR_LOG_CONTAINER_READ_FAILED {
            get {
                return ResourceManager.GetString("ERROR_LOG_CONTAINER_READ_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an invalid container state when attempting a requested action..
        /// </summary>
        internal static string ERROR_LOG_CONTAINER_STATE_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_CONTAINER_STATE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an error when attempting to write to a log container..
        /// </summary>
        internal static string ERROR_LOG_CONTAINER_WRITE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_LOG_CONTAINER_WRITE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log data is corrupt..
        /// </summary>
        internal static string ERROR_LOG_CORRUPTION_DETECTED {
            get {
                return ResourceManager.GetString("ERROR_LOG_CORRUPTION_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation failed because the log is a dedicated log..
        /// </summary>
        internal static string ERROR_LOG_DEDICATED {
            get {
                return ResourceManager.GetString("ERROR_LOG_DEDICATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation requires a non-ephemeral log, but the log is ephemeral..
        /// </summary>
        internal static string ERROR_LOG_EPHEMERAL {
            get {
                return ResourceManager.GetString("ERROR_LOG_EPHEMERAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event log file is full..
        /// </summary>
        internal static string ERROR_LOG_FILE_FULL {
            get {
                return ResourceManager.GetString("ERROR_LOG_FILE_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log space is exhausted..
        /// </summary>
        internal static string ERROR_LOG_FULL {
            get {
                return ResourceManager.GetString("ERROR_LOG_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request has already been made to handle the log full condition..
        /// </summary>
        internal static string ERROR_LOG_FULL_HANDLER_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_LOG_FULL_HANDLER_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to create space in the transactional resource manager&apos;s log failed. The failure status has been recorded in the event log..
        /// </summary>
        internal static string ERROR_LOG_GROWTH_FAILED {
            get {
                return ResourceManager.GetString("ERROR_LOG_GROWTH_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security on the log and its containers is inconsistent..
        /// </summary>
        internal static string ERROR_LOG_INCONSISTENT_SECURITY {
            get {
                return ResourceManager.GetString("ERROR_LOG_INCONSISTENT_SECURITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an attempt access data outside the active log range..
        /// </summary>
        internal static string ERROR_LOG_INVALID_RANGE {
            get {
                return ResourceManager.GetString("ERROR_LOG_INVALID_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered a corrupted metadata file..
        /// </summary>
        internal static string ERROR_LOG_METADATA_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_LOG_METADATA_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log metadata flush failed..
        /// </summary>
        internal static string ERROR_LOG_METADATA_FLUSH_FAILED {
            get {
                return ResourceManager.GetString("ERROR_LOG_METADATA_FLUSH_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered a metadata file with inconsistent data..
        /// </summary>
        internal static string ERROR_LOG_METADATA_INCONSISTENT {
            get {
                return ResourceManager.GetString("ERROR_LOG_METADATA_INCONSISTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered a metadata file that could not be created by the log file system..
        /// </summary>
        internal static string ERROR_LOG_METADATA_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_METADATA_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log is multiplexed, no direct writes to the physical log is allowed..
        /// </summary>
        internal static string ERROR_LOG_MULTIPLEXED {
            get {
                return ResourceManager.GetString("ERROR_LOG_MULTIPLEXED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered a log stream with no restart area..
        /// </summary>
        internal static string ERROR_LOG_NO_RESTART {
            get {
                return ResourceManager.GetString("ERROR_LOG_NO_RESTART", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log must have at least two containers before it can be read from or written to..
        /// </summary>
        internal static string ERROR_LOG_NOT_ENOUGH_CONTAINERS {
            get {
                return ResourceManager.GetString("ERROR_LOG_NOT_ENOUGH_CONTAINERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log space cannot be reclaimed because the log is pinned..
        /// </summary>
        internal static string ERROR_LOG_PINNED {
            get {
                return ResourceManager.GetString("ERROR_LOG_PINNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log space cannot be reclaimed because the log is pinned by the archive tail..
        /// </summary>
        internal static string ERROR_LOG_PINNED_ARCHIVE_TAIL {
            get {
                return ResourceManager.GetString("ERROR_LOG_PINNED_ARCHIVE_TAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log is pinned due to reservation consuming most of the log space. Free some reserved records to make space available..
        /// </summary>
        internal static string ERROR_LOG_PINNED_RESERVATION {
            get {
                return ResourceManager.GetString("ERROR_LOG_PINNED_RESERVATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log policy could not be installed because a policy of the same type is already present..
        /// </summary>
        internal static string ERROR_LOG_POLICY_ALREADY_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_LOG_POLICY_ALREADY_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A policy on the log in question prevented the operation from completing..
        /// </summary>
        internal static string ERROR_LOG_POLICY_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_LOG_POLICY_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installed set of policies on the log is invalid..
        /// </summary>
        internal static string ERROR_LOG_POLICY_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_POLICY_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log policy in question was not installed at the time of the request..
        /// </summary>
        internal static string ERROR_LOG_POLICY_NOT_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_LOG_POLICY_NOT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an attempt read from a marshalling area with an invalid read context..
        /// </summary>
        internal static string ERROR_LOG_READ_CONTEXT_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_READ_CONTEXT_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an attempt to read the log with an invalid read mode..
        /// </summary>
        internal static string ERROR_LOG_READ_MODE_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_READ_MODE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log record is not a record in the log file..
        /// </summary>
        internal static string ERROR_LOG_RECORD_NONEXISTENT {
            get {
                return ResourceManager.GetString("ERROR_LOG_RECORD_NONEXISTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of reserved log records or the adjustment of the number of reserved log records is invalid..
        /// </summary>
        internal static string ERROR_LOG_RECORDS_RESERVED_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_RECORDS_RESERVED_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an attempt to erroneous allocate or dispose reservation space..
        /// </summary>
        internal static string ERROR_LOG_RESERVATION_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_RESERVATION_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested log size is invalid..
        /// </summary>
        internal static string ERROR_LOG_RESIZE_INVALID_SIZE {
            get {
                return ResourceManager.GetString("ERROR_LOG_RESIZE_INVALID_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an invalid log restart area..
        /// </summary>
        internal static string ERROR_LOG_RESTART_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_RESTART_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered an invalid log sector..
        /// </summary>
        internal static string ERROR_LOG_SECTOR_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_SECTOR_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered a log sector with invalid block parity..
        /// </summary>
        internal static string ERROR_LOG_SECTOR_PARITY_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_SECTOR_PARITY_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service encountered a remapped log sector..
        /// </summary>
        internal static string ERROR_LOG_SECTOR_REMAPPED {
            get {
                return ResourceManager.GetString("ERROR_LOG_SECTOR_REMAPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved log space or the adjustment of the log space is invalid..
        /// </summary>
        internal static string ERROR_LOG_SPACE_RESERVED_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_SPACE_RESERVED_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service has attempted to read or write backward past the start of the log..
        /// </summary>
        internal static string ERROR_LOG_START_OF_LOG {
            get {
                return ResourceManager.GetString("ERROR_LOG_START_OF_LOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log service is not in the correct state to perform a requested action..
        /// </summary>
        internal static string ERROR_LOG_STATE_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_STATE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An new or existing archive tail or base of the active log is invalid..
        /// </summary>
        internal static string ERROR_LOG_TAIL_INVALID {
            get {
                return ResourceManager.GetString("ERROR_LOG_TAIL_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to log in during an unauthorized time of day for this account..
        /// </summary>
        internal static string ERROR_LOGIN_TIME_RESTRICTION {
            get {
                return ResourceManager.GetString("ERROR_LOGIN_TIME_RESTRICTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account is not authorized to log in from this station..
        /// </summary>
        internal static string ERROR_LOGIN_WKSTA_RESTRICTION {
            get {
                return ResourceManager.GetString("ERROR_LOGIN_WKSTA_RESTRICTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user name or password is incorrect..
        /// </summary>
        internal static string ERROR_LOGON_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_LOGON_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logon failure: the user has not been granted the requested logon type at this computer..
        /// </summary>
        internal static string ERROR_LOGON_NOT_GRANTED {
            get {
                return ResourceManager.GetString("ERROR_LOGON_NOT_GRANTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Netlogon service cannot start because another Netlogon service running in the domain conflicts with the specified role..
        /// </summary>
        internal static string ERROR_LOGON_SERVER_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_LOGON_SERVER_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logon session ID is already in use..
        /// </summary>
        internal static string ERROR_LOGON_SESSION_COLLISION {
            get {
                return ResourceManager.GetString("ERROR_LOGON_SESSION_COLLISION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot start a new logon session with an ID that is already in use..
        /// </summary>
        internal static string ERROR_LOGON_SESSION_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_LOGON_SESSION_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logon failure: the user has not been granted the requested logon type at this computer..
        /// </summary>
        internal static string ERROR_LOGON_TYPE_NOT_GRANTED {
            get {
                return ResourceManager.GetString("ERROR_LOGON_TYPE_NOT_GRANTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A long jump has been executed..
        /// </summary>
        internal static string ERROR_LONGJUMP {
            get {
                return ResourceManager.GetString("ERROR_LONGJUMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Delayed Write Failed} Windows was unable to save all the data for the file %hs. The data has been lost. This error may be caused by a failure of your computer hardware or network connection. Please try to save this file elsewhere..
        /// </summary>
        internal static string ERROR_LOST_WRITEBEHIND_DATA {
            get {
                return ResourceManager.GetString("ERROR_LOST_WRITEBEHIND_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error may be caused if the device has been removed or the media is write-protected..
        /// </summary>
        internal static string ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR {
            get {
                return ResourceManager.GetString("ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error may be caused by network connectivity issues. Please try to save this file elsewhere..
        /// </summary>
        internal static string ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED {
            get {
                return ResourceManager.GetString("ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Delayed Write Failed} Windows was unable to save all the data for the file %hs; the data has been lost. This error was returned by the server on which the file exists. Please try to save this file elsewhere..
        /// </summary>
        internal static string ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR {
            get {
                return ResourceManager.GetString("ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more local user identifiers (LUIDs) are available..
        /// </summary>
        internal static string ERROR_LUIDS_EXHAUSTED {
            get {
                return ResourceManager.GetString("ERROR_LUIDS_EXHAUSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The machine is locked and cannot be shut down without the force option..
        /// </summary>
        internal static string ERROR_MACHINE_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_MACHINE_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The indicated element is part of a magazine that is not present..
        /// </summary>
        internal static string ERROR_MAGAZINE_NOT_PRESENT {
            get {
                return ResourceManager.GetString("ERROR_MAGAZINE_NOT_PRESENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string containing localized substitutable content was malformed. Either a dollar sign ($) was followed by something other than a left parenthesis or another dollar sign or an substitution&apos;s right parenthesis was not found..
        /// </summary>
        internal static string ERROR_MALFORMED_SUBSTITUTION_STRING {
            get {
                return ResourceManager.GetString("ERROR_MALFORMED_SUBSTITUTION_STRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base address or the file offset specified does not have the proper alignment..
        /// </summary>
        internal static string ERROR_MAPPED_ALIGNMENT {
            get {
                return ResourceManager.GetString("ERROR_MAPPED_ALIGNMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user/kernel marshalling buffer has overflowed..
        /// </summary>
        internal static string ERROR_MARSHALL_OVERFLOW {
            get {
                return ResourceManager.GetString("ERROR_MARSHALL_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of sessions has been reached..
        /// </summary>
        internal static string ERROR_MAX_SESSIONS_REACHED {
            get {
                return ResourceManager.GetString("ERROR_MAX_SESSIONS_REACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more threads can be created in the system..
        /// </summary>
        internal static string ERROR_MAX_THRDS_REACHED {
            get {
                return ResourceManager.GetString("ERROR_MAX_THRDS_REACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A thread is getting dispatched with MCA EXCEPTION because of MCA..
        /// </summary>
        internal static string ERROR_MCA_EXCEPTION {
            get {
                return ResourceManager.GetString("ERROR_MCA_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal Monitor Configuration API error occurred..
        /// </summary>
        internal static string ERROR_MCA_INTERNAL_ERROR {
            get {
                return ResourceManager.GetString("ERROR_MCA_INTERNAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The monitor returned a DDC/CI capabilities string that did not comply with the ACCESS.bus 3.0, DDC/CI 1.1 or MCCS 2 Revision 1 specification..
        /// </summary>
        internal static string ERROR_MCA_INVALID_CAPABILITIES_STRING {
            get {
                return ResourceManager.GetString("ERROR_MCA_INVALID_CAPABILITIES_STRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The monitor returned an invalid monitor technology type. CRT, Plasma and LCD (TFT) are examples of monitor technology types. This error implies that the monitor violated the MCCS 2.0 or MCCS 2.0 Revision 1 specification..
        /// </summary>
        internal static string ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED {
            get {
                return ResourceManager.GetString("ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The monitor&apos;s VCP Version (0xDF) VCP code returned an invalid version value..
        /// </summary>
        internal static string ERROR_MCA_INVALID_VCP_VERSION {
            get {
                return ResourceManager.GetString("ERROR_MCA_INVALID_VCP_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MCCS version in a monitor&apos;s mccs_ver capability does not match the MCCS version the monitor reports when the VCP Version (0xDF) VCP code is used..
        /// </summary>
        internal static string ERROR_MCA_MCCS_VERSION_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_MCA_MCCS_VERSION_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The monitor does not comply with the MCCS specification it claims to support..
        /// </summary>
        internal static string ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION {
            get {
                return ResourceManager.GetString("ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Machine Check Error has occurred. Please check the system eventlog for additional information..
        /// </summary>
        internal static string ERROR_MCA_OCCURED {
            get {
                return ResourceManager.GetString("ERROR_MCA_OCCURED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The caller of SetMonitorColorTemperature specified a color temperature that the current monitor did not support. This error implies that the monitor violated the MCCS 2.0 or MCCS 2.0 Revision 1 specification..
        /// </summary>
        internal static string ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE {
            get {
                return ResourceManager.GetString("ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Monitor Configuration API only works with monitors that support the MCCS 1.0 specification, MCCS 2.0 specification or the MCCS 2.0 Revision 1 specification..
        /// </summary>
        internal static string ERROR_MCA_UNSUPPORTED_MCCS_VERSION {
            get {
                return ResourceManager.GetString("ERROR_MCA_UNSUPPORTED_MCCS_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The media in the drive may have changed..
        /// </summary>
        internal static string ERROR_MEDIA_CHANGED {
            get {
                return ResourceManager.GetString("ERROR_MEDIA_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Media Changed} The media may have changed..
        /// </summary>
        internal static string ERROR_MEDIA_CHECK {
            get {
                return ResourceManager.GetString("ERROR_MEDIA_CHECK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The medium is not compatible with the device or media pool..
        /// </summary>
        internal static string ERROR_MEDIA_INCOMPATIBLE {
            get {
                return ResourceManager.GetString("ERROR_MEDIA_INCOMPATIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The media is not mounted or ready for use..
        /// </summary>
        internal static string ERROR_MEDIA_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_MEDIA_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The medium currently exists in an offline library and must be online to perform this operation..
        /// </summary>
        internal static string ERROR_MEDIA_OFFLINE {
            get {
                return ResourceManager.GetString("ERROR_MEDIA_OFFLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No media is currently available in this media pool or library..
        /// </summary>
        internal static string ERROR_MEDIA_UNAVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_MEDIA_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transport cannot access the medium..
        /// </summary>
        internal static string ERROR_MEDIUM_NOT_ACCESSIBLE {
            get {
                return ResourceManager.GetString("ERROR_MEDIUM_NOT_ACCESSIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified account name is already a member of the group..
        /// </summary>
        internal static string ERROR_MEMBER_IN_ALIAS {
            get {
                return ResourceManager.GetString("ERROR_MEMBER_IN_ALIAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either the specified user account is already a member of the specified group, or the specified group cannot be deleted because it contains a member..
        /// </summary>
        internal static string ERROR_MEMBER_IN_GROUP {
            get {
                return ResourceManager.GetString("ERROR_MEMBER_IN_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified account name is not a member of the group..
        /// </summary>
        internal static string ERROR_MEMBER_NOT_IN_ALIAS {
            get {
                return ResourceManager.GetString("ERROR_MEMBER_NOT_IN_ALIAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified user account is not a member of the specified group account..
        /// </summary>
        internal static string ERROR_MEMBER_NOT_IN_GROUP {
            get {
                return ResourceManager.GetString("ERROR_MEMBER_NOT_IN_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user cannot be removed from a group because the group is currently the user&apos;s primary group..
        /// </summary>
        internal static string ERROR_MEMBERS_PRIMARY_GROUP {
            get {
                return ResourceManager.GetString("ERROR_MEMBERS_PRIMARY_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hardware has reported an uncorrectable memory error..
        /// </summary>
        internal static string ERROR_MEMORY_HARDWARE {
            get {
                return ResourceManager.GetString("ERROR_MEMORY_HARDWARE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A menu item was not found..
        /// </summary>
        internal static string ERROR_MENU_ITEM_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_MENU_ITEM_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message provided exceeds the maximum size allowed for this parameter..
        /// </summary>
        internal static string ERROR_MESSAGE_EXCEEDS_MAX_SIZE {
            get {
                return ResourceManager.GetString("ERROR_MESSAGE_EXCEEDS_MAX_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message can be used only with synchronous operations..
        /// </summary>
        internal static string ERROR_MESSAGE_SYNC_ONLY {
            get {
                return ResourceManager.GetString("ERROR_MESSAGE_SYNC_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The global filename characters, * or ?, are entered incorrectly or too many global filename characters are specified..
        /// </summary>
        internal static string ERROR_META_EXPANSION_TOO_LONG {
            get {
                return ResourceManager.GetString("ERROR_META_EXPANSION_TOO_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested metafile operation is not supported..
        /// </summary>
        internal static string ERROR_METAFILE_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_METAFILE_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A miniversion may only be opened in the context of the transaction that created it..
        /// </summary>
        internal static string ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION {
            get {
                return ResourceManager.GetString("ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Missing System File} The required system file %hs is bad or missing..
        /// </summary>
        internal static string ERROR_MISSING_SYSTEMFILE {
            get {
                return ResourceManager.GetString("ERROR_MISSING_SYSTEMFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified module could not be found..
        /// </summary>
        internal static string ERROR_MOD_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_MOD_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More data is available..
        /// </summary>
        internal static string ERROR_MORE_DATA {
            get {
                return ResourceManager.GetString("ERROR_MORE_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A serial I/O operation was completed by another write to the serial port. (The IOCTL_SERIAL_XOFF_COUNTER reached zero.).
        /// </summary>
        internal static string ERROR_MORE_WRITES {
            get {
                return ResourceManager.GetString("ERROR_MORE_WRITES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The create operation failed because the name contained at least one mount point which resolves to a volume to which the specified device object is not attached..
        /// </summary>
        internal static string ERROR_MOUNT_POINT_NOT_RESOLVED {
            get {
                return ResourceManager.GetString("ERROR_MOUNT_POINT_NOT_RESOLVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CPUs in this multiprocessor system are not all the same revision level. To use all processors the operating system restricts itself to the features of the least capable processor in the system. Should problems occur with this system, contact the CPU manufacturer to see if this mix of processors is supported..
        /// </summary>
        internal static string ERROR_MP_PROCESSOR_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_MP_PROCESSOR_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot find message text for message number 0x%1 in the message file for %2..
        /// </summary>
        internal static string ERROR_MR_MID_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_MR_MID_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource loader failed to find MUI file..
        /// </summary>
        internal static string ERROR_MUI_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_MUI_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource loader cache doesn&apos;t have loaded MUI entry..
        /// </summary>
        internal static string ERROR_MUI_FILE_NOT_LOADED {
            get {
                return ResourceManager.GetString("ERROR_MUI_FILE_NOT_LOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locale installation failed..
        /// </summary>
        internal static string ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME {
            get {
                return ResourceManager.GetString("ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UI language installation failed..
        /// </summary>
        internal static string ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource loader failed to load MUI file because the file fail to pass validation..
        /// </summary>
        internal static string ERROR_MUI_INVALID_FILE {
            get {
                return ResourceManager.GetString("ERROR_MUI_INVALID_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RC Manifest has invalid culture name..
        /// </summary>
        internal static string ERROR_MUI_INVALID_LOCALE_NAME {
            get {
                return ResourceManager.GetString("ERROR_MUI_INVALID_LOCALE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RC Manifest is corrupted with garbage data or unsupported version or missing required item..
        /// </summary>
        internal static string ERROR_MUI_INVALID_RC_CONFIG {
            get {
                return ResourceManager.GetString("ERROR_MUI_INVALID_RC_CONFIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RC Manifest has invalid ultimatefallback name..
        /// </summary>
        internal static string ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME {
            get {
                return ResourceManager.GetString("ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to acquire a mutant such that its maximum count would have been exceeded..
        /// </summary>
        internal static string ERROR_MUTANT_LIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_MUTANT_LIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mutual Authentication failed. The server&apos;s password is out of date at the domain controller..
        /// </summary>
        internal static string ERROR_MUTUAL_AUTH_FAILED {
            get {
                return ResourceManager.GetString("ERROR_MUTUAL_AUTH_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to move the file pointer before the beginning of the file..
        /// </summary>
        internal static string ERROR_NEGATIVE_SEEK {
            get {
                return ResourceManager.GetString("ERROR_NEGATIVE_SEEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot nest calls to LoadModule..
        /// </summary>
        internal static string ERROR_NESTING_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("ERROR_NESTING_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NtCreateFile API failed. This error should never be returned to an application, it is a place holder for the Windows Lan Manager Redirector to use in its internal error mapping routines..
        /// </summary>
        internal static string ERROR_NET_OPEN_FAILED {
            get {
                return ResourceManager.GetString("ERROR_NET_OPEN_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A write fault occurred on the network..
        /// </summary>
        internal static string ERROR_NET_WRITE_FAULT {
            get {
                return ResourceManager.GetString("ERROR_NET_WRITE_FAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to logon, but the network logon service was not started..
        /// </summary>
        internal static string ERROR_NETLOGON_NOT_STARTED {
            get {
                return ResourceManager.GetString("ERROR_NETLOGON_NOT_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified network name is no longer available..
        /// </summary>
        internal static string ERROR_NETNAME_DELETED {
            get {
                return ResourceManager.GetString("ERROR_NETNAME_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network access is denied..
        /// </summary>
        internal static string ERROR_NETWORK_ACCESS_DENIED {
            get {
                return ResourceManager.GetString("ERROR_NETWORK_ACCESS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network is busy..
        /// </summary>
        internal static string ERROR_NETWORK_BUSY {
            get {
                return ResourceManager.GetString("ERROR_NETWORK_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cluster network is not available for this operation..
        /// </summary>
        internal static string ERROR_NETWORK_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_NETWORK_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network location cannot be reached. For information about network troubleshooting, see Windows Help..
        /// </summary>
        internal static string ERROR_NETWORK_UNREACHABLE {
            get {
                return ResourceManager.GetString("ERROR_NETWORK_UNREACHABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No application is associated with the specified file for this operation..
        /// </summary>
        internal static string ERROR_NO_ASSOCIATION {
            get {
                return ResourceManager.GetString("ERROR_NO_ASSOCIATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of servers for this workgroup is not currently available.
        /// </summary>
        internal static string ERROR_NO_BROWSER_SERVERS_FOUND {
            get {
                return ResourceManager.GetString("ERROR_NO_BROWSER_SERVERS_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A callback return system service cannot be executed when no callback is active..
        /// </summary>
        internal static string ERROR_NO_CALLBACK_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_NO_CALLBACK_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pipe is being closed..
        /// </summary>
        internal static string ERROR_NO_DATA {
            get {
                return ResourceManager.GetString("ERROR_NO_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more data is on the tape..
        /// </summary>
        internal static string ERROR_NO_DATA_DETECTED {
            get {
                return ResourceManager.GetString("ERROR_NO_DATA_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required encryption driver is not loaded for this system..
        /// </summary>
        internal static string ERROR_NO_EFS {
            get {
                return ResourceManager.GetString("ERROR_NO_EFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An event pair synchronization operation was performed using the thread specific client/server event pair object, but no event pair object was associated with the thread..
        /// </summary>
        internal static string ERROR_NO_EVENT_PAIR {
            get {
                return ResourceManager.GetString("ERROR_NO_EVENT_PAIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates that an attempt was made to assign protection to a file system file or directory and one of the SIDs in the security descriptor could not be translated into a GUID that could be stored by the file system. This causes the protection attempt to fail, which may cause a file creation attempt to fail..
        /// </summary>
        internal static string ERROR_NO_GUID_TRANSLATION {
            get {
                return ResourceManager.GetString("ERROR_NO_GUID_TRANSLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt has been made to operate on an impersonation token by a thread that is not currently impersonating a client..
        /// </summary>
        internal static string ERROR_NO_IMPERSONATION_TOKEN {
            get {
                return ResourceManager.GetString("ERROR_NO_IMPERSONATION_TOKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates an ACL contains no inheritable components..
        /// </summary>
        internal static string ERROR_NO_INHERITANCE {
            get {
                return ResourceManager.GetString("ERROR_NO_INHERITANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System could not allocate the required space in a registry log..
        /// </summary>
        internal static string ERROR_NO_LOG_SPACE {
            get {
                return ResourceManager.GetString("ERROR_NO_LOG_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We can&apos;t sign you in with this credential because your domain isn&apos;t available. Make sure your device is connected to your organization&apos;s network and try again. If you previously signed in on this device with another credential, you can sign in with that credential..
        /// </summary>
        internal static string ERROR_NO_LOGON_SERVERS {
            get {
                return ResourceManager.GetString("ERROR_NO_LOGON_SERVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was no match for the specified key in the index..
        /// </summary>
        internal static string ERROR_NO_MATCH {
            get {
                return ResourceManager.GetString("ERROR_NO_MATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No media in drive..
        /// </summary>
        internal static string ERROR_NO_MEDIA_IN_DRIVE {
            get {
                return ResourceManager.GetString("ERROR_NO_MEDIA_IN_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more local devices..
        /// </summary>
        internal static string ERROR_NO_MORE_DEVICES {
            get {
                return ResourceManager.GetString("ERROR_NO_MORE_DEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no more files..
        /// </summary>
        internal static string ERROR_NO_MORE_FILES {
            get {
                return ResourceManager.GetString("ERROR_NO_MORE_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more data is available..
        /// </summary>
        internal static string ERROR_NO_MORE_ITEMS {
            get {
                return ResourceManager.GetString("ERROR_NO_MORE_ITEMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no more matches for the current index enumeration..
        /// </summary>
        internal static string ERROR_NO_MORE_MATCHES {
            get {
                return ResourceManager.GetString("ERROR_NO_MORE_MATCHES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more internal file identifiers available..
        /// </summary>
        internal static string ERROR_NO_MORE_SEARCH_HANDLES {
            get {
                return ResourceManager.GetString("ERROR_NO_MORE_SEARCH_HANDLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current process has used all of its system allowance of handles for Window Manager objects..
        /// </summary>
        internal static string ERROR_NO_MORE_USER_HANDLES {
            get {
                return ResourceManager.GetString("ERROR_NO_MORE_USER_HANDLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network path was either typed incorrectly, does not exist, or the network provider is not currently available. Please try retyping the path or contact your network administrator..
        /// </summary>
        internal static string ERROR_NO_NET_OR_BAD_PATH {
            get {
                return ResourceManager.GetString("ERROR_NO_NET_OR_BAD_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network is not present or not started..
        /// </summary>
        internal static string ERROR_NO_NETWORK {
            get {
                return ResourceManager.GetString("ERROR_NO_NETWORK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {No Paging File Specified} No paging file was specified in the system configuration..
        /// </summary>
        internal static string ERROR_NO_PAGEFILE {
            get {
                return ResourceManager.GetString("ERROR_NO_PAGEFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot start another process at this time..
        /// </summary>
        internal static string ERROR_NO_PROC_SLOTS {
            get {
                return ResourceManager.GetString("ERROR_NO_PROC_SLOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A domain controller promotion is not currently active.
        /// </summary>
        internal static string ERROR_NO_PROMOTION_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_NO_PROMOTION_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No system quota limits are specifically set for this account..
        /// </summary>
        internal static string ERROR_NO_QUOTAS_FOR_ACCOUNT {
            get {
                return ResourceManager.GetString("ERROR_NO_QUOTAS_FOR_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no valid encryption recovery policy configured for this system..
        /// </summary>
        internal static string ERROR_NO_RECOVERY_POLICY {
            get {
                return ResourceManager.GetString("ERROR_NO_RECOVERY_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No recovery program has been configured for this service..
        /// </summary>
        internal static string ERROR_NO_RECOVERY_PROGRAM {
            get {
                return ResourceManager.GetString("ERROR_NO_RECOVERY_PROGRAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The savepoint operation failed because files are open on the transaction. This is not permitted..
        /// </summary>
        internal static string ERROR_NO_SAVEPOINT_WITH_OPEN_FILES {
            get {
                return ResourceManager.GetString("ERROR_NO_SAVEPOINT_WITH_OPEN_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window does not have scroll bars..
        /// </summary>
        internal static string ERROR_NO_SCROLLBARS {
            get {
                return ResourceManager.GetString("ERROR_NO_SCROLLBARS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local account store does not contain secret material for the specified account..
        /// </summary>
        internal static string ERROR_NO_SECRETS {
            get {
                return ResourceManager.GetString("ERROR_NO_SECRETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to perform a security operation on an object that has no associated security..
        /// </summary>
        internal static string ERROR_NO_SECURITY_ON_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_NO_SECURITY_ON_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to abort the system shutdown because no shutdown was in progress..
        /// </summary>
        internal static string ERROR_NO_SHUTDOWN_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_NO_SHUTDOWN_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No process in the command subtree has a signal handler..
        /// </summary>
        internal static string ERROR_NO_SIGNAL_SENT {
            get {
                return ResourceManager.GetString("ERROR_NO_SIGNAL_SENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The site settings object for the specified site does not exist..
        /// </summary>
        internal static string ERROR_NO_SITE_SETTINGS_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_NO_SITE_SETTINGS_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No site name is available for this machine..
        /// </summary>
        internal static string ERROR_NO_SITENAME {
            get {
                return ResourceManager.GetString("ERROR_NO_SITENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Space to store the file waiting to be printed is not available on the server..
        /// </summary>
        internal static string ERROR_NO_SPOOL_SPACE {
            get {
                return ResourceManager.GetString("ERROR_NO_SPOOL_SPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified local group does not exist..
        /// </summary>
        internal static string ERROR_NO_SUCH_ALIAS {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_ALIAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified domain either does not exist or could not be contacted..
        /// </summary>
        internal static string ERROR_NO_SUCH_DOMAIN {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified group does not exist..
        /// </summary>
        internal static string ERROR_NO_SUCH_GROUP {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A specified logon session does not exist. It may already have been terminated..
        /// </summary>
        internal static string ERROR_NO_SUCH_LOGON_SESSION {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_LOGON_SESSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A member could not be added to or removed from the local group because the member does not exist..
        /// </summary>
        internal static string ERROR_NO_SUCH_MEMBER {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_MEMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A specified authentication package is unknown..
        /// </summary>
        internal static string ERROR_NO_SUCH_PACKAGE {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_PACKAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A specified privilege does not exist..
        /// </summary>
        internal static string ERROR_NO_SUCH_PRIVILEGE {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_PRIVILEGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified site does not exist..
        /// </summary>
        internal static string ERROR_NO_SUCH_SITE {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_SITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified account does not exist..
        /// </summary>
        internal static string ERROR_NO_SUCH_USER {
            get {
                return ResourceManager.GetString("ERROR_NO_SUCH_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This offline media cannot be mounted on this system since no enabled drives are present which can be used..
        /// </summary>
        internal static string ERROR_NO_SUPPORTING_DRIVES {
            get {
                return ResourceManager.GetString("ERROR_NO_SUPPORTING_DRIVES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window does not have a system menu..
        /// </summary>
        internal static string ERROR_NO_SYSTEM_MENU {
            get {
                return ResourceManager.GetString("ERROR_NO_SYSTEM_MENU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient system resources exist to complete the requested service..
        /// </summary>
        internal static string ERROR_NO_SYSTEM_RESOURCES {
            get {
                return ResourceManager.GetString("ERROR_NO_SYSTEM_RESOURCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to reference a token that does not exist..
        /// </summary>
        internal static string ERROR_NO_TOKEN {
            get {
                return ResourceManager.GetString("ERROR_NO_TOKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tracking (workstation) service is not running..
        /// </summary>
        internal static string ERROR_NO_TRACKING_SERVICE {
            get {
                return ResourceManager.GetString("ERROR_NO_TRACKING_SERVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The workstation does not have a trust secret..
        /// </summary>
        internal static string ERROR_NO_TRUST_LSA_SECRET {
            get {
                return ResourceManager.GetString("ERROR_NO_TRUST_LSA_SECRET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security database on the server does not have a computer account for this workstation trust relationship..
        /// </summary>
        internal static string ERROR_NO_TRUST_SAM_ACCOUNT {
            get {
                return ResourceManager.GetString("ERROR_NO_TRUST_SAM_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no transaction metadata on the file..
        /// </summary>
        internal static string ERROR_NO_TXF_METADATA {
            get {
                return ResourceManager.GetString("ERROR_NO_TXF_METADATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mapping for the Unicode character exists in the target multi-byte code page..
        /// </summary>
        internal static string ERROR_NO_UNICODE_TRANSLATION {
            get {
                return ResourceManager.GetString("ERROR_NO_UNICODE_TRANSLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no EFS keys defined for the user..
        /// </summary>
        internal static string ERROR_NO_USER_KEYS {
            get {
                return ResourceManager.GetString("ERROR_NO_USER_KEYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no user session key for the specified logon session..
        /// </summary>
        internal static string ERROR_NO_USER_SESSION_KEY {
            get {
                return ResourceManager.GetString("ERROR_NO_USER_SESSION_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Volume ID could not be found..
        /// </summary>
        internal static string ERROR_NO_VOLUME_ID {
            get {
                return ResourceManager.GetString("ERROR_NO_VOLUME_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The disk has no volume label..
        /// </summary>
        internal static string ERROR_NO_VOLUME_LABEL {
            get {
                return ResourceManager.GetString("ERROR_NO_VOLUME_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No wildcards were found..
        /// </summary>
        internal static string ERROR_NO_WILDCARD_CHARACTERS {
            get {
                return ResourceManager.GetString("ERROR_NO_WILDCARD_CHARACTERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a writable domain controller in the domain..
        /// </summary>
        internal static string ERROR_NO_WRITABLE_DC_FOUND {
            get {
                return ResourceManager.GetString("ERROR_NO_WRITABLE_DC_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A yield execution was performed and no thread was available to run..
        /// </summary>
        internal static string ERROR_NO_YIELD_PERFORMED {
            get {
                return ResourceManager.GetString("ERROR_NO_YIELD_PERFORMED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid access to memory location..
        /// </summary>
        internal static string ERROR_NOACCESS {
            get {
                return ResourceManager.GetString("ERROR_NOACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This computer cannot be made a member of a cluster..
        /// </summary>
        internal static string ERROR_NODE_CANNOT_BE_CLUSTERED {
            get {
                return ResourceManager.GetString("ERROR_NODE_CANNOT_BE_CLUSTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource cannot be brought online. The owner node cannot run this resource..
        /// </summary>
        internal static string ERROR_NODE_CANT_HOST_RESOURCE {
            get {
                return ResourceManager.GetString("ERROR_NODE_CANT_HOST_RESOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cluster node is not available for this operation..
        /// </summary>
        internal static string ERROR_NODE_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_NODE_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested interface is not supported..
        /// </summary>
        internal static string ERROR_NOINTERFACE {
            get {
                return ResourceManager.GetString("ERROR_NOINTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account used is an interdomain trust account. Use your global user account or local user account to access this server..
        /// </summary>
        internal static string ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT {
            get {
                return ResourceManager.GetString("ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account used is a server trust account. Use your global user account or local user account to access this server..
        /// </summary>
        internal static string ERROR_NOLOGON_SERVER_TRUST_ACCOUNT {
            get {
                return ResourceManager.GetString("ERROR_NOLOGON_SERVER_TRUST_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account used is a computer account. Use your global user account or local user account to access this server..
        /// </summary>
        internal static string ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT {
            get {
                return ResourceManager.GetString("ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security identifier provided is not from an account domain..
        /// </summary>
        internal static string ERROR_NON_ACCOUNT_SID {
            get {
                return ResourceManager.GetString("ERROR_NON_ACCOUNT_SID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security identifier provided does not have a domain component..
        /// </summary>
        internal static string ERROR_NON_DOMAIN_SID {
            get {
                return ResourceManager.GetString("ERROR_NON_DOMAIN_SID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process a message from a window that is not a multiple document interface (MDI) window..
        /// </summary>
        internal static string ERROR_NON_MDICHILD_WINDOW {
            get {
                return ResourceManager.GetString("ERROR_NON_MDICHILD_WINDOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mapping between account names and security IDs was done..
        /// </summary>
        internal static string ERROR_NONE_MAPPED {
            get {
                return ResourceManager.GetString("ERROR_NONE_MAPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient system resources exist to complete the requested service..
        /// </summary>
        internal static string ERROR_NONPAGED_SYSTEM_RESOURCES {
            get {
                return ResourceManager.GetString("ERROR_NONPAGED_SYSTEM_RESOURCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file or directory is not a reparse point..
        /// </summary>
        internal static string ERROR_NOT_A_REPARSE_POINT {
            get {
                return ResourceManager.GetString("ERROR_NOT_A_REPARSE_POINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all privileges or groups referenced are assigned to the caller..
        /// </summary>
        internal static string ERROR_NOT_ALL_ASSIGNED {
            get {
                return ResourceManager.GetString("ERROR_NOT_ALL_ASSIGNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation being requested was not performed because the user has not been authenticated..
        /// </summary>
        internal static string ERROR_NOT_AUTHENTICATED {
            get {
                return ResourceManager.GetString("ERROR_NOT_AUTHENTICATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The implementation is not capable of performing the request..
        /// </summary>
        internal static string ERROR_NOT_CAPABLE {
            get {
                return ResourceManager.GetString("ERROR_NOT_CAPABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window is not a child window..
        /// </summary>
        internal static string ERROR_NOT_CHILD_WINDOW {
            get {
                return ResourceManager.GetString("ERROR_NOT_CHILD_WINDOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot enumerate a noncontainer..
        /// </summary>
        internal static string ERROR_NOT_CONTAINER {
            get {
                return ResourceManager.GetString("ERROR_NOT_CONTAINER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified disk or diskette cannot be accessed..
        /// </summary>
        internal static string ERROR_NOT_DOS_DISK {
            get {
                return ResourceManager.GetString("ERROR_NOT_DOS_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The library, drive, or media pool must be empty to perform this operation..
        /// </summary>
        internal static string ERROR_NOT_EMPTY {
            get {
                return ResourceManager.GetString("ERROR_NOT_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough memory resources are available to process this command..
        /// </summary>
        internal static string ERROR_NOT_ENOUGH_MEMORY {
            get {
                return ResourceManager.GetString("ERROR_NOT_ENOUGH_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough quota is available to process this command..
        /// </summary>
        internal static string ERROR_NOT_ENOUGH_QUOTA {
            get {
                return ResourceManager.GetString("ERROR_NOT_ENOUGH_QUOTA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough server memory resources are available to process this command..
        /// </summary>
        internal static string ERROR_NOT_ENOUGH_SERVER_MEMORY {
            get {
                return ResourceManager.GetString("ERROR_NOT_ENOUGH_SERVER_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file is not in the defined EFS export format..
        /// </summary>
        internal static string ERROR_NOT_EXPORT_FORMAT {
            get {
                return ResourceManager.GetString("ERROR_NOT_EXPORT_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element not found..
        /// </summary>
        internal static string ERROR_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system tried to delete the JOIN of a drive that is not joined..
        /// </summary>
        internal static string ERROR_NOT_JOINED {
            get {
                return ResourceManager.GetString("ERROR_NOT_JOINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The segment is already unlocked..
        /// </summary>
        internal static string ERROR_NOT_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_NOT_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation being requested was not performed because the user has not logged on to the network. The specified service does not exist..
        /// </summary>
        internal static string ERROR_NOT_LOGGED_ON {
            get {
                return ResourceManager.GetString("ERROR_NOT_LOGGED_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested action is restricted for use by logon processes only. The calling process has not registered as a logon process..
        /// </summary>
        internal static string ERROR_NOT_LOGON_PROCESS {
            get {
                return ResourceManager.GetString("ERROR_NOT_LOGON_PROCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to release mutex not owned by caller..
        /// </summary>
        internal static string ERROR_NOT_OWNER {
            get {
                return ResourceManager.GetString("ERROR_NOT_OWNER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster could not make the specified resource a quorum resource because it is not capable of being a quorum resource..
        /// </summary>
        internal static string ERROR_NOT_QUORUM_CAPABLE {
            get {
                return ResourceManager.GetString("ERROR_NOT_QUORUM_CAPABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster could not make the specified resource a quorum resource because it does not belong to a shared storage class..
        /// </summary>
        internal static string ERROR_NOT_QUORUM_CLASS {
            get {
                return ResourceManager.GetString("ERROR_NOT_QUORUM_CLASS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is not ready..
        /// </summary>
        internal static string ERROR_NOT_READY {
            get {
                return ResourceManager.GetString("ERROR_NOT_READY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system has attempted to load or restore a file into the registry, but the specified file is not in a registry file format..
        /// </summary>
        internal static string ERROR_NOT_REGISTRY_FILE {
            get {
                return ResourceManager.GetString("ERROR_NOT_REGISTRY_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The driver was not loaded because the system is booting into safe mode..
        /// </summary>
        internal static string ERROR_NOT_SAFE_MODE_DRIVER {
            get {
                return ResourceManager.GetString("ERROR_NOT_SAFE_MODE_DRIVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This service cannot be started in Safe Mode.
        /// </summary>
        internal static string ERROR_NOT_SAFEBOOT_SERVICE {
            get {
                return ResourceManager.GetString("ERROR_NOT_SAFEBOOT_SERVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot move the file to a different disk drive..
        /// </summary>
        internal static string ERROR_NOT_SAME_DEVICE {
            get {
                return ResourceManager.GetString("ERROR_NOT_SAME_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target volume is not a snapshot volume. This operation is only valid on a volume mounted as a snapshot..
        /// </summary>
        internal static string ERROR_NOT_SNAPSHOT_VOLUME {
            get {
                return ResourceManager.GetString("ERROR_NOT_SNAPSHOT_VOLUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system tried to delete the substitution of a drive that is not substituted..
        /// </summary>
        internal static string ERROR_NOT_SUBSTED {
            get {
                return ResourceManager.GetString("ERROR_NOT_SUBSTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request is not supported..
        /// </summary>
        internal static string ERROR_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not supported on a computer running Windows Server 2003 for Small Business Server.
        /// </summary>
        internal static string ERROR_NOT_SUPPORTED_ON_SBS {
            get {
                return ResourceManager.GetString("ERROR_NOT_SUPPORTED_ON_SBS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested action is not supported on standard server..
        /// </summary>
        internal static string ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER {
            get {
                return ResourceManager.GetString("ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is not a tiny stream..
        /// </summary>
        internal static string ERROR_NOT_TINY_STREAM {
            get {
                return ResourceManager.GetString("ERROR_NOT_TINY_STREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A process being terminated has no threads to terminate..
        /// </summary>
        internal static string ERROR_NOTHING_TO_TERMINATE {
            get {
                return ResourceManager.GetString("ERROR_NOTHING_TO_TERMINATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This indicates that a notify change request has been completed due to closing the handle which made the notify change request..
        /// </summary>
        internal static string ERROR_NOTIFY_CLEANUP {
            get {
                return ResourceManager.GetString("ERROR_NOTIFY_CLEANUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A notify change request is being completed and the information is not being returned in the caller&apos;s buffer. The caller now needs to enumerate the files to find the changes..
        /// </summary>
        internal static string ERROR_NOTIFY_ENUM_DIR {
            get {
                return ResourceManager.GetString("ERROR_NOTIFY_ENUM_DIR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cross-encrypted password is necessary to change a user password..
        /// </summary>
        internal static string ERROR_NT_CROSS_ENCRYPTION_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_NT_CROSS_ENCRYPTION_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is too complex to be converted to a LAN Manager password. The LAN Manager password returned is a NULL string..
        /// </summary>
        internal static string ERROR_NULL_LM_PASSWORD {
            get {
                return ResourceManager.GetString("ERROR_NULL_LM_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object already exists..
        /// </summary>
        internal static string ERROR_OBJECT_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_OBJECT_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object is already in the list..
        /// </summary>
        internal static string ERROR_OBJECT_IN_LIST {
            get {
                return ResourceManager.GetString("ERROR_OBJECT_IN_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Object Exists} An attempt was made to create an object and the object name already existed..
        /// </summary>
        internal static string ERROR_OBJECT_NAME_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_OBJECT_NAME_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object (file, stream, link) corresponding to the handle has been deleted by a Transaction Savepoint Rollback..
        /// </summary>
        internal static string ERROR_OBJECT_NO_LONGER_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_OBJECT_NO_LONGER_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object identifier does not represent a valid object..
        /// </summary>
        internal static string ERROR_OBJECT_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_OBJECT_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified program requires a newer version of Windows..
        /// </summary>
        internal static string ERROR_OLD_WIN_VERSION {
            get {
                return ResourceManager.GetString("ERROR_OLD_WIN_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is supported only when you are connected to the server..
        /// </summary>
        internal static string ERROR_ONLY_IF_CONNECTED {
            get {
                return ResourceManager.GetString("ERROR_ONLY_IF_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot open the device or file specified..
        /// </summary>
        internal static string ERROR_OPEN_FAILED {
            get {
                return ResourceManager.GetString("ERROR_OPEN_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The I/O operation has been aborted because of either a thread exit or an application request..
        /// </summary>
        internal static string ERROR_OPERATION_ABORTED {
            get {
                return ResourceManager.GetString("ERROR_OPERATION_ABORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An open/create operation completed while an oplock break is underway..
        /// </summary>
        internal static string ERROR_OPLOCK_BREAK_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_OPLOCK_BREAK_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The oplock request is denied..
        /// </summary>
        internal static string ERROR_OPLOCK_NOT_GRANTED {
            get {
                return ResourceManager.GetString("ERROR_OPLOCK_NOT_GRANTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer is out of paper..
        /// </summary>
        internal static string ERROR_OUT_OF_PAPER {
            get {
                return ResourceManager.GetString("ERROR_OUT_OF_PAPER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage to process this request is not available..
        /// </summary>
        internal static string ERROR_OUT_OF_STRUCTURES {
            get {
                return ResourceManager.GetString("ERROR_OUT_OF_STRUCTURES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough memory resources are available to complete this operation..
        /// </summary>
        internal static string ERROR_OUTOFMEMORY {
            get {
                return ResourceManager.GetString("ERROR_OUTOFMEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group policy framework should call the extension even if there are no changes..
        /// </summary>
        internal static string ERROR_OVERRIDE_NOCHANGES {
            get {
                return ResourceManager.GetString("ERROR_OVERRIDE_NOCHANGES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page fault was a demand zero fault..
        /// </summary>
        internal static string ERROR_PAGE_FAULT_COPY_ON_WRITE {
            get {
                return ResourceManager.GetString("ERROR_PAGE_FAULT_COPY_ON_WRITE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page fault was a demand zero fault..
        /// </summary>
        internal static string ERROR_PAGE_FAULT_DEMAND_ZERO {
            get {
                return ResourceManager.GetString("ERROR_PAGE_FAULT_DEMAND_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page fault was a demand zero fault..
        /// </summary>
        internal static string ERROR_PAGE_FAULT_GUARD_PAGE {
            get {
                return ResourceManager.GetString("ERROR_PAGE_FAULT_GUARD_PAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page fault was satisfied by reading from a secondary storage device..
        /// </summary>
        internal static string ERROR_PAGE_FAULT_PAGING_FILE {
            get {
                return ResourceManager.GetString("ERROR_PAGE_FAULT_PAGING_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page fault was a transition fault..
        /// </summary>
        internal static string ERROR_PAGE_FAULT_TRANSITION {
            get {
                return ResourceManager.GetString("ERROR_PAGE_FAULT_TRANSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient system resources exist to complete the requested service..
        /// </summary>
        internal static string ERROR_PAGED_SYSTEM_RESOURCES {
            get {
                return ResourceManager.GetString("ERROR_PAGED_SYSTEM_RESOURCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Unable to Create Paging File} The creation of the paging file %hs failed (%lx). The requested size was %ld..
        /// </summary>
        internal static string ERROR_PAGEFILE_CREATE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_PAGEFILE_CREATE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient quota to complete the requested service..
        /// </summary>
        internal static string ERROR_PAGEFILE_QUOTA {
            get {
                return ResourceManager.GetString("ERROR_PAGEFILE_QUOTA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page file quota was exceeded..
        /// </summary>
        internal static string ERROR_PAGEFILE_QUOTA_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_PAGEFILE_QUOTA_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data present in one of the parameters is more than the function can operate on..
        /// </summary>
        internal static string ERROR_PARAMETER_QUOTA_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_PARAMETER_QUOTA_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only part of a ReadProcessMemory or WriteProcessMemory request was completed..
        /// </summary>
        internal static string ERROR_PARTIAL_COPY {
            get {
                return ResourceManager.GetString("ERROR_PARTIAL_COPY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tape could not be partitioned..
        /// </summary>
        internal static string ERROR_PARTITION_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_PARTITION_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password for this account has expired..
        /// </summary>
        internal static string ERROR_PASSWORD_EXPIRED {
            get {
                return ResourceManager.GetString("ERROR_PASSWORD_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s password must be changed before signing in..
        /// </summary>
        internal static string ERROR_PASSWORD_MUST_CHANGE {
            get {
                return ResourceManager.GetString("ERROR_PASSWORD_MUST_CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update the password. The value provided for the new password does not meet the length, complexity, or history requirements of the domain..
        /// </summary>
        internal static string ERROR_PASSWORD_RESTRICTION {
            get {
                return ResourceManager.GetString("ERROR_PASSWORD_RESTRICTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Installer does not permit updating of managed advertised products. At least one feature of the product must be installed before applying the update..
        /// </summary>
        internal static string ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT {
            get {
                return ResourceManager.GetString("ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid sequence could be found for the set of updates..
        /// </summary>
        internal static string ERROR_PATCH_NO_SEQUENCE {
            get {
                return ResourceManager.GetString("ERROR_PATCH_NO_SEQUENCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This update package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer update package..
        /// </summary>
        internal static string ERROR_PATCH_PACKAGE_INVALID {
            get {
                return ResourceManager.GetString("ERROR_PATCH_PACKAGE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This update package could not be opened. Verify that the update package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer update package..
        /// </summary>
        internal static string ERROR_PATCH_PACKAGE_OPEN_FAILED {
            get {
                return ResourceManager.GetString("ERROR_PATCH_PACKAGE_OPEN_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The update package is not permitted by software restriction policy..
        /// </summary>
        internal static string ERROR_PATCH_PACKAGE_REJECTED {
            get {
                return ResourceManager.GetString("ERROR_PATCH_PACKAGE_REJECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This update package cannot be processed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service..
        /// </summary>
        internal static string ERROR_PATCH_PACKAGE_UNSUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_PATCH_PACKAGE_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update removal was disallowed by policy..
        /// </summary>
        internal static string ERROR_PATCH_REMOVAL_DISALLOWED {
            get {
                return ResourceManager.GetString("ERROR_PATCH_REMOVAL_DISALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation of the update package is not supported..
        /// </summary>
        internal static string ERROR_PATCH_REMOVAL_UNSUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_PATCH_REMOVAL_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upgrade cannot be installed by the Windows Installer service because the program to be upgraded may be missing, or the upgrade may update a different version of the program. Verify that the program to be upgraded exists on your computer and that you have the correct upgrade..
        /// </summary>
        internal static string ERROR_PATCH_TARGET_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_PATCH_TARGET_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path specified cannot be used at this time..
        /// </summary>
        internal static string ERROR_PATH_BUSY {
            get {
                return ResourceManager.GetString("ERROR_PATH_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot find the path specified..
        /// </summary>
        internal static string ERROR_PATH_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_PATH_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current user&apos;s delegated trust creation quota has been exceeded..
        /// </summary>
        internal static string ERROR_PER_USER_TRUST_QUOTA_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_PER_USER_TRUST_QUOTA_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All pipe instances are busy..
        /// </summary>
        internal static string ERROR_PIPE_BUSY {
            get {
                return ResourceManager.GetString("ERROR_PIPE_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a process on other end of the pipe..
        /// </summary>
        internal static string ERROR_PIPE_CONNECTED {
            get {
                return ResourceManager.GetString("ERROR_PIPE_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for a process to open the other end of the pipe..
        /// </summary>
        internal static string ERROR_PIPE_LISTENING {
            get {
                return ResourceManager.GetString("ERROR_PIPE_LISTENING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pipe is local..
        /// </summary>
        internal static string ERROR_PIPE_LOCAL {
            get {
                return ResourceManager.GetString("ERROR_PIPE_LOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No process is on the other end of the pipe..
        /// </summary>
        internal static string ERROR_PIPE_NOT_CONNECTED {
            get {
                return ResourceManager.GetString("ERROR_PIPE_NOT_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Kerberos protocol encountered an error while validating the KDC certificate during smartcard logon. There is more information in the system event log..
        /// </summary>
        internal static string ERROR_PKINIT_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_PKINIT_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Plug and Play query operation was not successful..
        /// </summary>
        internal static string ERROR_PLUGPLAY_QUERY_VETOED {
            get {
                return ResourceManager.GetString("ERROR_PLUGPLAY_QUERY_VETOED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A device is missing in the system BIOS MPS table. This device will not be used. Please contact your system vendor for system BIOS update..
        /// </summary>
        internal static string ERROR_PNP_BAD_MPS_TABLE {
            get {
                return ResourceManager.GetString("ERROR_PNP_BAD_MPS_TABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Driver %2 returned invalid ID for a child device (%3)..
        /// </summary>
        internal static string ERROR_PNP_INVALID_ID {
            get {
                return ResourceManager.GetString("ERROR_PNP_INVALID_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A IRQ translator failed to translate resources..
        /// </summary>
        internal static string ERROR_PNP_IRQ_TRANSLATION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_PNP_IRQ_TRANSLATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device will not start without a reboot..
        /// </summary>
        internal static string ERROR_PNP_REBOOT_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_PNP_REBOOT_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A device was removed so enumeration must be restarted..
        /// </summary>
        internal static string ERROR_PNP_RESTART_ENUMERATION {
            get {
                return ResourceManager.GetString("ERROR_PNP_RESTART_ENUMERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A translator failed to translate resources..
        /// </summary>
        internal static string ERROR_PNP_TRANSLATION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_PNP_TRANSLATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The point passed to GetMouseMovePoints is not in the buffer..
        /// </summary>
        internal static string ERROR_POINT_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_POINT_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The policy object does not exist..
        /// </summary>
        internal static string ERROR_POLICY_OBJECT_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_POLICY_OBJECT_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested policy information is only in the directory service..
        /// </summary>
        internal static string ERROR_POLICY_ONLY_IN_DS {
            get {
                return ResourceManager.GetString("ERROR_POLICY_ONLY_IN_DS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Popup menu already active..
        /// </summary>
        internal static string ERROR_POPUP_ALREADY_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_POPUP_ALREADY_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of message passed to NtRequestPort or NtRequestWaitReplyPort was longer than the maximum message allowed by the port..
        /// </summary>
        internal static string ERROR_PORT_MESSAGE_TOO_LONG {
            get {
                return ResourceManager.GetString("ERROR_PORT_MESSAGE_TOO_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to remove a processes DebugPort was made, but a port was not already associated with the process..
        /// </summary>
        internal static string ERROR_PORT_NOT_SET {
            get {
                return ResourceManager.GetString("ERROR_PORT_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No service is operating at the destination network endpoint on the remote system..
        /// </summary>
        internal static string ERROR_PORT_UNREACHABLE {
            get {
                return ResourceManager.GetString("ERROR_PORT_UNREACHABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A potential deadlock condition has been detected..
        /// </summary>
        internal static string ERROR_POSSIBLE_DEADLOCK {
            get {
                return ResourceManager.GetString("ERROR_POSSIBLE_DEADLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file was found, but it may not be the correct file..
        /// </summary>
        internal static string ERROR_POTENTIAL_FILE_FOUND {
            get {
                return ResourceManager.GetString("ERROR_POTENTIAL_FILE_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified registry key is referenced by a predefined handle..
        /// </summary>
        internal static string ERROR_PREDEFINED_HANDLE {
            get {
                return ResourceManager.GetString("ERROR_PREDEFINED_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Connect Failure on Primary Transport} An attempt was made to connect to the remote server %hs on the primary transport, but the connection failed. The computer WAS able to connect on a secondary transport..
        /// </summary>
        internal static string ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED {
            get {
                return ResourceManager.GetString("ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your file waiting to be printed was deleted..
        /// </summary>
        internal static string ERROR_PRINT_CANCELLED {
            get {
                return ResourceManager.GetString("ERROR_PRINT_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified print monitor has already been installed..
        /// </summary>
        internal static string ERROR_PRINT_MONITOR_ALREADY_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_PRINT_MONITOR_ALREADY_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified print monitor is currently in use..
        /// </summary>
        internal static string ERROR_PRINT_MONITOR_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_PRINT_MONITOR_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified print processor has already been installed..
        /// </summary>
        internal static string ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer already exists..
        /// </summary>
        internal static string ERROR_PRINTER_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified printer has been deleted..
        /// </summary>
        internal static string ERROR_PRINTER_DELETED {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified printer driver is already installed..
        /// </summary>
        internal static string ERROR_PRINTER_DRIVER_ALREADY_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_DRIVER_ALREADY_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer driver is known to harm the system..
        /// </summary>
        internal static string ERROR_PRINTER_DRIVER_BLOCKED {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_DRIVER_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified printer driver was not found on the system and needs to be downloaded..
        /// </summary>
        internal static string ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified printer driver is currently in use..
        /// </summary>
        internal static string ERROR_PRINTER_DRIVER_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_DRIVER_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified printer driver package is currently in use..
        /// </summary>
        internal static string ERROR_PRINTER_DRIVER_PACKAGE_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_DRIVER_PACKAGE_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer driver is known to be unreliable..
        /// </summary>
        internal static string ERROR_PRINTER_DRIVER_WARNED {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_DRIVER_WARNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation is not allowed when there are jobs queued to the printer..
        /// </summary>
        internal static string ERROR_PRINTER_HAS_JOBS_QUEUED {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_HAS_JOBS_QUEUED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No printers were found..
        /// </summary>
        internal static string ERROR_PRINTER_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_PRINTER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer queue is full..
        /// </summary>
        internal static string ERROR_PRINTQ_FULL {
            get {
                return ResourceManager.GetString("ERROR_PRINTQ_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using private DIALOG window words..
        /// </summary>
        internal static string ERROR_PRIVATE_DIALOG_INDEX {
            get {
                return ResourceManager.GetString("ERROR_PRIVATE_DIALOG_INDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required privilege is not held by the client..
        /// </summary>
        internal static string ERROR_PRIVILEGE_NOT_HELD {
            get {
                return ResourceManager.GetString("ERROR_PRIVILEGE_NOT_HELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified procedure could not be found..
        /// </summary>
        internal static string ERROR_PROC_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_PROC_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process terminated unexpectedly..
        /// </summary>
        internal static string ERROR_PROCESS_ABORTED {
            get {
                return ResourceManager.GetString("ERROR_PROCESS_ABORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified process is part of a job..
        /// </summary>
        internal static string ERROR_PROCESS_IN_JOB {
            get {
                return ResourceManager.GetString("ERROR_PROCESS_IN_JOB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either the target process, or the target thread&apos;s containing process, is a protected process..
        /// </summary>
        internal static string ERROR_PROCESS_IS_PROTECTED {
            get {
                return ResourceManager.GetString("ERROR_PROCESS_IS_PROTECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process is already in background processing mode..
        /// </summary>
        internal static string ERROR_PROCESS_MODE_ALREADY_BACKGROUND {
            get {
                return ResourceManager.GetString("ERROR_PROCESS_MODE_ALREADY_BACKGROUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process is not in background processing mode..
        /// </summary>
        internal static string ERROR_PROCESS_MODE_NOT_BACKGROUND {
            get {
                return ResourceManager.GetString("ERROR_PROCESS_MODE_NOT_BACKGROUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified process is not part of a job..
        /// </summary>
        internal static string ERROR_PROCESS_NOT_IN_JOB {
            get {
                return ResourceManager.GetString("ERROR_PROCESS_NOT_IN_JOB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product is uninstalled..
        /// </summary>
        internal static string ERROR_PRODUCT_UNINSTALLED {
            get {
                return ResourceManager.GetString("ERROR_PRODUCT_UNINSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another version of this product is already installed. Installation of this version cannot continue. To configure or remove the existing version of this product, use Add/Remove Programs on the Control Panel..
        /// </summary>
        internal static string ERROR_PRODUCT_VERSION {
            get {
                return ResourceManager.GetString("ERROR_PRODUCT_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified profile is intended for a device of a different type than the specified device..
        /// </summary>
        internal static string ERROR_PROFILE_DOES_NOT_MATCH_DEVICE {
            get {
                return ResourceManager.GetString("ERROR_PROFILE_DOES_NOT_MATCH_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified color profile is not associated with the specified device..
        /// </summary>
        internal static string ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE {
            get {
                return ResourceManager.GetString("ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified color profile was not found..
        /// </summary>
        internal static string ERROR_PROFILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_PROFILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of active profiling objects is at the maximum and no more may be started..
        /// </summary>
        internal static string ERROR_PROFILING_AT_LIMIT {
            get {
                return ResourceManager.GetString("ERROR_PROFILING_AT_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiling not started..
        /// </summary>
        internal static string ERROR_PROFILING_NOT_STARTED {
            get {
                return ResourceManager.GetString("ERROR_PROFILING_NOT_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiling not stopped..
        /// </summary>
        internal static string ERROR_PROFILING_NOT_STOPPED {
            get {
                return ResourceManager.GetString("ERROR_PROFILING_NOT_STOPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A domain controller promotion is currently active..
        /// </summary>
        internal static string ERROR_PROMOTION_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_PROMOTION_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network location cannot be reached. For information about network troubleshooting, see Windows Help..
        /// </summary>
        internal static string ERROR_PROTOCOL_UNREACHABLE {
            get {
                return ResourceManager.GetString("ERROR_PROTOCOL_UNREACHABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have attempted to change your password to one that you have used in the past. The policy of your user account does not allow this. Please select a password that you have not previously used..
        /// </summary>
        internal static string ERROR_PWD_HISTORY_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_PWD_HISTORY_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The policy of your user account does not allow you to change passwords too frequently. This is done to prevent users from changing back to a familiar, but potentially discovered, password. If you feel your password has been compromised then please contact your administrator immediately to have a new one assigned..
        /// </summary>
        internal static string ERROR_PWD_TOO_RECENT {
            get {
                return ResourceManager.GetString("ERROR_PWD_TOO_RECENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password provided is too short to meet the policy of your user account. Please choose a longer password..
        /// </summary>
        internal static string ERROR_PWD_TOO_SHORT {
            get {
                return ResourceManager.GetString("ERROR_PWD_TOO_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quorum disk could not be located by the cluster service..
        /// </summary>
        internal static string ERROR_QUORUM_DISK_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_QUORUM_DISK_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quorum resource cannot reside in the Available Storage group..
        /// </summary>
        internal static string ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP {
            get {
                return ResourceManager.GetString("ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster node failed to take control of the quorum resource because the resource is owned by another active node..
        /// </summary>
        internal static string ERROR_QUORUM_OWNER_ALIVE {
            get {
                return ResourceManager.GetString("ERROR_QUORUM_OWNER_ALIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource could not be deleted or brought offline because it is the quorum resource..
        /// </summary>
        internal static string ERROR_QUORUM_RESOURCE {
            get {
                return ResourceManager.GetString("ERROR_QUORUM_RESOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quorum resource failed to come online..
        /// </summary>
        internal static string ERROR_QUORUM_RESOURCE_ONLINE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_QUORUM_RESOURCE_ONLINE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quorum log could not be created or mounted successfully..
        /// </summary>
        internal static string ERROR_QUORUMLOG_OPEN_FAILED {
            get {
                return ResourceManager.GetString("ERROR_QUORUMLOG_OPEN_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified quota list is internally inconsistent with its descriptor..
        /// </summary>
        internal static string ERROR_QUOTA_LIST_INCONSISTENT {
            get {
                return ResourceManager.GetString("ERROR_QUOTA_LIST_INCONSISTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The range could not be added to the range list because of a conflict..
        /// </summary>
        internal static string ERROR_RANGE_LIST_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_RANGE_LIST_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified range could not be found in the range list..
        /// </summary>
        internal static string ERROR_RANGE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_RANGE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RDP protocol component %2 detected an error in the protocol stream and has disconnected the client..
        /// </summary>
        internal static string ERROR_RDP_PROTOCOL_ERROR {
            get {
                return ResourceManager.GetString("ERROR_RDP_PROTOCOL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot read from the specified device..
        /// </summary>
        internal static string ERROR_READ_FAULT {
            get {
                return ResourceManager.GetString("ERROR_READ_FAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name does not exist in the WINS database..
        /// </summary>
        internal static string ERROR_REC_NON_EXISTENT {
            get {
                return ResourceManager.GetString("ERROR_REC_NON_EXISTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Expedited Data Received} The network transport returned data to its client that was marked as expedited by the remote system..
        /// </summary>
        internal static string ERROR_RECEIVE_EXPEDITED {
            get {
                return ResourceManager.GetString("ERROR_RECEIVE_EXPEDITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Partial Data Received} The network transport returned partial data to its client. The remaining data will be sent later..
        /// </summary>
        internal static string ERROR_RECEIVE_PARTIAL {
            get {
                return ResourceManager.GetString("ERROR_RECEIVE_PARTIAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Partial Expedited Data Received} The network transport returned partial data to its client and this data was marked as expedited by the remote system. The remaining data will be sent later..
        /// </summary>
        internal static string ERROR_RECEIVE_PARTIAL_EXPEDITED {
            get {
                return ResourceManager.GetString("ERROR_RECEIVE_PARTIAL_EXPEDITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A transaction recover failed..
        /// </summary>
        internal static string ERROR_RECOVERY_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_RECOVERY_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transactional resource manager is already consistent. Recovery is not needed..
        /// </summary>
        internal static string ERROR_RECOVERY_NOT_NEEDED {
            get {
                return ResourceManager.GetString("ERROR_RECOVERY_NOT_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified printer or disk device has been paused..
        /// </summary>
        internal static string ERROR_REDIR_PAUSED {
            get {
                return ResourceManager.GetString("ERROR_REDIR_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The redirector is in use and cannot be unloaded..
        /// </summary>
        internal static string ERROR_REDIRECTOR_HAS_OPEN_HANDLES {
            get {
                return ResourceManager.GetString("ERROR_REDIRECTOR_HAS_OPEN_HANDLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A program attempt to use an invalid register value. Normally caused by an uninitialized register. This error is Itanium specific..
        /// </summary>
        internal static string ERROR_REG_NAT_CONSUMPTION {
            get {
                return ResourceManager.GetString("ERROR_REG_NAT_CONSUMPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The registry is corrupted. The structure of one of the files containing registry data is corrupted, or the system&apos;s memory image of the file is corrupted, or the file could not be recovered because the alternate copy or log was absent or corrupted..
        /// </summary>
        internal static string ERROR_REGISTRY_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_REGISTRY_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Registry Hive Recovered} Registry hive (file): %hs was corrupted and it has been recovered. Some data might have been lost..
        /// </summary>
        internal static string ERROR_REGISTRY_HIVE_RECOVERED {
            get {
                return ResourceManager.GetString("ERROR_REGISTRY_HIVE_RECOVERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An I/O operation initiated by the registry failed unrecoverably. The registry could not read in, or write out, or flush, one of the files that contain the system&apos;s image of the registry..
        /// </summary>
        internal static string ERROR_REGISTRY_IO_FAILED {
            get {
                return ResourceManager.GetString("ERROR_REGISTRY_IO_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Low On Registry Space} The system has reached the maximum size allowed for the system part of the registry. Additional storage requests will be ignored..
        /// </summary>
        internal static string ERROR_REGISTRY_QUOTA_LIMIT {
            get {
                return ResourceManager.GetString("ERROR_REGISTRY_QUOTA_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the files in the registry database had to be recovered by use of a log or alternate copy. The recovery was successful..
        /// </summary>
        internal static string ERROR_REGISTRY_RECOVERED {
            get {
                return ResourceManager.GetString("ERROR_REGISTRY_RECOVERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operating system cannot run %1..
        /// </summary>
        internal static string ERROR_RELOC_CHAIN_XEEDS_SEGLIM {
            get {
                return ResourceManager.GetString("ERROR_RELOC_CHAIN_XEEDS_SEGLIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows cannot find the network path. Verify that the network path is correct and the destination computer is not busy or turned off. If Windows still cannot find the network path, contact your network administrator..
        /// </summary>
        internal static string ERROR_REM_NOT_LIST {
            get {
                return ResourceManager.GetString("ERROR_REM_NOT_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote server sent mismatching version number or Fid for a file opened with transactions..
        /// </summary>
        internal static string ERROR_REMOTE_FILE_VERSION_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_REMOTE_FILE_VERSION_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote connections to the Print Spooler are blocked by a policy set on your machine..
        /// </summary>
        internal static string ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED {
            get {
                return ResourceManager.GetString("ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to establish a session to a network server, but there are already too many sessions established to that server..
        /// </summary>
        internal static string ERROR_REMOTE_SESSION_LIMIT_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_REMOTE_SESSION_LIMIT_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote storage service encountered a media error..
        /// </summary>
        internal static string ERROR_REMOTE_STORAGE_MEDIA_ERROR {
            get {
                return ResourceManager.GetString("ERROR_REMOTE_STORAGE_MEDIA_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote storage service is not operational at this time..
        /// </summary>
        internal static string ERROR_REMOTE_STORAGE_NOT_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_REMOTE_STORAGE_NOT_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link..
        /// </summary>
        internal static string ERROR_REPARSE {
            get {
                return ResourceManager.GetString("ERROR_REPARSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The reparse point attribute cannot be set because it conflicts with an existing attribute..
        /// </summary>
        internal static string ERROR_REPARSE_ATTRIBUTE_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_REPARSE_ATTRIBUTE_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link..
        /// </summary>
        internal static string ERROR_REPARSE_OBJECT {
            get {
                return ResourceManager.GetString("ERROR_REPARSE_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag present in the reparse point buffer is invalid..
        /// </summary>
        internal static string ERROR_REPARSE_TAG_INVALID {
            get {
                return ResourceManager.GetString("ERROR_REPARSE_TAG_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a mismatch between the tag specified in the request and the tag present in the reparse point..
        /// </summary>
        internal static string ERROR_REPARSE_TAG_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_REPARSE_TAG_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Reply Message Mismatch} An attempt was made to reply to an LPC message, but the thread specified by the client ID in the message was not waiting on that message..
        /// </summary>
        internal static string ERROR_REPLY_MESSAGE_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_REPLY_MESSAGE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more connections can be made to this remote computer at this time because there are already as many connections as the computer can accept..
        /// </summary>
        internal static string ERROR_REQ_NOT_ACCEP {
            get {
                return ResourceManager.GetString("ERROR_REQ_NOT_ACCEP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request was aborted..
        /// </summary>
        internal static string ERROR_REQUEST_ABORTED {
            get {
                return ResourceManager.GetString("ERROR_REQUEST_ABORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client of a component requested an operation which is not valid given the state of the component instance..
        /// </summary>
        internal static string ERROR_REQUEST_OUT_OF_SEQUENCE {
            get {
                return ResourceManager.GetString("ERROR_REQUEST_OUT_OF_SEQUENCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operator or administrator has refused the request..
        /// </summary>
        internal static string ERROR_REQUEST_REFUSED {
            get {
                return ResourceManager.GetString("ERROR_REQUEST_REFUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation requires an interactive window station..
        /// </summary>
        internal static string ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION {
            get {
                return ResourceManager.GetString("ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource could not be created in the specified resource monitor..
        /// </summary>
        internal static string ERROR_RESMON_CREATE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_RESMON_CREATE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource monitor will not allow the fail operation to be performed while the resource is in its current state. This may happen if the resource is in a pending state..
        /// </summary>
        internal static string ERROR_RESMON_INVALID_STATE {
            get {
                return ResourceManager.GetString("ERROR_RESMON_INVALID_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource could not be brought online by the resource monitor..
        /// </summary>
        internal static string ERROR_RESMON_ONLINE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_RESMON_ONLINE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call to the cluster resource DLL timed out..
        /// </summary>
        internal static string ERROR_RESOURCE_CALL_TIMED_OUT {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_CALL_TIMED_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified image file did not contain a resource section..
        /// </summary>
        internal static string ERROR_RESOURCE_DATA_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_DATA_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A resource required for this operation is disabled..
        /// </summary>
        internal static string ERROR_RESOURCE_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User stopped resource enumeration..
        /// </summary>
        internal static string ERROR_RESOURCE_ENUM_USER_STOP {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_ENUM_USER_STOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cluster resource failed..
        /// </summary>
        internal static string ERROR_RESOURCE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified resource language ID cannot be found in the image file..
        /// </summary>
        internal static string ERROR_RESOURCE_LANG_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_LANG_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified resource name cannot be found in the image file..
        /// </summary>
        internal static string ERROR_RESOURCE_NAME_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_NAME_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource is not available..
        /// </summary>
        internal static string ERROR_RESOURCE_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource could not be found..
        /// </summary>
        internal static string ERROR_RESOURCE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster resource is not online..
        /// </summary>
        internal static string ERROR_RESOURCE_NOT_ONLINE {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_NOT_ONLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource required for this operation does not exist..
        /// </summary>
        internal static string ERROR_RESOURCE_NOT_PRESENT {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_NOT_PRESENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation could not be completed because the cluster resource is online..
        /// </summary>
        internal static string ERROR_RESOURCE_ONLINE {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_ONLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The properties were stored but not all changes will take effect until the next time the resource is brought online..
        /// </summary>
        internal static string ERROR_RESOURCE_PROPERTIES_STORED {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_PROPERTIES_STORED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to modify a resource property failed because it conflicts with another existing property..
        /// </summary>
        internal static string ERROR_RESOURCE_PROPERTY_UNCHANGEABLE {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_PROPERTY_UNCHANGEABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device has succeeded a query-stop and its resource requirements have changed..
        /// </summary>
        internal static string ERROR_RESOURCE_REQUIREMENTS_CHANGED {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_REQUIREMENTS_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified resource type cannot be found in the image file..
        /// </summary>
        internal static string ERROR_RESOURCE_TYPE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_RESOURCE_TYPE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ResourceManager object could not be opened, because it was not found..
        /// </summary>
        internal static string ERROR_RESOURCEMANAGER_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_RESOURCEMANAGER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ResourceManager made no changes or updates to the resource under this transaction..
        /// </summary>
        internal static string ERROR_RESOURCEMANAGER_READ_ONLY {
            get {
                return ResourceManager.GetString("ERROR_RESOURCEMANAGER_READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system was resumed from hibernation..
        /// </summary>
        internal static string ERROR_RESUME_HIBERNATION {
            get {
                return ResourceManager.GetString("ERROR_RESUME_HIBERNATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation could not be completed. A retry should be performed..
        /// </summary>
        internal static string ERROR_RETRY {
            get {
                return ResourceManager.GetString("ERROR_RETRY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates two revision levels are incompatible..
        /// </summary>
        internal static string ERROR_REVISION_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_REVISION_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ring 2 stack is in use..
        /// </summary>
        internal static string ERROR_RING2_STACK_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_RING2_STACK_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The code segment cannot be greater than or equal to 64K..
        /// </summary>
        internal static string ERROR_RING2SEG_MUST_BE_MOVABLE {
            get {
                return ResourceManager.GetString("ERROR_RING2SEG_MUST_BE_MOVABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transactional resource manager has already been started..
        /// </summary>
        internal static string ERROR_RM_ALREADY_STARTED {
            get {
                return ResourceManager.GetString("ERROR_RM_ALREADY_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transaction outcome is unavailable because the resource manager responsible for it has disconnected..
        /// </summary>
        internal static string ERROR_RM_DISCONNECTED {
            get {
                return ResourceManager.GetString("ERROR_RM_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata of the RM has been corrupted. The RM will not function..
        /// </summary>
        internal static string ERROR_RM_METADATA_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_RM_METADATA_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction support within the specified resource manager is not started or was shut down due to an error..
        /// </summary>
        internal static string ERROR_RM_NOT_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_RM_NOT_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified program was written for an earlier version of Windows..
        /// </summary>
        internal static string ERROR_RMODE_APP {
            get {
                return ResourceManager.GetString("ERROR_RMODE_APP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A rollback could not be scheduled because a previously scheduled rollback has already executed or been queued for execution..
        /// </summary>
        internal static string ERROR_ROLLBACK_TIMER_EXPIRED {
            get {
                return ResourceManager.GetString("ERROR_ROLLBACK_TIMER_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data provider requires that previously fetched data is released before asking for more data..
        /// </summary>
        internal static string ERROR_ROWSNOTRELEASED {
            get {
                return ResourceManager.GetString("ERROR_ROWSNOTRELEASED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replication with a nonconfigured partner is not allowed..
        /// </summary>
        internal static string ERROR_RPL_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("ERROR_RPL_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal security database corruption has been encountered..
        /// </summary>
        internal static string ERROR_RXACT_COMMIT_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_RXACT_COMMIT_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This warning level status indicates that the transaction state already exists for the registry sub-tree, but that a transaction commit was previously aborted. The commit has NOT been completed, but has not been rolled back either (so it may still be committed if desired)..
        /// </summary>
        internal static string ERROR_RXACT_COMMIT_NECESSARY {
            get {
                return ResourceManager.GetString("ERROR_RXACT_COMMIT_NECESSARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This success level status indicates that the transaction state already exists for the registry sub-tree, but that a transaction commit was previously aborted. The commit has now been completed..
        /// </summary>
        internal static string ERROR_RXACT_COMMITTED {
            get {
                return ResourceManager.GetString("ERROR_RXACT_COMMITTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transaction state of a registry subtree is incompatible with the requested operation..
        /// </summary>
        internal static string ERROR_RXACT_INVALID_STATE {
            get {
                return ResourceManager.GetString("ERROR_RXACT_INVALID_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This informational level status indicates that a specified registry sub-tree transaction state did not yet exist and had to be created..
        /// </summary>
        internal static string ERROR_RXACT_STATE_CREATED {
            get {
                return ResourceManager.GetString("ERROR_RXACT_STATE_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security Accounts Manager initialization failed because of the following error: %1. Error Status: 0x%2. Click OK to shut down the system and reboot into Safe Mode. Check the event log for detailed information..
        /// </summary>
        internal static string ERROR_SAM_INIT_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_SAM_INIT_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot join or substitute a drive to or for a directory on the same drive..
        /// </summary>
        internal static string ERROR_SAME_DRIVE {
            get {
                return ResourceManager.GetString("ERROR_SAME_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scope specified was not found..
        /// </summary>
        internal static string ERROR_SCOPE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SCOPE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen already locked..
        /// </summary>
        internal static string ERROR_SCREEN_ALREADY_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_SCREEN_ALREADY_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of a secret exceeds the maximum length allowed..
        /// </summary>
        internal static string ERROR_SECRET_TOO_LONG {
            get {
                return ResourceManager.GetString("ERROR_SECRET_TOO_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive cannot find the sector requested..
        /// </summary>
        internal static string ERROR_SECTOR_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SECTOR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive cannot locate a specific area or track on the disk..
        /// </summary>
        internal static string ERROR_SEEK {
            get {
                return ResourceManager.GetString("ERROR_SEEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file pointer cannot be set on the specified device or file..
        /// </summary>
        internal static string ERROR_SEEK_ON_DEVICE {
            get {
                return ResourceManager.GetString("ERROR_SEEK_ON_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Segment Load} A virtual DOS machine (VDM) is loading, unloading, or moving an MS-DOS or Win16 program segment image. An exception is raised so a debugger can load, unload or track symbols and breakpoints within these 16-bit segments..
        /// </summary>
        internal static string ERROR_SEGMENT_NOTIFICATION {
            get {
                return ResourceManager.GetString("ERROR_SEGMENT_NOTIFICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The semaphore is set and cannot be closed..
        /// </summary>
        internal static string ERROR_SEM_IS_SET {
            get {
                return ResourceManager.GetString("ERROR_SEM_IS_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified system semaphore name was not found..
        /// </summary>
        internal static string ERROR_SEM_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SEM_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The previous ownership of this semaphore has ended..
        /// </summary>
        internal static string ERROR_SEM_OWNER_DIED {
            get {
                return ResourceManager.GetString("ERROR_SEM_OWNER_DIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The semaphore timeout period has expired..
        /// </summary>
        internal static string ERROR_SEM_TIMEOUT {
            get {
                return ResourceManager.GetString("ERROR_SEM_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert the diskette for drive %1..
        /// </summary>
        internal static string ERROR_SEM_USER_LIMIT {
            get {
                return ResourceManager.GetString("ERROR_SEM_USER_LIMIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No serial device was successfully initialized. The serial driver will unload..
        /// </summary>
        internal static string ERROR_SERIAL_NO_DEVICE {
            get {
                return ResourceManager.GetString("ERROR_SERIAL_NO_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is currently disabled..
        /// </summary>
        internal static string ERROR_SERVER_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_SERVER_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is in use and cannot be unloaded..
        /// </summary>
        internal static string ERROR_SERVER_HAS_OPEN_HANDLES {
            get {
                return ResourceManager.GetString("ERROR_SERVER_HAS_OPEN_HANDLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is currently enabled..
        /// </summary>
        internal static string ERROR_SERVER_NOT_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_SERVER_NOT_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server machine is shutting down..
        /// </summary>
        internal static string ERROR_SERVER_SHUTDOWN_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_SERVER_SHUTDOWN_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server process is running under a SID different than that required by client..
        /// </summary>
        internal static string ERROR_SERVER_SID_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_SERVER_SID_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance of the service is already running..
        /// </summary>
        internal static string ERROR_SERVICE_ALREADY_RUNNING {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_ALREADY_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service cannot accept control messages at this time..
        /// </summary>
        internal static string ERROR_SERVICE_CANNOT_ACCEPT_CTRL {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_CANNOT_ACCEPT_CTRL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service database is locked..
        /// </summary>
        internal static string ERROR_SERVICE_DATABASE_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_DATABASE_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dependency service does not exist or has been marked for deletion..
        /// </summary>
        internal static string ERROR_SERVICE_DEPENDENCY_DELETED {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_DEPENDENCY_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dependency service or group failed to start..
        /// </summary>
        internal static string ERROR_SERVICE_DEPENDENCY_FAIL {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_DEPENDENCY_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service cannot be started, either because it is disabled or because it has no enabled devices associated with it..
        /// </summary>
        internal static string ERROR_SERVICE_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified service does not exist as an installed service..
        /// </summary>
        internal static string ERROR_SERVICE_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified service already exists..
        /// </summary>
        internal static string ERROR_SERVICE_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service did not start due to a logon failure..
        /// </summary>
        internal static string ERROR_SERVICE_LOGON_FAILED {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_LOGON_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified service has been marked for deletion..
        /// </summary>
        internal static string ERROR_SERVICE_MARKED_FOR_DELETE {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_MARKED_FOR_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No attempts to start the service have been made since the last boot..
        /// </summary>
        internal static string ERROR_SERVICE_NEVER_STARTED {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_NEVER_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A thread could not be created for the service..
        /// </summary>
        internal static string ERROR_SERVICE_NO_THREAD {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_NO_THREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service has not been started..
        /// </summary>
        internal static string ERROR_SERVICE_NOT_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_NOT_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified service does not exist..
        /// </summary>
        internal static string ERROR_SERVICE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The executable program that this service is configured to run in does not implement the service..
        /// </summary>
        internal static string ERROR_SERVICE_NOT_IN_EXE {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_NOT_IN_EXE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service notification client is lagging too far behind the current state of services in the machine..
        /// </summary>
        internal static string ERROR_SERVICE_NOTIFY_CLIENT_LAGGING {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_NOTIFY_CLIENT_LAGGING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service did not respond to the start or control request in a timely fashion..
        /// </summary>
        internal static string ERROR_SERVICE_REQUEST_TIMEOUT {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_REQUEST_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service has returned a service-specific error code..
        /// </summary>
        internal static string ERROR_SERVICE_SPECIFIC_ERROR {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_SPECIFIC_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After starting, the service hung in a start-pending state..
        /// </summary>
        internal static string ERROR_SERVICE_START_HANG {
            get {
                return ResourceManager.GetString("ERROR_SERVICE_START_HANG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple connections to a server or shared resource by the same user, using more than one user name, are not allowed. Disconnect all previous connections to the server or shared resource and try again..
        /// </summary>
        internal static string ERROR_SESSION_CREDENTIAL_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_SESSION_CREDENTIAL_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property set specified does not exist on the object..
        /// </summary>
        internal static string ERROR_SET_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SET_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system BIOS failed an attempt to change the system power state..
        /// </summary>
        internal static string ERROR_SET_POWER_STATE_FAILED {
            get {
                return ResourceManager.GetString("ERROR_SET_POWER_STATE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to change the system power state was vetoed by another application or driver..
        /// </summary>
        internal static string ERROR_SET_POWER_STATE_VETOED {
            get {
                return ResourceManager.GetString("ERROR_SET_POWER_STATE_VETOED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LB_SETCOUNT sent to non-lazy list box..
        /// </summary>
        internal static string ERROR_SETCOUNT_ON_BAD_LB {
            get {
                return ResourceManager.GetString("ERROR_SETCOUNT_ON_BAD_LB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A tape access reached the end of a set of files..
        /// </summary>
        internal static string ERROR_SETMARK_DETECTED {
            get {
                return ResourceManager.GetString("ERROR_SETMARK_DETECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The policy object is shared and can only be modified at the root..
        /// </summary>
        internal static string ERROR_SHARED_POLICY {
            get {
                return ResourceManager.GetString("ERROR_SHARED_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many files opened for sharing..
        /// </summary>
        internal static string ERROR_SHARING_BUFFER_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_SHARING_BUFFER_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote server has been paused or is in the process of being started..
        /// </summary>
        internal static string ERROR_SHARING_PAUSED {
            get {
                return ResourceManager.GetString("ERROR_SHARING_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process cannot access the file because it is being used by another process..
        /// </summary>
        internal static string ERROR_SHARING_VIOLATION {
            get {
                return ResourceManager.GetString("ERROR_SHARING_VIOLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cluster is being shut down..
        /// </summary>
        internal static string ERROR_SHUTDOWN_CLUSTER {
            get {
                return ResourceManager.GetString("ERROR_SHUTDOWN_CLUSTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A system shutdown is in progress..
        /// </summary>
        internal static string ERROR_SHUTDOWN_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_SHUTDOWN_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A system shutdown has already been scheduled..
        /// </summary>
        internal static string ERROR_SHUTDOWN_IS_SCHEDULED {
            get {
                return ResourceManager.GetString("ERROR_SHUTDOWN_IS_SCHEDULED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system shutdown cannot be initiated because there are other users logged on to the computer..
        /// </summary>
        internal static string ERROR_SHUTDOWN_USERS_LOGGED_ON {
            get {
                return ResourceManager.GetString("ERROR_SHUTDOWN_USERS_LOGGED_ON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A signal is already pending..
        /// </summary>
        internal static string ERROR_SIGNAL_PENDING {
            get {
                return ResourceManager.GetString("ERROR_SIGNAL_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The recipient process has refused the signal..
        /// </summary>
        internal static string ERROR_SIGNAL_REFUSED {
            get {
                return ResourceManager.GetString("ERROR_SIGNAL_REFUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot start more than one instance of the specified program..
        /// </summary>
        internal static string ERROR_SINGLE_INSTANCE_APP {
            get {
                return ResourceManager.GetString("ERROR_SINGLE_INSTANCE_APP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Kerberos protocol encountered an error while attempting to utilize the smartcard subsystem..
        /// </summary>
        internal static string ERROR_SMARTCARD_SUBSYSTEM_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_SMARTCARD_SUBSYSTEM_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some mapping between account names and security IDs was not done..
        /// </summary>
        internal static string ERROR_SOME_NOT_MAPPED {
            get {
                return ResourceManager.GetString("ERROR_SOME_NOT_MAPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The indicated source element has no media..
        /// </summary>
        internal static string ERROR_SOURCE_ELEMENT_EMPTY {
            get {
                return ResourceManager.GetString("ERROR_SOURCE_ELEMENT_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sparse operation could not be completed because a transaction is active on the file..
        /// </summary>
        internal static string ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION {
            get {
                return ResourceManager.GetString("ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot perform this operation on built-in accounts..
        /// </summary>
        internal static string ERROR_SPECIAL_ACCOUNT {
            get {
                return ResourceManager.GetString("ERROR_SPECIAL_ACCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot perform this operation on this built-in special group..
        /// </summary>
        internal static string ERROR_SPECIAL_GROUP {
            get {
                return ResourceManager.GetString("ERROR_SPECIAL_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot perform this operation on this built-in special user..
        /// </summary>
        internal static string ERROR_SPECIAL_USER {
            get {
                return ResourceManager.GetString("ERROR_SPECIAL_USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An AddJob call was not issued..
        /// </summary>
        internal static string ERROR_SPL_NO_ADDJOB {
            get {
                return ResourceManager.GetString("ERROR_SPL_NO_ADDJOB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A StartDocPrinter call was not issued..
        /// </summary>
        internal static string ERROR_SPL_NO_STARTDOC {
            get {
                return ResourceManager.GetString("ERROR_SPL_NO_STARTDOC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The spool file was not found..
        /// </summary>
        internal static string ERROR_SPOOL_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SPOOL_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system detected an overrun of a stack-based buffer in this application. This overrun could potentially allow a malicious user to gain control of this application..
        /// </summary>
        internal static string ERROR_STACK_BUFFER_OVERRUN {
            get {
                return ResourceManager.GetString("ERROR_STACK_BUFFER_OVERRUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recursion too deep; the stack overflowed..
        /// </summary>
        internal static string ERROR_STACK_OVERFLOW {
            get {
                return ResourceManager.GetString("ERROR_STACK_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request must be handled by the stack overflow code..
        /// </summary>
        internal static string ERROR_STACK_OVERFLOW_READ {
            get {
                return ResourceManager.GetString("ERROR_STACK_OVERFLOW_READ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The importation from the file failed..
        /// </summary>
        internal static string ERROR_STATIC_INIT {
            get {
                return ResourceManager.GetString("ERROR_STATIC_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The create operation stopped after reaching a symbolic link.
        /// </summary>
        internal static string ERROR_STOPPED_ON_SYMLINK {
            get {
                return ResourceManager.GetString("ERROR_STOPPED_ON_SYMLINK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file miniversion was not found for this transacted file open..
        /// </summary>
        internal static string ERROR_STREAM_MINIVERSION_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_STREAM_MINIVERSION_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file miniversion was found but has been invalidated. Most likely cause is a transaction savepoint rollback..
        /// </summary>
        internal static string ERROR_STREAM_MINIVERSION_NOT_VALID {
            get {
                return ResourceManager.GetString("ERROR_STREAM_MINIVERSION_NOT_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system tried to SUBST a drive to a directory on a joined drive..
        /// </summary>
        internal static string ERROR_SUBST_TO_JOIN {
            get {
                return ResourceManager.GetString("ERROR_SUBST_TO_JOIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system tried to substitute a drive to a directory on a substituted drive..
        /// </summary>
        internal static string ERROR_SUBST_TO_SUBST {
            get {
                return ResourceManager.GetString("ERROR_SUBST_TO_SUBST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation completed successfully..
        /// </summary>
        internal static string ERROR_SUCCESS {
            get {
                return ResourceManager.GetString("ERROR_SUCCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation completed successfully. The system will be restarted so the changes can take effect..
        /// </summary>
        internal static string ERROR_SUCCESS_REBOOT_INITIATED {
            get {
                return ResourceManager.GetString("ERROR_SUCCESS_REBOOT_INITIATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation is successful. Changes will not be effective until the system is rebooted..
        /// </summary>
        internal static string ERROR_SUCCESS_REBOOT_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_SUCCESS_REBOOT_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation is successful. Changes will not be effective until the service is restarted..
        /// </summary>
        internal static string ERROR_SUCCESS_RESTART_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_SUCCESS_RESTART_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error performing inpage operation..
        /// </summary>
        internal static string ERROR_SWAPERROR {
            get {
                return ResourceManager.GetString("ERROR_SWAPERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application attempted to activate a disabled activation context..
        /// </summary>
        internal static string ERROR_SXS_ACTIVATION_CONTEXT_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_SXS_ACTIVATION_CONTEXT_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly is not a deployment..
        /// </summary>
        internal static string ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT {
            get {
                return ResourceManager.GetString("ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The referenced assembly could not be found..
        /// </summary>
        internal static string ERROR_SXS_ASSEMBLY_MISSING {
            get {
                return ResourceManager.GetString("ERROR_SXS_ASSEMBLY_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The referenced assembly is not installed on your system..
        /// </summary>
        internal static string ERROR_SXS_ASSEMBLY_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SXS_ASSEMBLY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The component must be locked before making the request..
        /// </summary>
        internal static string ERROR_SXS_ASSEMBLY_NOT_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_SXS_ASSEMBLY_NOT_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application has failed to start because its side-by-side configuration is incorrect. Please see the application event log or use the command-line sxstrace.exe tool for more detail..
        /// </summary>
        internal static string ERROR_SXS_CANT_GEN_ACTCTX {
            get {
                return ResourceManager.GetString("ERROR_SXS_CANT_GEN_ACTCTX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The component store has been corrupted..
        /// </summary>
        internal static string ERROR_SXS_COMPONENT_STORE_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_SXS_COMPONENT_STORE_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activation context activation stack for the running thread of execution is corrupt..
        /// </summary>
        internal static string ERROR_SXS_CORRUPT_ACTIVATION_STACK {
            get {
                return ResourceManager.GetString("ERROR_SXS_CORRUPT_ACTIVATION_STACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application isolation metadata for this process or thread has become corrupt..
        /// </summary>
        internal static string ERROR_SXS_CORRUPTION {
            get {
                return ResourceManager.GetString("ERROR_SXS_CORRUPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more components referenced directly or indirectly by the application manifest are different versions of the same component which is not permitted..
        /// </summary>
        internal static string ERROR_SXS_DUPLICATE_ASSEMBLY_NAME {
            get {
                return ResourceManager.GetString("ERROR_SXS_DUPLICATE_ASSEMBLY_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more components referenced directly or indirectly by the application manifest have the same COM server CLSIDs..
        /// </summary>
        internal static string ERROR_SXS_DUPLICATE_CLSID {
            get {
                return ResourceManager.GetString("ERROR_SXS_DUPLICATE_CLSID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more components referenced directly or indirectly by the application manifest have files by the same name..
        /// </summary>
        internal static string ERROR_SXS_DUPLICATE_DLL_NAME {
            get {
                return ResourceManager.GetString("ERROR_SXS_DUPLICATE_DLL_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more components referenced directly or indirectly by the application manifest have proxies for the same COM interface IIDs..
        /// </summary>
        internal static string ERROR_SXS_DUPLICATE_IID {
            get {
                return ResourceManager.GetString("ERROR_SXS_DUPLICATE_IID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more components referenced directly or indirectly by the application manifest have the same COM ProgIDs..
        /// </summary>
        internal static string ERROR_SXS_DUPLICATE_PROGID {
            get {
                return ResourceManager.GetString("ERROR_SXS_DUPLICATE_PROGID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more components referenced directly or indirectly by the application manifest have the same COM type library TLBIDs..
        /// </summary>
        internal static string ERROR_SXS_DUPLICATE_TLBID {
            get {
                return ResourceManager.GetString("ERROR_SXS_DUPLICATE_TLBID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more components referenced directly or indirectly by the application manifest have window classes with the same name..
        /// </summary>
        internal static string ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME {
            get {
                return ResourceManager.GetString("ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activation context being deactivated is not the most recently activated one..
        /// </summary>
        internal static string ERROR_SXS_EARLY_DEACTIVATION {
            get {
                return ResourceManager.GetString("ERROR_SXS_EARLY_DEACTIVATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A component&apos;s file does not match the verification information present in the component manifest..
        /// </summary>
        internal static string ERROR_SXS_FILE_HASH_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_SXS_FILE_HASH_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file is not a part of the assembly..
        /// </summary>
        internal static string ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY {
            get {
                return ResourceManager.GetString("ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The component identities are different..
        /// </summary>
        internal static string ERROR_SXS_IDENTITIES_DIFFERENT {
            get {
                return ResourceManager.GetString("ERROR_SXS_IDENTITIES_DIFFERENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An identity contains two definitions for the same attribute..
        /// </summary>
        internal static string ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE {
            get {
                return ResourceManager.GetString("ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identity string is malformed. This may be due to a trailing comma, more than two unnamed attributes, missing attribute name or missing attribute value..
        /// </summary>
        internal static string ERROR_SXS_IDENTITY_PARSE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_SXS_IDENTITY_PARSE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The public key token does not correspond to the public key specified..
        /// </summary>
        internal static string ERROR_SXS_INCORRECT_PUBLIC_KEY_OKEN {
            get {
                return ResourceManager.GetString("ERROR_SXS_INCORRECT_PUBLIC_KEY_OKEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application binding data format is invalid..
        /// </summary>
        internal static string ERROR_SXS_INVALID_ACTCTXDATA_FORMAT {
            get {
                return ResourceManager.GetString("ERROR_SXS_INVALID_ACTCTXDATA_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest contains an attribute for the assembly identity which is not valid..
        /// </summary>
        internal static string ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE {
            get {
                return ResourceManager.GetString("ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied assembly identity has one or more attribute names that contain characters not permitted in XML names..
        /// </summary>
        internal static string ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME {
            get {
                return ResourceManager.GetString("ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activation context being deactivated is not active for the current thread of execution..
        /// </summary>
        internal static string ERROR_SXS_INVALID_DEACTIVATION {
            get {
                return ResourceManager.GetString("ERROR_SXS_INVALID_DEACTIVATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of an attribute in an identity is not within the legal range..
        /// </summary>
        internal static string ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME {
            get {
                return ResourceManager.GetString("ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of an attribute in an identity is not within the legal range..
        /// </summary>
        internal static string ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE {
            get {
                return ResourceManager.GetString("ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest contains a reference to an invalid URI..
        /// </summary>
        internal static string ERROR_SXS_INVALID_XML_NAMESPACE_URI {
            get {
                return ResourceManager.GetString("ERROR_SXS_INVALID_XML_NAMESPACE_URI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested lookup key was not found in any active activation context..
        /// </summary>
        internal static string ERROR_SXS_KEY_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SXS_KEY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest for an assembly used by the application has a reference to a dependent assembly which is not installed.
        /// </summary>
        internal static string ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest file does not begin with the required tag and format information..
        /// </summary>
        internal static string ERROR_SXS_MANIFEST_FORMAT_ERROR {
            get {
                return ResourceManager.GetString("ERROR_SXS_MANIFEST_FORMAT_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identities of the manifests are identical but their contents are different..
        /// </summary>
        internal static string ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT {
            get {
                return ResourceManager.GetString("ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest has a default namespace specified on the assembly element but its value is not &quot;urn:schemas-microsoft-com:asm.v1&quot;..
        /// </summary>
        internal static string ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE {
            get {
                return ResourceManager.GetString("ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest is missing the required default namespace specification on the assembly element..
        /// </summary>
        internal static string ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE {
            get {
                return ResourceManager.GetString("ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest file contains one or more syntax errors..
        /// </summary>
        internal static string ERROR_SXS_MANIFEST_PARSE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_SXS_MANIFEST_PARSE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the manifest exceeds the maximum allowed..
        /// </summary>
        internal static string ERROR_SXS_MANIFEST_TOO_BIG {
            get {
                return ResourceManager.GetString("ERROR_SXS_MANIFEST_TOO_BIG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied assembly identity is missing one or more attributes which must be present in this context..
        /// </summary>
        internal static string ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE {
            get {
                return ResourceManager.GetString("ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activation context being deactivated has already been deactivated..
        /// </summary>
        internal static string ERROR_SXS_MULTIPLE_DEACTIVATION {
            get {
                return ResourceManager.GetString("ERROR_SXS_MULTIPLE_DEACTIVATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The policy manifest contains one or more syntax errors..
        /// </summary>
        internal static string ERROR_SXS_POLICY_PARSE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_SXS_POLICY_PARSE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The private manifest probed has crossed a path with an unsupported reparse point..
        /// </summary>
        internal static string ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT {
            get {
                return ResourceManager.GetString("ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to set the process default activation context failed because the process default activation context was already set..
        /// </summary>
        internal static string ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET {
            get {
                return ResourceManager.GetString("ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A component used by the isolation facility has requested to terminate the process..
        /// </summary>
        internal static string ERROR_SXS_PROCESS_TERMINATION_REQUESTED {
            get {
                return ResourceManager.GetString("ERROR_SXS_PROCESS_TERMINATION_REQUESTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly Protection Error : The catalog for an assembly is missing..
        /// </summary>
        internal static string ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING {
            get {
                return ResourceManager.GetString("ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly Protection Error : The catalog for an assembly is not valid, or does not match the assembly&apos;s manifest..
        /// </summary>
        internal static string ERROR_SXS_PROTECTION_CATALOG_NOT_VALID {
            get {
                return ResourceManager.GetString("ERROR_SXS_PROTECTION_CATALOG_NOT_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly Protection Error : The public key for an assembly was too short to be allowed..
        /// </summary>
        internal static string ERROR_SXS_PROTECTION_PUBLIC_KEY_OO_SHORT {
            get {
                return ResourceManager.GetString("ERROR_SXS_PROTECTION_PUBLIC_KEY_OO_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly Protection Error : Unable to recover the specified assembly..
        /// </summary>
        internal static string ERROR_SXS_PROTECTION_RECOVERY_FAILED {
            get {
                return ResourceManager.GetString("ERROR_SXS_PROTECTION_RECOVERY_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A kernel mode component is releasing a reference on an activation context..
        /// </summary>
        internal static string ERROR_SXS_RELEASE_ACTIVATION_ONTEXT {
            get {
                return ResourceManager.GetString("ERROR_SXS_RELEASE_ACTIVATION_ONTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application manifest contains a reference to a dependent assembly which is not installed.
        /// </summary>
        internal static string ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_OT_INSTALLED {
            get {
                return ResourceManager.GetString("ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_OT_INSTALLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested section was not present in the activation context..
        /// </summary>
        internal static string ERROR_SXS_SECTION_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SXS_SECTION_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The setting is not registered..
        /// </summary>
        internal static string ERROR_SXS_SETTING_NOT_REGISTERED {
            get {
                return ResourceManager.GetString("ERROR_SXS_SETTING_NOT_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activation context of system default assembly could not be generated..
        /// </summary>
        internal static string ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY {
            get {
                return ResourceManager.GetString("ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lack of system resources has required isolated activation to be disabled for the current thread of execution..
        /// </summary>
        internal static string ERROR_SXS_THREAD_QUERIES_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_SXS_THREAD_QUERIES_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more required members of the transaction are not present..
        /// </summary>
        internal static string ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE {
            get {
                return ResourceManager.GetString("ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding requested is not recognized..
        /// </summary>
        internal static string ERROR_SXS_UNKNOWN_ENCODING {
            get {
                return ResourceManager.GetString("ERROR_SXS_UNKNOWN_ENCODING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The encoding group identifier specified is not recognized..
        /// </summary>
        internal static string ERROR_SXS_UNKNOWN_ENCODING_GROUP {
            get {
                return ResourceManager.GetString("ERROR_SXS_UNKNOWN_ENCODING_GROUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An HRESULT could not be translated to a corresponding Win32 error code..
        /// </summary>
        internal static string ERROR_SXS_UNTRANSLATABLE_HRESULT {
            get {
                return ResourceManager.GetString("ERROR_SXS_UNTRANSLATABLE_HRESULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A component version required by the application conflicts with another component version already active..
        /// </summary>
        internal static string ERROR_SXS_VERSION_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_SXS_VERSION_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type requested activation context section does not match the query API used..
        /// </summary>
        internal static string ERROR_SXS_WRONG_SECTION_TYPE {
            get {
                return ResourceManager.GetString("ERROR_SXS_WRONG_SECTION_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : An Invalid character was found in text content..
        /// </summary>
        internal static string ERROR_SXS_XML_E_BADCHARDATA {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_BADCHARDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A string literal contained an invalid character..
        /// </summary>
        internal static string ERROR_SXS_XML_E_BADCHARINSTRING {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_BADCHARINSTRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A name contained an invalid character..
        /// </summary>
        internal static string ERROR_SXS_XML_E_BADNAMECHAR {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_BADNAMECHAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Parameter entities cannot be used inside markup declarations in an internal subset..
        /// </summary>
        internal static string ERROR_SXS_XML_E_BADPEREFINSUBSET {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_BADPEREFINSUBSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A name was started with an invalid character..
        /// </summary>
        internal static string ERROR_SXS_XML_E_BADSTARTNAMECHAR {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_BADSTARTNAMECHAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : The name &apos;xml&apos; is reserved and must be lower case..
        /// </summary>
        internal static string ERROR_SXS_XML_E_BADXMLCASE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_BADXMLCASE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Invalid xml declaration..
        /// </summary>
        internal static string ERROR_SXS_XML_E_BADXMLDECL {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_BADXMLDECL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Incorrect syntax was used in a comment..
        /// </summary>
        internal static string ERROR_SXS_XML_E_COMMENTSYNTAX {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_COMMENTSYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Duplicate attribute..
        /// </summary>
        internal static string ERROR_SXS_XML_E_DUPLICATEATTRIBUTE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_DUPLICATEATTRIBUTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A single or double closing quote character (\&apos; or \&quot;) is missing..
        /// </summary>
        internal static string ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : The character &apos;&gt;&apos; was expected..
        /// </summary>
        internal static string ERROR_SXS_XML_E_EXPECTINGTAGEND {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_EXPECTINGTAGEND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : End of file reached in invalid state for current encoding..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INCOMPLETE_ENCODING {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INCOMPLETE_ENCODING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Internal error..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INTERNALERROR {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INTERNALERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Invalid character for decimal digit..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INVALID_DECIMAL {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INVALID_DECIMAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Invalid character for hexadecimal digit..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INVALID_HEXIDECIMAL {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INVALID_HEXIDECIMAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : The standalone attribute must have the value &apos;yes&apos; or &apos;no&apos;..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INVALID_STANDALONE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INVALID_STANDALONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Invalid unicode character value for this platform..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INVALID_UNICODE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INVALID_UNICODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Invalid version number..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INVALID_VERSION {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INVALID_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Invalid at the top level of the document..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INVALIDATROOTLEVEL {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INVALIDATROOTLEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : System does not support the specified encoding..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INVALIDENCODING {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INVALIDENCODING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Switch from current encoding to specified encoding not supported..
        /// </summary>
        internal static string ERROR_SXS_XML_E_INVALIDSWITCH {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_INVALIDSWITCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Missing parenthesis..
        /// </summary>
        internal static string ERROR_SXS_XML_E_MISSING_PAREN {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_MISSING_PAREN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Missing equals sign between attribute and attribute value..
        /// </summary>
        internal static string ERROR_SXS_XML_E_MISSINGEQUALS {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_MISSINGEQUALS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A string literal was expected, but no opening quote character was found..
        /// </summary>
        internal static string ERROR_SXS_XML_E_MISSINGQUOTE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_MISSINGQUOTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : XML document must have a top level element..
        /// </summary>
        internal static string ERROR_SXS_XML_E_MISSINGROOT {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_MISSINGROOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A semi colon character was expected..
        /// </summary>
        internal static string ERROR_SXS_XML_E_MISSINGSEMICOLON {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_MISSINGSEMICOLON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Required white space was missing..
        /// </summary>
        internal static string ERROR_SXS_XML_E_MISSINGWHITESPACE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_MISSINGWHITESPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Multiple colons are not allowed in a name..
        /// </summary>
        internal static string ERROR_SXS_XML_E_MULTIPLE_COLONS {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_MULTIPLE_COLONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Only one top level element is allowed in an XML document..
        /// </summary>
        internal static string ERROR_SXS_XML_E_MULTIPLEROOTS {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_MULTIPLEROOTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : The namespace prefix is not allowed to start with the reserved string &quot;xml&quot;..
        /// </summary>
        internal static string ERROR_SXS_XML_E_RESERVEDNAMESPACE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_RESERVEDNAMESPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Unbalanced parentheses..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNBALANCEDPAREN {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNBALANCEDPAREN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A CDATA section was not closed..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNCLOSEDCDATA {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNCLOSEDCDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A comment was not closed..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNCLOSEDCOMMENT {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNCLOSEDCOMMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A declaration was not closed..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNCLOSEDDECL {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNCLOSEDDECL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : End element was missing the character &apos;&gt;&apos;..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNCLOSEDENDTAG {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNCLOSEDENDTAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Element was not closed..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNCLOSEDSTARTTAG {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNCLOSEDSTARTTAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : A string literal was not closed..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNCLOSEDSTRING {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNCLOSEDSTRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : The following tags were not closed: %1..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNCLOSEDTAG {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNCLOSEDTAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : The standalone attribute cannot be used in external entities..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNEXPECTED_STANDALONE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNEXPECTED_STANDALONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Whitespace is not allowed at this location..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : End tag was not expected at this location..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNEXPECTEDENDTAG {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNEXPECTEDENDTAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Unexpected end of file..
        /// </summary>
        internal static string ERROR_SXS_XML_E_UNEXPECTEDEOF {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_UNEXPECTEDEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Expecting whitespace or &apos;?&apos;..
        /// </summary>
        internal static string ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Parse Error : Invalid syntax for an xml declaration..
        /// </summary>
        internal static string ERROR_SXS_XML_E_XMLDECLSYNTAX {
            get {
                return ResourceManager.GetString("ERROR_SXS_XML_E_XMLDECLSYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The symbolic link cannot be followed because its type is disabled..
        /// </summary>
        internal static string ERROR_SYMLINK_CLASS_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_SYMLINK_CLASS_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application does not support the current operation on symbolic links..
        /// </summary>
        internal static string ERROR_SYMLINK_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_SYMLINK_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group policy framework should call the extension in the synchronous foreground policy refresh..
        /// </summary>
        internal static string ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAM database on a Windows Server is significantly out of synchronization with the copy on the Domain Controller. A complete synchronization is required..
        /// </summary>
        internal static string ERROR_SYNCHRONIZATION_REQUIRED {
            get {
                return ResourceManager.GetString("ERROR_SYNCHRONIZATION_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested system device cannot be found..
        /// </summary>
        internal static string ERROR_SYSTEM_DEVICE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_SYSTEM_DEVICE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System hive size has exceeded its limit..
        /// </summary>
        internal static string ERROR_SYSTEM_HIVE_TOO_LARGE {
            get {
                return ResourceManager.GetString("ERROR_SYSTEM_HIVE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Fatal System Error} The system image %s is not properly signed. The file has been replaced with the signed file. The system has been shut down..
        /// </summary>
        internal static string ERROR_SYSTEM_IMAGE_BAD_SIGNATURE {
            get {
                return ResourceManager.GetString("ERROR_SYSTEM_IMAGE_BAD_SIGNATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system power state is transitioning from %2 to %3 but could enter %4..
        /// </summary>
        internal static string ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION {
            get {
                return ResourceManager.GetString("ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system power state is transitioning from %2 to %3..
        /// </summary>
        internal static string ERROR_SYSTEM_POWERSTATE_TRANSITION {
            get {
                return ResourceManager.GetString("ERROR_SYSTEM_POWERSTATE_TRANSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Fatal System Error} The %hs system process terminated unexpectedly with a status of 0x.
        /// </summary>
        internal static string ERROR_SYSTEM_PROCESS_TERMINATED {
            get {
                return ResourceManager.GetString("ERROR_SYSTEM_PROCESS_TERMINATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system is in the process of shutting down..
        /// </summary>
        internal static string ERROR_SYSTEM_SHUTDOWN {
            get {
                return ResourceManager.GetString("ERROR_SYSTEM_SHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System trace information was not specified in your CONFIG.SYS file, or tracing is disallowed..
        /// </summary>
        internal static string ERROR_SYSTEM_TRACE {
            get {
                return ResourceManager.GetString("ERROR_SYSTEM_TRACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified tag was not found..
        /// </summary>
        internal static string ERROR_TAG_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_TAG_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required tag is not present..
        /// </summary>
        internal static string ERROR_TAG_NOT_PRESENT {
            get {
                return ResourceManager.GetString("ERROR_TAG_NOT_PRESENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signal handler cannot be set..
        /// </summary>
        internal static string ERROR_THREAD_1_INACTIVE {
            get {
                return ResourceManager.GetString("ERROR_THREAD_1_INACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified thread is already joining a task..
        /// </summary>
        internal static string ERROR_THREAD_ALREADY_IN_TASK {
            get {
                return ResourceManager.GetString("ERROR_THREAD_ALREADY_IN_TASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The thread is already in background processing mode..
        /// </summary>
        internal static string ERROR_THREAD_MODE_ALREADY_BACKGROUND {
            get {
                return ResourceManager.GetString("ERROR_THREAD_MODE_ALREADY_BACKGROUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The thread is not in background processing mode..
        /// </summary>
        internal static string ERROR_THREAD_MODE_NOT_BACKGROUND {
            get {
                return ResourceManager.GetString("ERROR_THREAD_MODE_NOT_BACKGROUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to operate on a thread within a specific process, but the thread specified is not in the process specified..
        /// </summary>
        internal static string ERROR_THREAD_NOT_IN_PROCESS {
            get {
                return ResourceManager.GetString("ERROR_THREAD_NOT_IN_PROCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Thread Suspended} A thread termination occurred while the thread was suspended. The thread was resumed, and termination proceeded..
        /// </summary>
        internal static string ERROR_THREAD_WAS_SUSPENDED {
            get {
                return ResourceManager.GetString("ERROR_THREAD_WAS_SUSPENDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a time and/or date difference between the client and server..
        /// </summary>
        internal static string ERROR_TIME_SKEW {
            get {
                return ResourceManager.GetString("ERROR_TIME_SKEW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation returned because the timeout period expired..
        /// </summary>
        internal static string ERROR_TIMEOUT {
            get {
                return ResourceManager.GetString("ERROR_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to cancel or set a timer that has an associated APC and the subject thread is not the thread that originally set the timer with an associated APC routine..
        /// </summary>
        internal static string ERROR_TIMER_NOT_CANCELED {
            get {
                return ResourceManager.GetString("ERROR_TIMER_NOT_CANCELED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timer resolution was not previously set by the current process..
        /// </summary>
        internal static string ERROR_TIMER_RESOLUTION_NOT_SET {
            get {
                return ResourceManager.GetString("ERROR_TIMER_RESOLUTION_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resumable flag to a timer API was ignored..
        /// </summary>
        internal static string ERROR_TIMER_RESUME_IGNORED {
            get {
                return ResourceManager.GetString("ERROR_TIMER_RESUME_IGNORED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a top-level child window..
        /// </summary>
        internal static string ERROR_TLW_WITH_WSCHILD {
            get {
                return ResourceManager.GetString("ERROR_TLW_WITH_WSCHILD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call to create a TransactionManager object failed because the Tm Identity stored in the logfile does not match the Tm Identity that was passed in as an argument..
        /// </summary>
        internal static string ERROR_TM_IDENTITY_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_TM_IDENTITY_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Transaction Manager was unable to be successfully initialized. Transacted operations are not supported..
        /// </summary>
        internal static string ERROR_TM_INITIALIZATION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_TM_INITIALIZATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation could not be completed because the transaction manager does not have a log..
        /// </summary>
        internal static string ERROR_TM_VOLATILE {
            get {
                return ResourceManager.GetString("ERROR_TM_VOLATILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token is already in use as a primary token..
        /// </summary>
        internal static string ERROR_TOKEN_ALREADY_IN_USE {
            get {
                return ResourceManager.GetString("ERROR_TOKEN_ALREADY_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network BIOS command limit has been reached..
        /// </summary>
        internal static string ERROR_TOO_MANY_CMDS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_CMDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to During a logon attempt, the user&apos;s security context accumulated too many security IDs..
        /// </summary>
        internal static string ERROR_TOO_MANY_CONTEXT_IDS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_CONTEXT_IDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to create more links on a file than the file system supports..
        /// </summary>
        internal static string ERROR_TOO_MANY_LINKS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_LINKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many local user identifiers (LUIDs) were requested at one time..
        /// </summary>
        internal static string ERROR_TOO_MANY_LUIDS_REQUESTED {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_LUIDS_REQUESTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many dynamic-link modules are attached to this program or dynamic-link module..
        /// </summary>
        internal static string ERROR_TOO_MANY_MODULES {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_MODULES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DosMuxSemWait did not execute; too many semaphores are already set..
        /// </summary>
        internal static string ERROR_TOO_MANY_MUXWAITERS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_MUXWAITERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name limit for the local computer network adapter card was exceeded..
        /// </summary>
        internal static string ERROR_TOO_MANY_NAMES {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_NAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot open the file..
        /// </summary>
        internal static string ERROR_TOO_MANY_OPEN_FILES {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_OPEN_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many posts were made to a semaphore..
        /// </summary>
        internal static string ERROR_TOO_MANY_POSTS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_POSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of secrets that may be stored in a single system has been exceeded..
        /// </summary>
        internal static string ERROR_TOO_MANY_SECRETS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_SECRETS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The semaphore cannot be set again..
        /// </summary>
        internal static string ERROR_TOO_MANY_SEM_REQUESTS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_SEM_REQUESTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create another system semaphore..
        /// </summary>
        internal static string ERROR_TOO_MANY_SEMAPHORES {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_SEMAPHORES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network BIOS session limit was exceeded..
        /// </summary>
        internal static string ERROR_TOO_MANY_SESS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_SESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many security IDs have been specified..
        /// </summary>
        internal static string ERROR_TOO_MANY_SIDS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_SIDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create another thread..
        /// </summary>
        internal static string ERROR_TOO_MANY_TCBS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_TCBS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates a process has too many threads to perform the requested action. For example, assignment of a primary token may only be performed when a process has zero or one threads..
        /// </summary>
        internal static string ERROR_TOO_MANY_THREADS {
            get {
                return ResourceManager.GetString("ERROR_TOO_MANY_THREADS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory mapping (creating a mapped section) a remote file under a transaction is not supported..
        /// </summary>
        internal static string ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is too late to perform the requested operation, since the Transaction has already been aborted..
        /// </summary>
        internal static string ERROR_TRANSACTION_ALREADY_ABORTED {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_ALREADY_ABORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is too late to perform the requested operation, since the Transaction has already been committed..
        /// </summary>
        internal static string ERROR_TRANSACTION_ALREADY_COMMITTED {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_ALREADY_COMMITTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transactions cannot be frozen because a freeze is already in progress..
        /// </summary>
        internal static string ERROR_TRANSACTION_FREEZE_IN_PROGRESS {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_FREEZE_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The buffer passed in to PushTransaction or PullTransaction is not in a valid format..
        /// </summary>
        internal static string ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation was made in the context of a transaction that is no longer active..
        /// </summary>
        internal static string ERROR_TRANSACTION_NOT_ACTIVE {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_NOT_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified Transaction object could not be opened, because it was not found..
        /// </summary>
        internal static string ERROR_TRANSACTION_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource manager has attempted to prepare a transaction that it has not successfully joined..
        /// </summary>
        internal static string ERROR_TRANSACTION_NOT_JOINED {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_NOT_JOINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The caller has called a response API, but the response is not expected because the TM did not issue the corresponding request to the caller..
        /// </summary>
        internal static string ERROR_TRANSACTION_NOT_REQUESTED {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_NOT_REQUESTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempt to propagate the Transaction failed..
        /// </summary>
        internal static string ERROR_TRANSACTION_PROPAGATION_FAILED {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_PROPAGATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation is not valid on the Transaction object in its current state..
        /// </summary>
        internal static string ERROR_TRANSACTION_REQUEST_NOT_VALID {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_REQUEST_NOT_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promotion was required in order to allow the resource manager to enlist, but the transaction was set to disallow it..
        /// </summary>
        internal static string ERROR_TRANSACTION_REQUIRED_PROMOTION {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_REQUIRED_PROMOTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A transaction scope could not be entered because the scope handler has not been initialized..
        /// </summary>
        internal static string ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Transaction object already has a superior enlistment, and the caller attempted an operation that would have created a new superior. Only a single superior enlistment is allow..
        /// </summary>
        internal static string ERROR_TRANSACTION_SUPERIOR_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTION_SUPERIOR_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The function attempted to use a name that is reserved for use by another transaction..
        /// </summary>
        internal static string ERROR_TRANSACTIONAL_CONFLICT {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTIONAL_CONFLICT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This object is not allowed to be opened in a transaction..
        /// </summary>
        internal static string ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified TransactionManager object could not be opened, because it was not found..
        /// </summary>
        internal static string ERROR_TRANSACTIONMANAGER_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTIONMANAGER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object specified could not be created or opened, because its associated TransactionManager is not online. The TransactionManager must be brought fully Online by calling RecoverTransactionManager to recover to the end of its LogFile before objects in its Transaction or ResourceManager namespaces can be opened. In addition, errors in writing records to its LogFile can cause a TransactionManager to go offline..
        /// </summary>
        internal static string ERROR_TRANSACTIONMANAGER_NOT_ONLINE {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTIONMANAGER_NOT_ONLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified TransactionManager was unable to create the objects contained in its logfile in the Ob namespace. Therefore, the TransactionManager was unable to recover..
        /// </summary>
        internal static string ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request to thaw frozen transactions was ignored because transactions had not previously been frozen..
        /// </summary>
        internal static string ERROR_TRANSACTIONS_NOT_FROZEN {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTIONS_NOT_FROZEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote server or share does not support transacted file operations..
        /// </summary>
        internal static string ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE {
            get {
                return ResourceManager.GetString("ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested transformation operation is not supported..
        /// </summary>
        internal static string ERROR_TRANSFORM_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("ERROR_TRANSFORM_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The translator has translated these resources into the global space and no further translations should be performed..
        /// </summary>
        internal static string ERROR_TRANSLATION_COMPLETE {
            get {
                return ResourceManager.GetString("ERROR_TRANSLATION_COMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use the transport because it is already in use..
        /// </summary>
        internal static string ERROR_TRANSPORT_FULL {
            get {
                return ResourceManager.GetString("ERROR_TRANSPORT_FULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network logon failed..
        /// </summary>
        internal static string ERROR_TRUST_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_TRUST_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The trust relationship between the primary domain and the trusted domain failed..
        /// </summary>
        internal static string ERROR_TRUSTED_DOMAIN_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_TRUSTED_DOMAIN_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The trust relationship between this workstation and the primary domain failed..
        /// </summary>
        internal static string ERROR_TRUSTED_RELATIONSHIP_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_TRUSTED_RELATIONSHIP_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target session is incompatible with the current session..
        /// </summary>
        internal static string ERROR_TS_INCOMPATIBLE_SESSIONS {
            get {
                return ResourceManager.GetString("ERROR_TS_INCOMPATIBLE_SESSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transactional metadata attribute on the file or directory is corrupt and unreadable..
        /// </summary>
        internal static string ERROR_TXF_ATTRIBUTE_CORRUPT {
            get {
                return ResourceManager.GetString("ERROR_TXF_ATTRIBUTE_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The $Txf directory must be empty for this operation to succeed..
        /// </summary>
        internal static string ERROR_TXF_DIR_NOT_EMPTY {
            get {
                return ResourceManager.GetString("ERROR_TXF_DIR_NOT_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction metadata is already present on this file and cannot be superseded..
        /// </summary>
        internal static string ERROR_TXF_METADATA_ALREADY_PRESENT {
            get {
                return ResourceManager.GetString("ERROR_TXF_METADATA_ALREADY_PRESENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive cannot be cleaned or does not support cleaning..
        /// </summary>
        internal static string ERROR_UNABLE_TO_CLEAN {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_CLEAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to eject the medium because it is in a drive..
        /// </summary>
        internal static string ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve the drive status..
        /// </summary>
        internal static string ERROR_UNABLE_TO_INVENTORY_DRIVE {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_INVENTORY_DRIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve the slot status..
        /// </summary>
        internal static string ERROR_UNABLE_TO_INVENTORY_SLOT {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_INVENTORY_SLOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve status about the transport..
        /// </summary>
        internal static string ERROR_UNABLE_TO_INVENTORY_TRANSPORT {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_INVENTORY_TRANSPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load the medium into the drive..
        /// </summary>
        internal static string ERROR_UNABLE_TO_LOAD_MEDIUM {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_LOAD_MEDIUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to lock the media eject mechanism..
        /// </summary>
        internal static string ERROR_UNABLE_TO_LOCK_MEDIA {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_LOCK_MEDIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to move the replacement file to the file to be replaced. The file to be replaced has retained its original name..
        /// </summary>
        internal static string ERROR_UNABLE_TO_MOVE_REPLACEMENT {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_MOVE_REPLACEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to move the replacement file to the file to be replaced. The file to be replaced has been renamed using the backup name..
        /// </summary>
        internal static string ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_MOVE_REPLACEMENT_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to remove the file to be replaced..
        /// </summary>
        internal static string ERROR_UNABLE_TO_REMOVE_REPLACED {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_REMOVE_REPLACED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to unload the media..
        /// </summary>
        internal static string ERROR_UNABLE_TO_UNLOAD_MEDIA {
            get {
                return ResourceManager.GetString("ERROR_UNABLE_TO_UNLOAD_MEDIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Unicode character is not defined in the Unicode character set installed on the system..
        /// </summary>
        internal static string ERROR_UNDEFINED_CHARACTER {
            get {
                return ResourceManager.GetString("ERROR_UNDEFINED_CHARACTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected network error occurred..
        /// </summary>
        internal static string ERROR_UNEXP_NET_ERR {
            get {
                return ResourceManager.GetString("ERROR_UNEXP_NET_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception..
        /// </summary>
        internal static string ERROR_UNEXPECTED_MM_CREATE_ERR {
            get {
                return ResourceManager.GetString("ERROR_UNEXPECTED_MM_CREATE_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception..
        /// </summary>
        internal static string ERROR_UNEXPECTED_MM_EXTEND_ERR {
            get {
                return ResourceManager.GetString("ERROR_UNEXPECTED_MM_EXTEND_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter. In this case information is lost, however, the filter correctly handles the exception..
        /// </summary>
        internal static string ERROR_UNEXPECTED_MM_MAP_ERROR {
            get {
                return ResourceManager.GetString("ERROR_UNEXPECTED_MM_MAP_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected on-medium identifier..
        /// </summary>
        internal static string ERROR_UNEXPECTED_OMID {
            get {
                return ResourceManager.GetString("ERROR_UNEXPECTED_OMID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Application Error} The exception %s (0x.
        /// </summary>
        internal static string ERROR_UNHANDLED_EXCEPTION {
            get {
                return ResourceManager.GetString("ERROR_UNHANDLED_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient information exists to identify the cause of failure..
        /// </summary>
        internal static string ERROR_UNIDENTIFIED_ERROR {
            get {
                return ResourceManager.GetString("ERROR_UNIDENTIFIED_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Component ID not registered..
        /// </summary>
        internal static string ERROR_UNKNOWN_COMPONENT {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_COMPONENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature ID not registered..
        /// </summary>
        internal static string ERROR_UNKNOWN_FEATURE {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_FEATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The update is not applied to this product..
        /// </summary>
        internal static string ERROR_UNKNOWN_PATCH {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_PATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified port is unknown..
        /// </summary>
        internal static string ERROR_UNKNOWN_PORT {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_PORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified print monitor is unknown..
        /// </summary>
        internal static string ERROR_UNKNOWN_PRINT_MONITOR {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_PRINT_MONITOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer driver is unknown..
        /// </summary>
        internal static string ERROR_UNKNOWN_PRINTER_DRIVER {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_PRINTER_DRIVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The print processor is unknown..
        /// </summary>
        internal static string ERROR_UNKNOWN_PRINTPROCESSOR {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_PRINTPROCESSOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action is only valid for products that are currently installed..
        /// </summary>
        internal static string ERROR_UNKNOWN_PRODUCT {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_PRODUCT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown property..
        /// </summary>
        internal static string ERROR_UNKNOWN_PROPERTY {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_PROPERTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The revision level is unknown..
        /// </summary>
        internal static string ERROR_UNKNOWN_REVISION {
            get {
                return ResourceManager.GetString("ERROR_UNKNOWN_REVISION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A substitution string had no mapping..
        /// </summary>
        internal static string ERROR_UNMAPPED_SUBSTITUTION_STRING {
            get {
                return ResourceManager.GetString("ERROR_UNMAPPED_SUBSTITUTION_STRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The disk media is not recognized. It may not be formatted..
        /// </summary>
        internal static string ERROR_UNRECOGNIZED_MEDIA {
            get {
                return ResourceManager.GetString("ERROR_UNRECOGNIZED_MEDIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume does not contain a recognized file system. Please make sure that all required file system drivers are loaded and that the volume is not corrupted..
        /// </summary>
        internal static string ERROR_UNRECOGNIZED_VOLUME {
            get {
                return ResourceManager.GetString("ERROR_UNRECOGNIZED_VOLUME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified compression format is unsupported..
        /// </summary>
        internal static string ERROR_UNSUPPORTED_COMPRESSION {
            get {
                return ResourceManager.GetString("ERROR_UNSUPPORTED_COMPRESSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data of this type is not supported..
        /// </summary>
        internal static string ERROR_UNSUPPORTED_TYPE {
            get {
                return ResourceManager.GetString("ERROR_UNSUPPORTED_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unwind exception code..
        /// </summary>
        internal static string ERROR_UNWIND {
            get {
                return ResourceManager.GetString("ERROR_UNWIND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A frame consolidation has been executed..
        /// </summary>
        internal static string ERROR_UNWIND_CONSOLIDATE {
            get {
                return ResourceManager.GetString("ERROR_UNWIND_CONSOLIDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current user&apos;s delegated trust deletion quota has been exceeded..
        /// </summary>
        internal static string ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED {
            get {
                return ResourceManager.GetString("ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified account already exists..
        /// </summary>
        internal static string ERROR_USER_EXISTS {
            get {
                return ResourceManager.GetString("ERROR_USER_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation cannot be performed on a file with a user-mapped section open..
        /// </summary>
        internal static string ERROR_USER_MAPPED_FILE {
            get {
                return ResourceManager.GetString("ERROR_USER_MAPPED_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User profile cannot be loaded..
        /// </summary>
        internal static string ERROR_USER_PROFILE_LOAD {
            get {
                return ResourceManager.GetString("ERROR_USER_PROFILE_LOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The validation process needs to continue on to the next step..
        /// </summary>
        internal static string ERROR_VALIDATE_CONTINUE {
            get {
                return ResourceManager.GetString("ERROR_VALIDATE_CONTINUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The session was canceled..
        /// </summary>
        internal static string ERROR_VC_DISCONNECTED {
            get {
                return ResourceManager.GetString("ERROR_VC_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %1 is a 16-bit application. You do not have permissions to execute 16-bit applications. Check your permissions with your system administrator..
        /// </summary>
        internal static string ERROR_VDM_DISALLOWED {
            get {
                return ResourceManager.GetString("ERROR_VDM_DISALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NTVDM encountered a hard error..
        /// </summary>
        internal static string ERROR_VDM_HARD_ERROR {
            get {
                return ResourceManager.GetString("ERROR_VDM_HARD_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application verifier has found an error in the current process..
        /// </summary>
        internal static string ERROR_VERIFIER_STOP {
            get {
                return ResourceManager.GetString("ERROR_VERIFIER_STOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A version number could not be parsed..
        /// </summary>
        internal static string ERROR_VERSION_PARSE_ERROR {
            get {
                return ResourceManager.GetString("ERROR_VERSION_PARSE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file contains a virus or potentially unwanted software and cannot be opened. Due to the nature of this virus or potentially unwanted software, the file has been removed from this location..
        /// </summary>
        internal static string ERROR_VIRUS_DELETED {
            get {
                return ResourceManager.GetString("ERROR_VIRUS_DELETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation did not complete successfully because the file contains a virus or potentially unwanted software..
        /// </summary>
        internal static string ERROR_VIRUS_INFECTED {
            get {
                return ResourceManager.GetString("ERROR_VIRUS_INFECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Volume Shadow Copy Service} The system is now ready for hibernation..
        /// </summary>
        internal static string ERROR_VOLSNAP_HIBERNATE_READY {
            get {
                return ResourceManager.GetString("ERROR_VOLSNAP_HIBERNATE_READY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Volume Shadow Copy Service} Please wait while the Volume Shadow Copy Service prepares volume %hs for hibernation..
        /// </summary>
        internal static string ERROR_VOLSNAP_PREPARE_HIBERNATE {
            get {
                return ResourceManager.GetString("ERROR_VOLSNAP_PREPARE_HIBERNATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume contains system or paging files..
        /// </summary>
        internal static string ERROR_VOLUME_CONTAINS_SYS_FILES {
            get {
                return ResourceManager.GetString("ERROR_VOLUME_CONTAINS_SYS_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new volume has been mounted by a file system..
        /// </summary>
        internal static string ERROR_VOLUME_MOUNTED {
            get {
                return ResourceManager.GetString("ERROR_VOLUME_MOUNTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single Instance Storage is not available on this volume..
        /// </summary>
        internal static string ERROR_VOLUME_NOT_SIS_ENABLED {
            get {
                return ResourceManager.GetString("ERROR_VOLUME_NOT_SIS_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The disk partition does not support file encryption..
        /// </summary>
        internal static string ERROR_VOLUME_NOT_SUPPORT_EFS {
            get {
                return ResourceManager.GetString("ERROR_VOLUME_NOT_SUPPORT_EFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation is blocked waiting for an oplock..
        /// </summary>
        internal static string ERROR_WAIT_FOR_OPLOCK {
            get {
                return ResourceManager.GetString("ERROR_WAIT_FOR_OPLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no child processes to wait for..
        /// </summary>
        internal static string ERROR_WAIT_NO_CHILDREN {
            get {
                return ResourceManager.GetString("ERROR_WAIT_NO_CHILDREN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system has awoken.
        /// </summary>
        internal static string ERROR_WAKE_SYSTEM {
            get {
                return ResourceManager.GetString("ERROR_WAKE_SYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Kernel Debugger Awakened} the system debugger was awakened by an interrupt..
        /// </summary>
        internal static string ERROR_WAKE_SYSTEM_DEBUGGER {
            get {
                return ResourceManager.GetString("ERROR_WAKE_SYSTEM_DEBUGGER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Page Locked} One of the pages to lock was already locked..
        /// </summary>
        internal static string ERROR_WAS_LOCKED {
            get {
                return ResourceManager.GetString("ERROR_WAS_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Page Unlocked} The page protection of a locked page was changed to &apos;No Access&apos; and the page was unlocked from memory and from the process..
        /// </summary>
        internal static string ERROR_WAS_UNLOCKED {
            get {
                return ResourceManager.GetString("ERROR_WAS_UNLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window is not a combo box..
        /// </summary>
        internal static string ERROR_WINDOW_NOT_COMBOBOX {
            get {
                return ResourceManager.GetString("ERROR_WINDOW_NOT_COMBOBOX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window is not a valid dialog window..
        /// </summary>
        internal static string ERROR_WINDOW_NOT_DIALOG {
            get {
                return ResourceManager.GetString("ERROR_WINDOW_NOT_DIALOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid window; it belongs to other thread..
        /// </summary>
        internal static string ERROR_WINDOW_OF_OTHER_THREAD {
            get {
                return ResourceManager.GetString("ERROR_WINDOW_OF_OTHER_THREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WINS encountered an error while processing the command..
        /// </summary>
        internal static string ERROR_WINS_INTERNAL {
            get {
                return ResourceManager.GetString("ERROR_WINS_INTERNAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data block or event notification has already been disabled..
        /// </summary>
        internal static string ERROR_WMI_ALREADY_DISABLED {
            get {
                return ResourceManager.GetString("ERROR_WMI_ALREADY_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data block or event notification has already been enabled..
        /// </summary>
        internal static string ERROR_WMI_ALREADY_ENABLED {
            get {
                return ResourceManager.GetString("ERROR_WMI_ALREADY_ENABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data provider failed to carry out the request..
        /// </summary>
        internal static string ERROR_WMI_DP_FAILED {
            get {
                return ResourceManager.GetString("ERROR_WMI_DP_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data provider could not be located..
        /// </summary>
        internal static string ERROR_WMI_DP_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_WMI_DP_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data block is no longer available..
        /// </summary>
        internal static string ERROR_WMI_GUID_DISCONNECTED {
            get {
                return ResourceManager.GetString("ERROR_WMI_GUID_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GUID passed was not recognized as valid by a WMI data provider..
        /// </summary>
        internal static string ERROR_WMI_GUID_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_WMI_GUID_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance name passed was not recognized as valid by a WMI data provider..
        /// </summary>
        internal static string ERROR_WMI_INSTANCE_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_WMI_INSTANCE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI MOF information is not valid..
        /// </summary>
        internal static string ERROR_WMI_INVALID_MOF {
            get {
                return ResourceManager.GetString("ERROR_WMI_INVALID_MOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI registration information is not valid..
        /// </summary>
        internal static string ERROR_WMI_INVALID_REGINFO {
            get {
                return ResourceManager.GetString("ERROR_WMI_INVALID_REGINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data item ID passed was not recognized as valid by a WMI data provider..
        /// </summary>
        internal static string ERROR_WMI_ITEMID_NOT_FOUND {
            get {
                return ResourceManager.GetString("ERROR_WMI_ITEMID_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data item or data block is read only..
        /// </summary>
        internal static string ERROR_WMI_READ_ONLY {
            get {
                return ResourceManager.GetString("ERROR_WMI_READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data service is not available..
        /// </summary>
        internal static string ERROR_WMI_SERVER_UNAVAILABLE {
            get {
                return ResourceManager.GetString("ERROR_WMI_SERVER_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data item or data block could not be changed..
        /// </summary>
        internal static string ERROR_WMI_SET_FAILURE {
            get {
                return ResourceManager.GetString("ERROR_WMI_SET_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI request could not be completed and should be retried..
        /// </summary>
        internal static string ERROR_WMI_TRY_AGAIN {
            get {
                return ResourceManager.GetString("ERROR_WMI_TRY_AGAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WMI data provider references an instance set that has not been registered..
        /// </summary>
        internal static string ERROR_WMI_UNRESOLVED_INSTANCE_REF {
            get {
                return ResourceManager.GetString("ERROR_WMI_UNRESOLVED_INSTANCE_REF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient quota to complete the requested service..
        /// </summary>
        internal static string ERROR_WORKING_SET_QUOTA {
            get {
                return ResourceManager.GetString("ERROR_WORKING_SET_QUOTA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WOW Assertion Error..
        /// </summary>
        internal static string ERROR_WOW_ASSERTION {
            get {
                return ResourceManager.GetString("ERROR_WOW_ASSERTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot write to the specified device..
        /// </summary>
        internal static string ERROR_WRITE_FAULT {
            get {
                return ResourceManager.GetString("ERROR_WRITE_FAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The media is write protected..
        /// </summary>
        internal static string ERROR_WRITE_PROTECT {
            get {
                return ResourceManager.GetString("ERROR_WRITE_PROTECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The wrong diskette is in the drive. Insert %2 (Volume Serial Number: %3) into drive %1..
        /// </summary>
        internal static string ERROR_WRONG_DISK {
            get {
                return ResourceManager.GetString("ERROR_WRONG_DISK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file was encrypted with a different encryption driver than is currently loaded..
        /// </summary>
        internal static string ERROR_WRONG_EFS {
            get {
                return ResourceManager.GetString("ERROR_WRONG_EFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update the password. The value provided as the current password is incorrect..
        /// </summary>
        internal static string ERROR_WRONG_PASSWORD {
            get {
                return ResourceManager.GetString("ERROR_WRONG_PASSWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target account name is incorrect..
        /// </summary>
        internal static string ERROR_WRONG_TARGET_NAME {
            get {
                return ResourceManager.GetString("ERROR_WRONG_TARGET_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred in the WX86 subsystem..
        /// </summary>
        internal static string ERROR_WX86_ERROR {
            get {
                return ResourceManager.GetString("ERROR_WX86_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A warning occurred in the WX86 subsystem..
        /// </summary>
        internal static string ERROR_WX86_WARNING {
            get {
                return ResourceManager.GetString("ERROR_WX86_WARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The character encoding in the XML declaration did not match the encoding used in the document..
        /// </summary>
        internal static string ERROR_XML_ENCODING_MISMATCH {
            get {
                return ResourceManager.GetString("ERROR_XML_ENCODING_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot satisfy the request because authenticated RPC is not available. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_AUTHENTICATION {
            get {
                return ResourceManager.GetString("FRS_ERR_AUTHENTICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot communicate with the file replication service on the domain controller. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_CHILD_TO_PARENT_COMM {
            get {
                return ResourceManager.GetString("FRS_ERR_CHILD_TO_PARENT_COMM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot satisfy the request because the user has insufficient privileges. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_INSUFFICIENT_PRIV {
            get {
                return ResourceManager.GetString("FRS_ERR_INSUFFICIENT_PRIV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service terminated the request. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_INTERNAL {
            get {
                return ResourceManager.GetString("FRS_ERR_INTERNAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service API terminated the request. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_INTERNAL_API {
            get {
                return ResourceManager.GetString("FRS_ERR_INTERNAL_API", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service API was called incorrectly..
        /// </summary>
        internal static string FRS_ERR_INVALID_API_SEQUENCE {
            get {
                return ResourceManager.GetString("FRS_ERR_INVALID_API_SEQUENCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service detected an invalid parameter..
        /// </summary>
        internal static string FRS_ERR_INVALID_SERVICE_PARAMETER {
            get {
                return ResourceManager.GetString("FRS_ERR_INVALID_SERVICE_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot satisfy the request because authenticated RPC is not available on the domain controller. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_PARENT_AUTHENTICATION {
            get {
                return ResourceManager.GetString("FRS_ERR_PARENT_AUTHENTICATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot satisfy the request because the user has insufficient privileges on the domain controller. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_PARENT_INSUFFICIENT_PRIV {
            get {
                return ResourceManager.GetString("FRS_ERR_PARENT_INSUFFICIENT_PRIV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service on the domain controller cannot communicate with the file replication service on this computer. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_PARENT_TO_CHILD_COMM {
            get {
                return ResourceManager.GetString("FRS_ERR_PARENT_TO_CHILD_COMM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot be contacted. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_SERVICE_COMM {
            get {
                return ResourceManager.GetString("FRS_ERR_SERVICE_COMM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot be started..
        /// </summary>
        internal static string FRS_ERR_STARTING_SERVICE {
            get {
                return ResourceManager.GetString("FRS_ERR_STARTING_SERVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot be stopped..
        /// </summary>
        internal static string FRS_ERR_STOPPING_SERVICE {
            get {
                return ResourceManager.GetString("FRS_ERR_STOPPING_SERVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot stop replicating the system volume because of an internal error. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_SYSVOL_DEMOTE {
            get {
                return ResourceManager.GetString("FRS_ERR_SYSVOL_DEMOTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot process the request. The system volume is busy with a previous request..
        /// </summary>
        internal static string FRS_ERR_SYSVOL_IS_BUSY {
            get {
                return ResourceManager.GetString("FRS_ERR_SYSVOL_IS_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot populate the system volume because of an internal error. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_SYSVOL_POPULATE {
            get {
                return ResourceManager.GetString("FRS_ERR_SYSVOL_POPULATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file replication service cannot populate the system volume because of an internal timeout. The event log may have more information..
        /// </summary>
        internal static string FRS_ERR_SYSVOL_POPULATE_TIMEOUT {
            get {
                return ResourceManager.GetString("FRS_ERR_SYSVOL_POPULATE_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user account has expired..
        /// </summary>
        internal static string NERR_AccountExpired {
            get {
                return ResourceManager.GetString("NERR_AccountExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account is locked out.
        /// </summary>
        internal static string NERR_AccountLockedOut {
            get {
                return ResourceManager.GetString("NERR_AccountLockedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user account is undefined..
        /// </summary>
        internal static string NERR_AccountUndefined {
            get {
                return ResourceManager.GetString("NERR_AccountUndefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user&apos;s session with this server has been deleted because the user&apos;s logon hours are no longer valid..
        /// </summary>
        internal static string NERR_AcctLimitExceeded {
            get {
                return ResourceManager.GetString("NERR_AcctLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A disk I/O failure occurred..
        /// </summary>
        internal static string NERR_ACFFileIOFail {
            get {
                return ResourceManager.GetString("NERR_ACFFileIOFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parent directory could not be located..
        /// </summary>
        internal static string NERR_ACFNoParent {
            get {
                return ResourceManager.GetString("NERR_ACFNoParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are too many names in the user accounts database..
        /// </summary>
        internal static string NERR_ACFNoRoom {
            get {
                return ResourceManager.GetString("NERR_ACFNoRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security database could not be found..
        /// </summary>
        internal static string NERR_ACFNotFound {
            get {
                return ResourceManager.GetString("NERR_ACFNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security database has not been started..
        /// </summary>
        internal static string NERR_ACFNotLoaded {
            get {
                return ResourceManager.GetString("NERR_ACFNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The limit of 64 entries per resource was exceeded..
        /// </summary>
        internal static string NERR_ACFTooManyLists {
            get {
                return ResourceManager.GetString("NERR_ACFTooManyLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active connections still exist..
        /// </summary>
        internal static string NERR_ActiveConns {
            get {
                return ResourceManager.GetString("NERR_ActiveConns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message alias has been added but is still forwarded..
        /// </summary>
        internal static string NERR_AddForwarded {
            get {
                return ResourceManager.GetString("NERR_AddForwarded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified client is already registered for the specified event..
        /// </summary>
        internal static string NERR_AlertExists {
            get {
                return ResourceManager.GetString("NERR_AlertExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message alias already exists locally..
        /// </summary>
        internal static string NERR_AlreadyExists {
            get {
                return ResourceManager.GetString("NERR_AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message alias has already been forwarded..
        /// </summary>
        internal static string NERR_AlreadyForwarded {
            get {
                return ResourceManager.GetString("NERR_AlreadyForwarded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This workstation is already logged on to the local-area network..
        /// </summary>
        internal static string NERR_AlreadyLoggedOn {
            get {
                return ResourceManager.GetString("NERR_AlreadyLoggedOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This asg_type is invalid..
        /// </summary>
        internal static string NERR_BadAsgType {
            get {
                return ResourceManager.GetString("NERR_BadAsgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This path component is invalid..
        /// </summary>
        internal static string NERR_BadComponent {
            get {
                return ResourceManager.GetString("NERR_BadComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service control dispatcher pipe read failed..
        /// </summary>
        internal static string NERR_BadControlRecv {
            get {
                return ResourceManager.GetString("NERR_BadControlRecv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination path is illegal..
        /// </summary>
        internal static string NERR_BadDest {
            get {
                return ResourceManager.GetString("NERR_BadDest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested device is invalid..
        /// </summary>
        internal static string NERR_BadDev {
            get {
                return ResourceManager.GetString("NERR_BadDev", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This list of devices is invalid..
        /// </summary>
        internal static string NERR_BadDevString {
            get {
                return ResourceManager.GetString("NERR_BadDevString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program below called an unsupported MS-DOS function:.
        /// </summary>
        internal static string NERR_BadDosFunction {
            get {
                return ResourceManager.GetString("NERR_BadDosFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program below returned an MS-DOS error code:.
        /// </summary>
        internal static string NERR_BadDosRetCode {
            get {
                return ResourceManager.GetString("NERR_BadDosRetCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event name is invalid..
        /// </summary>
        internal static string NERR_BadEventName {
            get {
                return ResourceManager.GetString("NERR_BadEventName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file below is corrupt..
        /// </summary>
        internal static string NERR_BadFileCheckSum {
            get {
                return ResourceManager.GetString("NERR_BadFileCheckSum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password parameter is invalid..
        /// </summary>
        internal static string NERR_BadPassword {
            get {
                return ResourceManager.GetString("NERR_BadPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This share name or password is invalid..
        /// </summary>
        internal static string NERR_BadPasswordCore {
            get {
                return ResourceManager.GetString("NERR_BadPasswordCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device name list is invalid..
        /// </summary>
        internal static string NERR_BadQueueDevString {
            get {
                return ResourceManager.GetString("NERR_BadQueueDevString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The queue priority is invalid..
        /// </summary>
        internal static string NERR_BadQueuePriority {
            get {
                return ResourceManager.GetString("NERR_BadQueuePriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message was sent but not received..
        /// </summary>
        internal static string NERR_BadReceive {
            get {
                return ResourceManager.GetString("NERR_BadReceive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The alert recipient is invalid..
        /// </summary>
        internal static string NERR_BadRecipient {
            get {
                return ResourceManager.GetString("NERR_BadRecipient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service name is invalid..
        /// </summary>
        internal static string NERR_BadServiceName {
            get {
                return ResourceManager.GetString("NERR_BadServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file contains an invalid service program name..
        /// </summary>
        internal static string NERR_BadServiceProgName {
            get {
                return ResourceManager.GetString("NERR_BadServiceProgName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source path is illegal..
        /// </summary>
        internal static string NERR_BadSource {
            get {
                return ResourceManager.GetString("NERR_BadSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is not configured for transactions..
        /// </summary>
        internal static string NERR_BadTransactConfig {
            get {
                return ResourceManager.GetString("NERR_BadTransactConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user accounts database is not configured correctly..
        /// </summary>
        internal static string NERR_BadUasConfig {
            get {
                return ResourceManager.GetString("NERR_BadUasConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified username is invalid..
        /// </summary>
        internal static string NERR_BadUsername {
            get {
                return ResourceManager.GetString("NERR_BadUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The browser service was configured with MaintainServerList=No..
        /// </summary>
        internal static string NERR_BrowserConfiguredToNotRun {
            get {
                return ResourceManager.GetString("NERR_BrowserConfiguredToNotRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested information is not available..
        /// </summary>
        internal static string NERR_BrowserNotStarted {
            get {
                return ResourceManager.GetString("NERR_BrowserNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The information in the list of servers may be incorrect..
        /// </summary>
        internal static string NERR_BrowserTableIncomplete {
            get {
                return ResourceManager.GetString("NERR_BrowserTableIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API return buffer is too small..
        /// </summary>
        internal static string NERR_BufTooSmall {
            get {
                return ResourceManager.GetString("NERR_BufTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to the Remoteboot server....
        /// </summary>
        internal static string NERR_CallingRplSrvr {
            get {
                return ResourceManager.GetString("NERR_CallingRplSrvr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add to the security database session cache segment..
        /// </summary>
        internal static string NERR_CanNotGrowSegment {
            get {
                return ResourceManager.GetString("NERR_CanNotGrowSegment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add to the user accounts database..
        /// </summary>
        internal static string NERR_CanNotGrowUASFile {
            get {
                return ResourceManager.GetString("NERR_CanNotGrowUASFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot connect to the Remoteboot server..
        /// </summary>
        internal static string NERR_CantConnectRplSrvr {
            get {
                return ResourceManager.GetString("NERR_CantConnectRplSrvr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open image file on the Remoteboot server..
        /// </summary>
        internal static string NERR_CantOpenImageFile {
            get {
                return ResourceManager.GetString("NERR_CantOpenImageFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine the type of input..
        /// </summary>
        internal static string NERR_CantType {
            get {
                return ResourceManager.GetString("NERR_CantType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified component could not be found in the configuration information..
        /// </summary>
        internal static string NERR_CfgCompNotFound {
            get {
                return ResourceManager.GetString("NERR_CfgCompNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified parameter could not be found in the configuration information..
        /// </summary>
        internal static string NERR_CfgParamNotFound {
            get {
                return ResourceManager.GetString("NERR_CfgParamNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A session does not exist with that computer name..
        /// </summary>
        internal static string NERR_ClientNameNotFound {
            get {
                return ResourceManager.GetString("NERR_ClientNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device is already in use as a communication device..
        /// </summary>
        internal static string NERR_CommDevInUse {
            get {
                return ResourceManager.GetString("NERR_CommDevInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified computer account could not be found. Contact an administrator to verify the account is in the domain. If the account has been deleted unjoin, reboot, and rejoin the domain..
        /// </summary>
        internal static string NERR_ComputerAccountNotFound {
            get {
                return ResourceManager.GetString("NERR_ComputerAccountNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates are necessary to this replicant network/local security database..
        /// </summary>
        internal static string NERR_DatabaseUpToDate {
            get {
                return ResourceManager.GetString("NERR_DatabaseUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data type is not supported by the print processor..
        /// </summary>
        internal static string NERR_DataTypeInvalid {
            get {
                return ResourceManager.GetString("NERR_DataTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find domain controller for this domain..
        /// </summary>
        internal static string NERR_DCNotFound {
            get {
                return ResourceManager.GetString("NERR_DCNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The destination domain controller does not support creating machine accounts in OUs..
        /// </summary>
        internal static string NERR_DefaultJoinRequired {
            get {
                return ResourceManager.GetString("NERR_DefaultJoinRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The computer name could not be deleted..
        /// </summary>
        internal static string NERR_DelComputerName {
            get {
                return ResourceManager.GetString("NERR_DelComputerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message alias will be deleted later..
        /// </summary>
        internal static string NERR_DeleteLater {
            get {
                return ResourceManager.GetString("NERR_DeleteLater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer destination already exists..
        /// </summary>
        internal static string NERR_DestExists {
            get {
                return ResourceManager.GetString("NERR_DestExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This printer destination is idle and cannot accept control operations..
        /// </summary>
        internal static string NERR_DestIdle {
            get {
                return ResourceManager.GetString("NERR_DestIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This printer destination request contains an invalid control function..
        /// </summary>
        internal static string NERR_DestInvalidOp {
            get {
                return ResourceManager.GetString("NERR_DestInvalidOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation cannot be performed on the print destination in its current state..
        /// </summary>
        internal static string NERR_DestInvalidState {
            get {
                return ResourceManager.GetString("NERR_DestInvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more printer destinations can be added..
        /// </summary>
        internal static string NERR_DestNoRoom {
            get {
                return ResourceManager.GetString("NERR_DestNoRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer destination cannot be found..
        /// </summary>
        internal static string NERR_DestNotFound {
            get {
                return ResourceManager.GetString("NERR_DestNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device is currently being shared..
        /// </summary>
        internal static string NERR_DeviceIsShared {
            get {
                return ResourceManager.GetString("NERR_DeviceIsShared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device is not shared..
        /// </summary>
        internal static string NERR_DeviceNotShared {
            get {
                return ResourceManager.GetString("NERR_DeviceNotShared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device cannot be shared as both a spooled and a non-spooled resource..
        /// </summary>
        internal static string NERR_DeviceShareConflict {
            get {
                return ResourceManager.GetString("NERR_DeviceShareConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is in use by an active process and cannot be disconnected..
        /// </summary>
        internal static string NERR_DevInUse {
            get {
                return ResourceManager.GetString("NERR_DevInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is invalid for this device..
        /// </summary>
        internal static string NERR_DevInvalidOpCode {
            get {
                return ResourceManager.GetString("NERR_DevInvalidOpCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device cannot be shared..
        /// </summary>
        internal static string NERR_DevNotFound {
            get {
                return ResourceManager.GetString("NERR_DevNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device was not open..
        /// </summary>
        internal static string NERR_DevNotOpen {
            get {
                return ResourceManager.GetString("NERR_DevNotOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is not connected..
        /// </summary>
        internal static string NERR_DevNotRedirected {
            get {
                return ResourceManager.GetString("NERR_DevNotRedirected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server share specified is already shared in the DFS.
        /// </summary>
        internal static string NERR_DfsAlreadyShared {
            get {
                return ResourceManager.GetString("NERR_DfsAlreadyShared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified rename target path is invalid.
        /// </summary>
        internal static string NERR_DfsBadRenamePath {
            get {
                return ResourceManager.GetString("NERR_DfsBadRenamePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create a link.
        /// </summary>
        internal static string NERR_DfsCantCreateJunctionPoint {
            get {
                return ResourceManager.GetString("NERR_DfsCantCreateJunctionPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DFS root cannot be deleted - Uninstall DFS if required.
        /// </summary>
        internal static string NERR_DfsCantRemoveDfsRoot {
            get {
                return ResourceManager.GetString("NERR_DfsCantRemoveDfsRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t remove the last server-share supporting this root or link.
        /// </summary>
        internal static string NERR_DfsCantRemoveLastServerShare {
            get {
                return ResourceManager.GetString("NERR_DfsCantRemoveLastServerShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A child or parent directory of the share is already in a DFS.
        /// </summary>
        internal static string NERR_DfsChildOrParentInDfs {
            get {
                return ResourceManager.GetString("NERR_DfsChildOrParentInDfs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cycle in the DFS name was detected.
        /// </summary>
        internal static string NERR_DfsCyclicalName {
            get {
                return ResourceManager.GetString("NERR_DfsCyclicalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DFS data being reconciled is identical.
        /// </summary>
        internal static string NERR_DfsDataIsIdentical {
            get {
                return ResourceManager.GetString("NERR_DfsDataIsIdentical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This link is already supported by the specified server-share.
        /// </summary>
        internal static string NERR_DfsDuplicateService {
            get {
                return ResourceManager.GetString("NERR_DfsDuplicateService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The internal state of the DFS Service has become inconsistent.
        /// </summary>
        internal static string NERR_DfsInconsistent {
            get {
                return ResourceManager.GetString("NERR_DfsInconsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The internal database maintained by the DFS service is corrupt.
        /// </summary>
        internal static string NERR_DfsInternalCorruption {
            get {
                return ResourceManager.GetString("NERR_DfsInternalCorruption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DFS internal error.
        /// </summary>
        internal static string NERR_DfsInternalError {
            get {
                return ResourceManager.GetString("NERR_DfsInternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is not valid on this portion of the namespace.
        /// </summary>
        internal static string NERR_DfsLeafVolume {
            get {
                return ResourceManager.GetString("NERR_DfsLeafVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified server is not a server for this link.
        /// </summary>
        internal static string NERR_DfsNoSuchServer {
            get {
                return ResourceManager.GetString("NERR_DfsNoSuchServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The indicated server share does not support the indicated DFS namespace.
        /// </summary>
        internal static string NERR_DfsNoSuchShare {
            get {
                return ResourceManager.GetString("NERR_DfsNoSuchShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no DFS name whose entry path matches the input Entry Path.
        /// </summary>
        internal static string NERR_DfsNoSuchVolume {
            get {
                return ResourceManager.GetString("NERR_DfsNoSuchVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is not valid on this portion of the namespace.
        /// </summary>
        internal static string NERR_DfsNotALeafVolume {
            get {
                return ResourceManager.GetString("NERR_DfsNotALeafVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is not supported on a server-based DFS.
        /// </summary>
        internal static string NERR_DfsNotSupportedInServerDfs {
            get {
                return ResourceManager.GetString("NERR_DfsNotSupportedInServerDfs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is not DFS Aware.
        /// </summary>
        internal static string NERR_DfsServerNotDfsAware {
            get {
                return ResourceManager.GetString("NERR_DfsServerNotDfsAware", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DFS Service has been installed on the specified server.
        /// </summary>
        internal static string NERR_DfsServerUpgraded {
            get {
                return ResourceManager.GetString("NERR_DfsServerUpgraded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A root or link with the given name already exists.
        /// </summary>
        internal static string NERR_DfsVolumeAlreadyExists {
            get {
                return ResourceManager.GetString("NERR_DfsVolumeAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the records in the internal DFS database is corrupt.
        /// </summary>
        internal static string NERR_DfsVolumeDataCorrupt {
            get {
                return ResourceManager.GetString("NERR_DfsVolumeDataCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is ambiguous because the link has multiple servers.
        /// </summary>
        internal static string NERR_DfsVolumeHasMultipleServers {
            get {
                return ResourceManager.GetString("NERR_DfsVolumeHasMultipleServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is not supported for an Inter-DFS link.
        /// </summary>
        internal static string NERR_DfsVolumeIsInterDfs {
            get {
                return ResourceManager.GetString("NERR_DfsVolumeIsInterDfs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified DFS link is offline.
        /// </summary>
        internal static string NERR_DfsVolumeIsOffline {
            get {
                return ResourceManager.GetString("NERR_DfsVolumeIsOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source and destination paths are on different servers..
        /// </summary>
        internal static string NERR_DifferentServers {
            get {
                return ResourceManager.GetString("NERR_DifferentServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device driver does not exist..
        /// </summary>
        internal static string NERR_DriverNotFound {
            get {
                return ResourceManager.GetString("NERR_DriverNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A duplicate message alias exists on the network..
        /// </summary>
        internal static string NERR_DuplicateName {
            get {
                return ResourceManager.GetString("NERR_DuplicateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name has already been shared..
        /// </summary>
        internal static string NERR_DuplicateShare {
            get {
                return ResourceManager.GetString("NERR_DuplicateShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The computer name already exists on the network. Change it and restart the computer..
        /// </summary>
        internal static string NERR_DupNameReboot {
            get {
                return ResourceManager.GetString("NERR_DupNameReboot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when communicating with a Run server..
        /// </summary>
        internal static string NERR_ErrCommRunSrv {
            get {
                return ResourceManager.GetString("NERR_ErrCommRunSrv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when starting a background process..
        /// </summary>
        internal static string NERR_ErrorExecingGhost {
            get {
                return ResourceManager.GetString("NERR_ErrorExecingGhost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A failure occurred when executing a remote administration command..
        /// </summary>
        internal static string NERR_ExecFailure {
            get {
                return ResourceManager.GetString("NERR_ExecFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is not an open file with that identification number..
        /// </summary>
        internal static string NERR_FileIdNotFound {
            get {
                return ResourceManager.GetString("NERR_FileIdNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group already exists..
        /// </summary>
        internal static string NERR_GroupExists {
            get {
                return ResourceManager.GetString("NERR_GroupExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group name could not be found..
        /// </summary>
        internal static string NERR_GroupNotFound {
            get {
                return ResourceManager.GetString("NERR_GroupNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred in the domain message processor..
        /// </summary>
        internal static string NERR_GrpMsgProcessor {
            get {
                return ResourceManager.GetString("NERR_GrpMsgProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image parameter substitution failed..
        /// </summary>
        internal static string NERR_ImageParamErr {
            get {
                return ResourceManager.GetString("NERR_ImageParamErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message alias was not successfully deleted from all networks..
        /// </summary>
        internal static string NERR_IncompleteDel {
            get {
                return ResourceManager.GetString("NERR_IncompleteDel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal Windows error occurred..
        /// </summary>
        internal static string NERR_InternalError {
            get {
                return ResourceManager.GetString("NERR_InternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This device is already in use by the spooler..
        /// </summary>
        internal static string NERR_InUseBySpooler {
            get {
                return ResourceManager.GetString("NERR_InUseBySpooler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested API is not supported on the remote server..
        /// </summary>
        internal static string NERR_InvalidAPI {
            get {
                return ResourceManager.GetString("NERR_InvalidAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This computer name is invalid..
        /// </summary>
        internal static string NERR_InvalidComputer {
            get {
                return ResourceManager.GetString("NERR_InvalidComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security database is corrupted..
        /// </summary>
        internal static string NERR_InvalidDatabase {
            get {
                return ResourceManager.GetString("NERR_InvalidDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an invalid device name..
        /// </summary>
        internal static string NERR_InvalidDevice {
            get {
                return ResourceManager.GetString("NERR_InvalidDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The LAN adapter number is invalid..
        /// </summary>
        internal static string NERR_InvalidLana {
            get {
                return ResourceManager.GetString("NERR_InvalidLana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user is not allowed to log on at this time..
        /// </summary>
        internal static string NERR_InvalidLogonHours {
            get {
                return ResourceManager.GetString("NERR_InvalidLogonHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log file does not contain the requested record number..
        /// </summary>
        internal static string NERR_InvalidLogSeek {
            get {
                return ResourceManager.GetString("NERR_InvalidLogSeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Peer service supports only two simultaneous users..
        /// </summary>
        internal static string NERR_InvalidMaxUsers {
            get {
                return ResourceManager.GetString("NERR_InvalidMaxUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not permitted when the Netlogon service is running..
        /// </summary>
        internal static string NERR_InvalidUASOp {
            get {
                return ResourceManager.GetString("NERR_InvalidUASOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified workgroup name is invalid..
        /// </summary>
        internal static string NERR_InvalidWorkgroupName {
            get {
                return ResourceManager.GetString("NERR_InvalidWorkgroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user is not allowed to log on from this workstation..
        /// </summary>
        internal static string NERR_InvalidWorkstation {
            get {
                return ResourceManager.GetString("NERR_InvalidWorkstation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The share must be removed from the Distributed File System before it can be deleted..
        /// </summary>
        internal static string NERR_IsDfsShare {
            get {
                return ResourceManager.GetString("NERR_IsDfsShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The queue is empty..
        /// </summary>
        internal static string NERR_ItemNotFound {
            get {
                return ResourceManager.GetString("NERR_ItemNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation cannot be performed on the print job in its current state..
        /// </summary>
        internal static string NERR_JobInvalidState {
            get {
                return ResourceManager.GetString("NERR_JobInvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more print jobs can be added..
        /// </summary>
        internal static string NERR_JobNoRoom {
            get {
                return ResourceManager.GetString("NERR_JobNoRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The print job does not exist..
        /// </summary>
        internal static string NERR_JobNotFound {
            get {
                return ResourceManager.GetString("NERR_JobNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when opening or reading the configuration file..
        /// </summary>
        internal static string NERR_LanmanIniError {
            get {
                return ResourceManager.GetString("NERR_LanmanIniError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not allowed on the last administrative account..
        /// </summary>
        internal static string NERR_LastAdmin {
            get {
                return ResourceManager.GetString("NERR_LastAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A line in the configuration file is too long..
        /// </summary>
        internal static string NERR_LineTooLong {
            get {
                return ResourceManager.GetString("NERR_LineTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The drive letter is in use locally..
        /// </summary>
        internal static string NERR_LocalDrive {
            get {
                return ResourceManager.GetString("NERR_LocalDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Messages cannot be forwarded back to the same workstation..
        /// </summary>
        internal static string NERR_LocalForward {
            get {
                return ResourceManager.GetString("NERR_LocalForward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This log file has changed between reads..
        /// </summary>
        internal static string NERR_LogFileChanged {
            get {
                return ResourceManager.GetString("NERR_LogFileChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log file %1 is corrupt..
        /// </summary>
        internal static string NERR_LogFileCorrupt {
            get {
                return ResourceManager.GetString("NERR_LogFileCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a logon domain for this computer..
        /// </summary>
        internal static string NERR_LogonDomainExists {
            get {
                return ResourceManager.GetString("NERR_LogonDomainExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is configured without a valid user path..
        /// </summary>
        internal static string NERR_LogonNoUserPath {
            get {
                return ResourceManager.GetString("NERR_LogonNoUserPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while loading or running the logon script..
        /// </summary>
        internal static string NERR_LogonScriptError {
            get {
                return ResourceManager.GetString("NERR_LogonScriptError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A centralized logon-server conflict occurred..
        /// </summary>
        internal static string NERR_LogonServerConflict {
            get {
                return ResourceManager.GetString("NERR_LogonServerConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logon server could not be found..
        /// </summary>
        internal static string NERR_LogonServerNotFound {
            get {
                return ResourceManager.GetString("NERR_LogonServerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network logons are paused..
        /// </summary>
        internal static string NERR_LogonsPaused {
            get {
                return ResourceManager.GetString("NERR_LogonsPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not set logon information for this user..
        /// </summary>
        internal static string NERR_LogonTrackingError {
            get {
                return ResourceManager.GetString("NERR_LogonTrackingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log file %1 is full..
        /// </summary>
        internal static string NERR_LogOverflow {
            get {
                return ResourceManager.GetString("NERR_LogOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string and prefix specified are too long..
        /// </summary>
        internal static string NERR_MaxLenExceeded {
            get {
                return ResourceManager.GetString("NERR_MaxLenExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Messenger service is already started..
        /// </summary>
        internal static string NERR_MsgAlreadyStarted {
            get {
                return ResourceManager.GetString("NERR_MsgAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Messenger service failed to start..
        /// </summary>
        internal static string NERR_MsgInitFailed {
            get {
                return ResourceManager.GetString("NERR_MsgInitFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Messenger service has not been started..
        /// </summary>
        internal static string NERR_MsgNotStarted {
            get {
                return ResourceManager.GetString("NERR_MsgNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not supported on computers with multiple networks..
        /// </summary>
        internal static string NERR_MultipleNets {
            get {
                return ResourceManager.GetString("NERR_MultipleNets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message alias is currently in use. Try again later..
        /// </summary>
        internal static string NERR_NameInUse {
            get {
                return ResourceManager.GetString("NERR_NameInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Messages for this alias are not currently being forwarded..
        /// </summary>
        internal static string NERR_NameNotForwarded {
            get {
                return ResourceManager.GetString("NERR_NameNotForwarded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message alias could not be found on the network..
        /// </summary>
        internal static string NERR_NameNotFound {
            get {
                return ResourceManager.GetString("NERR_NameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified computer name is incompatible with the default language used on the domain controller..
        /// </summary>
        internal static string NERR_NameUsesIncompatibleCodePage {
            get {
                return ResourceManager.GetString("NERR_NameUsesIncompatibleCodePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Netlogon service has not been started..
        /// </summary>
        internal static string NERR_NetlogonNotStarted {
            get {
                return ResourceManager.GetString("NERR_NetlogonNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This shared resource does not exist..
        /// </summary>
        internal static string NERR_NetNameNotFound {
            get {
                return ResourceManager.GetString("NERR_NetNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The workstation driver is not installed..
        /// </summary>
        internal static string NERR_NetNotStarted {
            get {
                return ResourceManager.GetString("NERR_NetNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A general network error occurred..
        /// </summary>
        internal static string NERR_NetworkError {
            get {
                return ResourceManager.GetString("NERR_NetworkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no alternate servers registered on this server..
        /// </summary>
        internal static string NERR_NoAlternateServers {
            get {
                return ResourceManager.GetString("NERR_NoAlternateServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no shared communication devices..
        /// </summary>
        internal static string NERR_NoCommDevs {
            get {
                return ResourceManager.GetString("NERR_NoCommDevs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The computer name could not be added as a message alias. The name may already exist on the network..
        /// </summary>
        internal static string NERR_NoComputerName {
            get {
                return ResourceManager.GetString("NERR_NoComputerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The forwarded message alias could not be found on the network..
        /// </summary>
        internal static string NERR_NoForwardName {
            get {
                return ResourceManager.GetString("NERR_NoForwardName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image was not generated from an MS-DOS diskette formatted with /S..
        /// </summary>
        internal static string NERR_NonDosFloppyUsed {
            get {
                return ResourceManager.GetString("NERR_NonDosFloppyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A network resource shortage occurred ..
        /// </summary>
        internal static string NERR_NoNetworkResource {
            get {
                return ResourceManager.GetString("NERR_NoNetworkResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logon server could not validate the logon..
        /// </summary>
        internal static string NERR_NonValidatedLogon {
            get {
                return ResourceManager.GetString("NERR_NonValidatedLogon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is currently out of the requested resource..
        /// </summary>
        internal static string NERR_NoRoom {
            get {
                return ResourceManager.GetString("NERR_NoRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No loader is specified in the boot-block definition file..
        /// </summary>
        internal static string NERR_NoRplBootSystem {
            get {
                return ResourceManager.GetString("NERR_NoRplBootSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid or nonexistent alert name was raised..
        /// </summary>
        internal static string NERR_NoSuchAlert {
            get {
                return ResourceManager.GetString("NERR_NoSuchAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection identification does not specify a valid connection..
        /// </summary>
        internal static string NERR_NoSuchConnection {
            get {
                return ResourceManager.GetString("NERR_NoSuchConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server identification does not specify a valid server..
        /// </summary>
        internal static string NERR_NoSuchServer {
            get {
                return ResourceManager.GetString("NERR_NoSuchServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The session identification does not specify a valid session..
        /// </summary>
        internal static string NERR_NoSuchSession {
            get {
                return ResourceManager.GetString("NERR_NoSuchSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user is not cached in user accounts database session cache..
        /// </summary>
        internal static string NERR_NotInCache {
            get {
                return ResourceManager.GetString("NERR_NotInCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service control dispatcher could not find the service name in the dispatch table..
        /// </summary>
        internal static string NERR_NotInDispatchTbl {
            get {
                return ResourceManager.GetString("NERR_NotInDispatchTbl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The computer is not active in this domain..
        /// </summary>
        internal static string NERR_NotLocalDomain {
            get {
                return ResourceManager.GetString("NERR_NotLocalDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name is not on the local computer..
        /// </summary>
        internal static string NERR_NotLocalName {
            get {
                return ResourceManager.GetString("NERR_NotLocalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The workstation is not logged on to the local-area network..
        /// </summary>
        internal static string NERR_NotLoggedOn {
            get {
                return ResourceManager.GetString("NERR_NotLoggedOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is only allowed on the primary domain controller of the domain..
        /// </summary>
        internal static string NERR_NotPrimary {
            get {
                return ResourceManager.GetString("NERR_NotPrimary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This network connection has files open or requests pending..
        /// </summary>
        internal static string NERR_OpenFiles {
            get {
                return ResourceManager.GetString("NERR_OpenFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password of this user cannot change..
        /// </summary>
        internal static string NERR_PasswordCantChange {
            get {
                return ResourceManager.GetString("NERR_PasswordCantChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password of this user has expired..
        /// </summary>
        internal static string NERR_PasswordExpired {
            get {
                return ResourceManager.GetString("NERR_PasswordExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password doesn&apos;t meet the requirements of the filter dll&apos;s.
        /// </summary>
        internal static string NERR_PasswordFilterError {
            get {
                return ResourceManager.GetString("NERR_PasswordFilterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This password cannot be used now..
        /// </summary>
        internal static string NERR_PasswordHistConflict {
            get {
                return ResourceManager.GetString("NERR_PasswordHistConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A password mismatch has been detected..
        /// </summary>
        internal static string NERR_PasswordMismatch {
            get {
                return ResourceManager.GetString("NERR_PasswordMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password must change at next logon.
        /// </summary>
        internal static string NERR_PasswordMustChange {
            get {
                return ResourceManager.GetString("NERR_PasswordMustChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password doesn&apos;t meet the complexity policy.
        /// </summary>
        internal static string NERR_PasswordNotComplexEnough {
            get {
                return ResourceManager.GetString("NERR_PasswordNotComplexEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password is too long.
        /// </summary>
        internal static string NERR_PasswordTooLong {
            get {
                return ResourceManager.GetString("NERR_PasswordTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password of this user is too recent to change..
        /// </summary>
        internal static string NERR_PasswordTooRecent {
            get {
                return ResourceManager.GetString("NERR_PasswordTooRecent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password does not meet the password policy requirements. Check the minimum password length, password complexity and password history requirements..
        /// </summary>
        internal static string NERR_PasswordTooShort {
            get {
                return ResourceManager.GetString("NERR_PasswordTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message was sent, but the recipient has paused the Messenger service..
        /// </summary>
        internal static string NERR_PausedRemote {
            get {
                return ResourceManager.GetString("NERR_PausedRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of Windows cannot be joined to a domain..
        /// </summary>
        internal static string NERR_PersonalSku {
            get {
                return ResourceManager.GetString("NERR_PersonalSku", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The print processor is not responding..
        /// </summary>
        internal static string NERR_ProcNoRespond {
            get {
                return ResourceManager.GetString("NERR_ProcNoRespond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The print processor is not installed..
        /// </summary>
        internal static string NERR_ProcNotFound {
            get {
                return ResourceManager.GetString("NERR_ProcNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system cannot delete current connections to network resources..
        /// </summary>
        internal static string NERR_ProfileCleanup {
            get {
                return ResourceManager.GetString("NERR_ProfileCleanup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile files cannot exceed 64K..
        /// </summary>
        internal static string NERR_ProfileFileTooBig {
            get {
                return ResourceManager.GetString("NERR_ProfileFileTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while loading the profile file..
        /// </summary>
        internal static string NERR_ProfileLoadErr {
            get {
                return ResourceManager.GetString("NERR_ProfileLoadErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The start offset is out of range..
        /// </summary>
        internal static string NERR_ProfileOffset {
            get {
                return ResourceManager.GetString("NERR_ProfileOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors occurred while saving the profile file. The profile was partially saved..
        /// </summary>
        internal static string NERR_ProfileSaveErr {
            get {
                return ResourceManager.GetString("NERR_ProfileSaveErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system was unable to parse the command line in this file..
        /// </summary>
        internal static string NERR_ProfileUnknownCmd {
            get {
                return ResourceManager.GetString("NERR_ProfileUnknownCmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program below needs more memory:.
        /// </summary>
        internal static string NERR_ProgNeedsExtraMem {
            get {
                return ResourceManager.GetString("NERR_ProgNeedsExtraMem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer queue already exists..
        /// </summary>
        internal static string NERR_QExists {
            get {
                return ResourceManager.GetString("NERR_QExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation cannot be performed on the printer queue in its current state..
        /// </summary>
        internal static string NERR_QinvalidState {
            get {
                return ResourceManager.GetString("NERR_QinvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more printers can be added..
        /// </summary>
        internal static string NERR_QNoRoom {
            get {
                return ResourceManager.GetString("NERR_QNoRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printer does not exist..
        /// </summary>
        internal static string NERR_QNotFound {
            get {
                return ResourceManager.GetString("NERR_QNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The queue you specified does not exist..
        /// </summary>
        internal static string NERR_QueueNotFound {
            get {
                return ResourceManager.GetString("NERR_QueueNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is invalid on a redirected resource..
        /// </summary>
        internal static string NERR_RedirectedPath {
            get {
                return ResourceManager.GetString("NERR_RedirectedPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The workstation failed to boot..
        /// </summary>
        internal static string NERR_RemoteBootFailed {
            get {
                return ResourceManager.GetString("NERR_RemoteBootFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A remote API error occurred..
        /// </summary>
        internal static string NERR_RemoteErr {
            get {
                return ResourceManager.GetString("NERR_RemoteErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message alias table on the remote station is full..
        /// </summary>
        internal static string NERR_RemoteFull {
            get {
                return ResourceManager.GetString("NERR_RemoteFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not supported on workstations..
        /// </summary>
        internal static string NERR_RemoteOnly {
            get {
                return ResourceManager.GetString("NERR_RemoteOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource permission list already exists..
        /// </summary>
        internal static string NERR_ResourceExists {
            get {
                return ResourceManager.GetString("NERR_ResourceExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource name could not be found..
        /// </summary>
        internal static string NERR_ResourceNotFound {
            get {
                return ResourceManager.GetString("NERR_ResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A second connection to a Remoteboot resource is not allowed..
        /// </summary>
        internal static string NERR_RPL_CONNECTED {
            get {
                return ResourceManager.GetString("NERR_RPL_CONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adapter id record information has been corrupted..
        /// </summary>
        internal static string NERR_RplAdapterInfoCorrupted {
            get {
                return ResourceManager.GetString("NERR_RplAdapterInfoCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chosen network adapter id is in use by some other workstation..
        /// </summary>
        internal static string NERR_RplAdapterNameUnavailable {
            get {
                return ResourceManager.GetString("NERR_RplAdapterNameUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adapter record was not found..
        /// </summary>
        internal static string NERR_RplAdapterNotFound {
            get {
                return ResourceManager.GetString("NERR_RplAdapterNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service failed to backup Remoteboot database..
        /// </summary>
        internal static string NERR_RplBackupDatabase {
            get {
                return ResourceManager.GetString("NERR_RplBackupDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service failed to start because its database is absent or corrupt..
        /// </summary>
        internal static string NERR_RplBadDatabase {
            get {
                return ResourceManager.GetString("NERR_RplBadDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service failed to start due to bad startup information in the registry..
        /// </summary>
        internal static string NERR_RplBadRegistry {
            get {
                return ResourceManager.GetString("NERR_RplBadRegistry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boot block record information has been corrupted..
        /// </summary>
        internal static string NERR_RplBootInfoCorrupted {
            get {
                return ResourceManager.GetString("NERR_RplBootInfoCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are workstations, profiles or configurations using this boot block..
        /// </summary>
        internal static string NERR_RplBootInUse {
            get {
                return ResourceManager.GetString("NERR_RplBootInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (boot name, vendor id) is in use by some other boot block record..
        /// </summary>
        internal static string NERR_RplBootNameUnavailable {
            get {
                return ResourceManager.GetString("NERR_RplBootNameUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boot block record was not found..
        /// </summary>
        internal static string NERR_RplBootNotFound {
            get {
                return ResourceManager.GetString("NERR_RplBootNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote boot will be restarted later..
        /// </summary>
        internal static string NERR_RplBootRestart {
            get {
                return ResourceManager.GetString("NERR_RplBootRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote boot service was stopped; check the error log for the cause of the problem..
        /// </summary>
        internal static string NERR_RplBootServiceTerm {
            get {
                return ResourceManager.GetString("NERR_RplBootServiceTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote boot startup failed; check the error log for the cause of the problem..
        /// </summary>
        internal static string NERR_RplBootStartFailed {
            get {
                return ResourceManager.GetString("NERR_RplBootStartFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot enumerate service records..
        /// </summary>
        internal static string NERR_RplCannotEnum {
            get {
                return ResourceManager.GetString("NERR_RplCannotEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration record information has been corrupted..
        /// </summary>
        internal static string NERR_RplConfigInfoCorrupted {
            get {
                return ResourceManager.GetString("NERR_RplConfigInfoCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration name is in use by some other configuration..
        /// </summary>
        internal static string NERR_RplConfigNameUnavailable {
            get {
                return ResourceManager.GetString("NERR_RplConfigNameUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are profiles using this configuration..
        /// </summary>
        internal static string NERR_RplConfigNotEmpty {
            get {
                return ResourceManager.GetString("NERR_RplConfigNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration record was not found..
        /// </summary>
        internal static string NERR_RplConfigNotFound {
            get {
                return ResourceManager.GetString("NERR_RplConfigNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chosen profile is incompatible with this workstation..
        /// </summary>
        internal static string NERR_RplIncompatibleProfile {
            get {
                return ResourceManager.GetString("NERR_RplIncompatibleProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal service error has occurred..
        /// </summary>
        internal static string NERR_RplInternal {
            get {
                return ResourceManager.GetString("NERR_RplInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A disk I/O error occurred..
        /// </summary>
        internal static string NERR_RplLoadrDiskErr {
            get {
                return ResourceManager.GetString("NERR_RplLoadrDiskErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NetBIOS returned an error: The NCB and SMB are dumped above..
        /// </summary>
        internal static string NERR_RplLoadrNetBiosErr {
            get {
                return ResourceManager.GetString("NERR_RplLoadrNetBiosErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPLUSER local group could not be found..
        /// </summary>
        internal static string NERR_RplNeedsRPLUSERAcct {
            get {
                return ResourceManager.GetString("NERR_RplNeedsRPLUSERAcct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service failed to start since none of the network adapters started with this service..
        /// </summary>
        internal static string NERR_RplNoAdaptersStarted {
            get {
                return ResourceManager.GetString("NERR_RplNoAdaptersStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service failed to start because RPLUSER group is absent..
        /// </summary>
        internal static string NERR_RplNotRplServer {
            get {
                return ResourceManager.GetString("NERR_RplNotRplServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile record information has been corrupted..
        /// </summary>
        internal static string NERR_RplProfileInfoCorrupted {
            get {
                return ResourceManager.GetString("NERR_RplProfileInfoCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile name is in use by some other profile..
        /// </summary>
        internal static string NERR_RplProfileNameUnavailable {
            get {
                return ResourceManager.GetString("NERR_RplProfileNameUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are workstations using this profile..
        /// </summary>
        internal static string NERR_RplProfileNotEmpty {
            get {
                return ResourceManager.GetString("NERR_RplProfileNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile record was not found..
        /// </summary>
        internal static string NERR_RplProfileNotFound {
            get {
                return ResourceManager.GetString("NERR_RplProfileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service failed to start because RPLFILES share is absent..
        /// </summary>
        internal static string NERR_RplRplfilesShare {
            get {
                return ResourceManager.GetString("NERR_RplRplfilesShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call to the Remoteboot server failed..
        /// </summary>
        internal static string NERR_RplSrvrCallFailed {
            get {
                return ResourceManager.GetString("NERR_RplSrvrCallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vendor id record information has been corrupted..
        /// </summary>
        internal static string NERR_RplVendorInfoCorrupted {
            get {
                return ResourceManager.GetString("NERR_RplVendorInfoCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vendor name is in use by some other vendor record..
        /// </summary>
        internal static string NERR_RplVendorNameUnavailable {
            get {
                return ResourceManager.GetString("NERR_RplVendorNameUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vendor record was not found..
        /// </summary>
        internal static string NERR_RplVendorNotFound {
            get {
                return ResourceManager.GetString("NERR_RplVendorNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workstation record information has been corrupted..
        /// </summary>
        internal static string NERR_RplWkstaInfoCorrupted {
            get {
                return ResourceManager.GetString("NERR_RplWkstaInfoCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workstation name is in use by some other workstation..
        /// </summary>
        internal static string NERR_RplWkstaNameUnavailable {
            get {
                return ResourceManager.GetString("NERR_RplWkstaNameUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user account for this workstation record is missing..
        /// </summary>
        internal static string NERR_RplWkstaNeedsUserAcct {
            get {
                return ResourceManager.GetString("NERR_RplWkstaNeedsUserAcct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workstation record was not found..
        /// </summary>
        internal static string NERR_RplWkstaNotFound {
            get {
                return ResourceManager.GetString("NERR_RplWkstaNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Run server you requested is paused..
        /// </summary>
        internal static string NERR_RunSrvPaused {
            get {
                return ResourceManager.GetString("NERR_RunSrvPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Server service is not started..
        /// </summary>
        internal static string NERR_ServerNotStarted {
            get {
                return ResourceManager.GetString("NERR_ServerNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service control is busy..
        /// </summary>
        internal static string NERR_ServiceCtlBusy {
            get {
                return ResourceManager.GetString("NERR_ServiceCtlBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested pause, continue, or stop is not valid for this service..
        /// </summary>
        internal static string NERR_ServiceCtlNotValid {
            get {
                return ResourceManager.GetString("NERR_ServiceCtlNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service is not responding to the control function..
        /// </summary>
        internal static string NERR_ServiceCtlTimeout {
            get {
                return ResourceManager.GetString("NERR_ServiceCtlTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service does not respond to control actions..
        /// </summary>
        internal static string NERR_ServiceEntryLocked {
            get {
                return ResourceManager.GetString("NERR_ServiceEntryLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested service has already been started..
        /// </summary>
        internal static string NERR_ServiceInstalled {
            get {
                return ResourceManager.GetString("NERR_ServiceInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service ended abnormally..
        /// </summary>
        internal static string NERR_ServiceKillProc {
            get {
                return ResourceManager.GetString("NERR_ServiceKillProc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service could not be controlled in its present state..
        /// </summary>
        internal static string NERR_ServiceNotCtrl {
            get {
                return ResourceManager.GetString("NERR_ServiceNotCtrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service has not been started..
        /// </summary>
        internal static string NERR_ServiceNotInstalled {
            get {
                return ResourceManager.GetString("NERR_ServiceNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A thread for the new service could not be created..
        /// </summary>
        internal static string NERR_ServiceNotStarting {
            get {
                return ResourceManager.GetString("NERR_ServiceNotStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service table is full..
        /// </summary>
        internal static string NERR_ServiceTableFull {
            get {
                return ResourceManager.GetString("NERR_ServiceTableFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service database is locked..
        /// </summary>
        internal static string NERR_ServiceTableLocked {
            get {
                return ResourceManager.GetString("NERR_ServiceTableLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This machine is already joined to a domain..
        /// </summary>
        internal static string NERR_SetupAlreadyJoined {
            get {
                return ResourceManager.GetString("NERR_SetupAlreadyJoined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This machine is a domain controller and cannot be unjoined from a domain..
        /// </summary>
        internal static string NERR_SetupDomainController {
            get {
                return ResourceManager.GetString("NERR_SetupDomainController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This machine is not currently joined to a domain..
        /// </summary>
        internal static string NERR_SetupNotJoined {
            get {
                return ResourceManager.GetString("NERR_SetupNotJoined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal error occurred. The network cannot access a shared memory segment..
        /// </summary>
        internal static string NERR_ShareMem {
            get {
                return ResourceManager.GetString("NERR_ShareMem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shared resource you are connected to could not be found..
        /// </summary>
        internal static string NERR_ShareNotFound {
            get {
                return ResourceManager.GetString("NERR_ShareNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source path cannot be a directory..
        /// </summary>
        internal static string NERR_SourceIsDir {
            get {
                return ResourceManager.GetString("NERR_SourceIsDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not allowed on this special group..
        /// </summary>
        internal static string NERR_SpeGroupOp {
            get {
                return ResourceManager.GetString("NERR_SpeGroupOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The spooler is not running..
        /// </summary>
        internal static string NERR_SpoolerNotLoaded {
            get {
                return ResourceManager.GetString("NERR_SpoolerNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A spooler memory allocation failure occurred..
        /// </summary>
        internal static string NERR_SpoolNoMemory {
            get {
                return ResourceManager.GetString("NERR_SpoolNoMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logon server was not specified. Your computer will be logged on as STANDALONE..
        /// </summary>
        internal static string NERR_StandaloneLogon {
            get {
                return ResourceManager.GetString("NERR_StandaloneLogon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to the Remoteboot server....
        /// </summary>
        internal static string NERR_StartingRplBoot {
            get {
                return ResourceManager.GetString("NERR_StartingRplBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This replicant database is outdated; synchronization is required..
        /// </summary>
        internal static string NERR_SyncRequired {
            get {
                return ResourceManager.GetString("NERR_SyncRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This server&apos;s clock is not synchronized with the primary domain controller&apos;s clock..
        /// </summary>
        internal static string NERR_TimeDiffAtDC {
            get {
                return ResourceManager.GetString("NERR_TimeDiffAtDC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A failure occurred when opening a remote temporary file..
        /// </summary>
        internal static string NERR_TmpFile {
            get {
                return ResourceManager.GetString("NERR_TmpFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The alert table is full..
        /// </summary>
        internal static string NERR_TooManyAlerts {
            get {
                return ResourceManager.GetString("NERR_TooManyAlerts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server has reached the maximum number of connections it supports..
        /// </summary>
        internal static string NERR_TooManyConnections {
            get {
                return ResourceManager.GetString("NERR_TooManyConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The buffer for types is not big enough..
        /// </summary>
        internal static string NERR_TooManyEntries {
            get {
                return ResourceManager.GetString("NERR_TooManyEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server cannot open more files because it has reached its maximum number..
        /// </summary>
        internal static string NERR_TooManyFiles {
            get {
                return ResourceManager.GetString("NERR_TooManyFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many image parameters cross disk sector boundaries..
        /// </summary>
        internal static string NERR_TooManyImageParams {
            get {
                return ResourceManager.GetString("NERR_TooManyImageParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested addition of items exceeds the maximum allowed..
        /// </summary>
        internal static string NERR_TooManyItems {
            get {
                return ResourceManager.GetString("NERR_TooManyItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of added message aliases has been exceeded..
        /// </summary>
        internal static string NERR_TooManyNames {
            get {
                return ResourceManager.GetString("NERR_TooManyNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no space for another entry in the table of available servers..
        /// </summary>
        internal static string NERR_TooManyServers {
            get {
                return ResourceManager.GetString("NERR_TooManyServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server has reached the maximum number of sessions it supports..
        /// </summary>
        internal static string NERR_TooManySessions {
            get {
                return ResourceManager.GetString("NERR_TooManySessions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data returned from a remote administration command has been truncated to 64K..
        /// </summary>
        internal static string NERR_TooMuchData {
            get {
                return ResourceManager.GetString("NERR_TooMuchData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The broadcast message was truncated..
        /// </summary>
        internal static string NERR_TruncatedBroadcast {
            get {
                return ResourceManager.GetString("NERR_TruncatedBroadcast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try down-level (remote admin protocol) version of API instead..
        /// </summary>
        internal static string NERR_TryDownLevel {
            get {
                return ResourceManager.GetString("NERR_TryDownLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logon processor did not add the message alias..
        /// </summary>
        internal static string NERR_UnableToAddName_F {
            get {
                return ResourceManager.GetString("NERR_UnableToAddName_F", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logon processor did not add the message alias..
        /// </summary>
        internal static string NERR_UnableToAddName_W {
            get {
                return ResourceManager.GetString("NERR_UnableToAddName_W", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logoff processor did not delete the message alias..
        /// </summary>
        internal static string NERR_UnableToDelName_F {
            get {
                return ResourceManager.GetString("NERR_UnableToDelName_F", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logoff processor did not delete the message alias..
        /// </summary>
        internal static string NERR_UnableToDelName_W {
            get {
                return ResourceManager.GetString("NERR_UnableToDelName_W", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device or directory does not exist..
        /// </summary>
        internal static string NERR_UnknownDevDir {
            get {
                return ResourceManager.GetString("NERR_UnknownDevDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server could not be located..
        /// </summary>
        internal static string NERR_UnknownServer {
            get {
                return ResourceManager.GetString("NERR_UnknownServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UPS driver could not be accessed by the UPS service..
        /// </summary>
        internal static string NERR_UPSDriverNotStarted {
            get {
                return ResourceManager.GetString("NERR_UPSDriverNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UPS service could not access the specified Comm Port..
        /// </summary>
        internal static string NERR_UPSInvalidCommPort {
            get {
                return ResourceManager.GetString("NERR_UPSInvalidCommPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UPS service is not configured correctly..
        /// </summary>
        internal static string NERR_UPSInvalidConfig {
            get {
                return ResourceManager.GetString("NERR_UPSInvalidConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UPS service failed to perform a system shut down..
        /// </summary>
        internal static string NERR_UPSShutdownFailed {
            get {
                return ResourceManager.GetString("NERR_UPSShutdownFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UPS indicated a line fail or low battery situation. Service not started..
        /// </summary>
        internal static string NERR_UPSSignalAsserted {
            get {
                return ResourceManager.GetString("NERR_UPSSignalAsserted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This network connection does not exist..
        /// </summary>
        internal static string NERR_UseNotFound {
            get {
                return ResourceManager.GetString("NERR_UseNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account already exists..
        /// </summary>
        internal static string NERR_UserExists {
            get {
                return ResourceManager.GetString("NERR_UserExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user already belongs to this group..
        /// </summary>
        internal static string NERR_UserInGroup {
            get {
                return ResourceManager.GetString("NERR_UserInGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting a user with a session is not allowed..
        /// </summary>
        internal static string NERR_UserLogon {
            get {
                return ResourceManager.GetString("NERR_UserLogon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user name could not be found..
        /// </summary>
        internal static string NERR_UserNotFound {
            get {
                return ResourceManager.GetString("NERR_UserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user does not belong to this group..
        /// </summary>
        internal static string NERR_UserNotInGroup {
            get {
                return ResourceManager.GetString("NERR_UserNotInGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Workstation service is in an inconsistent state. Restart the computer before restarting the Workstation service..
        /// </summary>
        internal static string NERR_WkstaInconsistentState {
            get {
                return ResourceManager.GetString("NERR_WkstaInconsistentState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Workstation service has not been started..
        /// </summary>
        internal static string NERR_WkstaNotStarted {
            get {
                return ResourceManager.GetString("NERR_WkstaNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A write fault occurred..
        /// </summary>
        internal static string NERR_WriteFault {
            get {
                return ResourceManager.GetString("NERR_WriteFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object specified was not found..
        /// </summary>
        internal static string OR_INVALID_OID {
            get {
                return ResourceManager.GetString("OR_INVALID_OID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object exporter specified was not found..
        /// </summary>
        internal static string OR_INVALID_OXID {
            get {
                return ResourceManager.GetString("OR_INVALID_OXID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object resolver set specified was not found..
        /// </summary>
        internal static string OR_INVALID_SET {
            get {
                return ResourceManager.GetString("OR_INVALID_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not perform the requested operation because it has already been carried out..
        /// </summary>
        internal static string PEERDIST_ERROR_ALREADY_COMPLETED {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_ALREADY_COMPLETED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An element already exists and was not replaced..
        /// </summary>
        internal static string PEERDIST_ERROR_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied object has already been initialized..
        /// </summary>
        internal static string PEERDIST_ERROR_ALREADY_INITIALIZED {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_ALREADY_INITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied content information is malformed..
        /// </summary>
        internal static string PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the supplied content information is not supported..
        /// </summary>
        internal static string PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A configuration value is invalid..
        /// </summary>
        internal static string PEERDIST_ERROR_INVALID_CONFIGURATION {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_INVALID_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied object has already been invalidated..
        /// </summary>
        internal static string PEERDIST_ERROR_INVALIDATED {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_INVALIDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested data cannot be found in local or peer caches..
        /// </summary>
        internal static string PEERDIST_ERROR_MISSING_DATA {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_MISSING_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more data is available or required..
        /// </summary>
        internal static string PEERDIST_ERROR_NO_MORE {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_NO_MORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied object has not been initialized..
        /// </summary>
        internal static string PEERDIST_ERROR_NOT_INITIALIZED {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_NOT_INITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SKU is not licensed..
        /// </summary>
        internal static string PEERDIST_ERROR_NOT_LICENSED {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_NOT_LICENSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not cancel the requested operation as it has already been completed..
        /// </summary>
        internal static string PEERDIST_ERROR_OPERATION_NOTFOUND {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_OPERATION_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation accessed data beyond the bounds of valid data..
        /// </summary>
        internal static string PEERDIST_ERROR_OUT_OF_BOUNDS {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_OUT_OF_BOUNDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PeerDist Service is still initializing and will be available shortly..
        /// </summary>
        internal static string PEERDIST_ERROR_SERVICE_UNAVAILABLE {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_SERVICE_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A shutdown operation is already in progress..
        /// </summary>
        internal static string PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested version is not supported..
        /// </summary>
        internal static string PEERDIST_ERROR_VERSION_UNSUPPORTED {
            get {
                return ResourceManager.GetString("PEERDIST_ERROR_VERSION_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An addressing error occurred in the RPC server..
        /// </summary>
        internal static string RPC_S_ADDRESS_ERROR {
            get {
                return ResourceManager.GetString("RPC_S_ADDRESS_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC server is already listening..
        /// </summary>
        internal static string RPC_S_ALREADY_LISTENING {
            get {
                return ResourceManager.GetString("RPC_S_ALREADY_LISTENING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object universal unique identifier (UUID) has already been registered..
        /// </summary>
        internal static string RPC_S_ALREADY_REGISTERED {
            get {
                return ResourceManager.GetString("RPC_S_ALREADY_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding does not contain any authentication information..
        /// </summary>
        internal static string RPC_S_BINDING_HAS_NO_AUTH {
            get {
                return ResourceManager.GetString("RPC_S_BINDING_HAS_NO_AUTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding handle does not contain all required information..
        /// </summary>
        internal static string RPC_S_BINDING_INCOMPLETE {
            get {
                return ResourceManager.GetString("RPC_S_BINDING_INCOMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote procedure call was cancelled..
        /// </summary>
        internal static string RPC_S_CALL_CANCELLED {
            get {
                return ResourceManager.GetString("RPC_S_CALL_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote procedure call failed..
        /// </summary>
        internal static string RPC_S_CALL_FAILED {
            get {
                return ResourceManager.GetString("RPC_S_CALL_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote procedure call failed and did not execute..
        /// </summary>
        internal static string RPC_S_CALL_FAILED_DNE {
            get {
                return ResourceManager.GetString("RPC_S_CALL_FAILED_DNE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A remote procedure call is already in progress for this thread..
        /// </summary>
        internal static string RPC_S_CALL_IN_PROGRESS {
            get {
                return ResourceManager.GetString("RPC_S_CALL_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation is not supported..
        /// </summary>
        internal static string RPC_S_CANNOT_SUPPORT {
            get {
                return ResourceManager.GetString("RPC_S_CANNOT_SUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint cannot be created..
        /// </summary>
        internal static string RPC_S_CANT_CREATE_ENDPOINT {
            get {
                return ResourceManager.GetString("RPC_S_CANT_CREATE_ENDPOINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A communications failure occurred during a remote procedure call..
        /// </summary>
        internal static string RPC_S_COMM_FAILURE {
            get {
                return ResourceManager.GetString("RPC_S_COMM_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint is a duplicate..
        /// </summary>
        internal static string RPC_S_DUPLICATE_ENDPOINT {
            get {
                return ResourceManager.GetString("RPC_S_DUPLICATE_ENDPOINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry already exists..
        /// </summary>
        internal static string RPC_S_ENTRY_ALREADY_EXISTS {
            get {
                return ResourceManager.GetString("RPC_S_ENTRY_ALREADY_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry is not found..
        /// </summary>
        internal static string RPC_S_ENTRY_NOT_FOUND {
            get {
                return ResourceManager.GetString("RPC_S_ENTRY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry is not of the expected type..
        /// </summary>
        internal static string RPC_S_ENTRY_TYPE_MISMATCH {
            get {
                return ResourceManager.GetString("RPC_S_ENTRY_TYPE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A floating-point operation at the RPC server caused a division by zero..
        /// </summary>
        internal static string RPC_S_FP_DIV_ZERO {
            get {
                return ResourceManager.GetString("RPC_S_FP_DIV_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A floating-point overflow occurred at the RPC server..
        /// </summary>
        internal static string RPC_S_FP_OVERFLOW {
            get {
                return ResourceManager.GetString("RPC_S_FP_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A floating-point underflow occurred at the RPC server..
        /// </summary>
        internal static string RPC_S_FP_UNDERFLOW {
            get {
                return ResourceManager.GetString("RPC_S_FP_UNDERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group member was not found..
        /// </summary>
        internal static string RPC_S_GROUP_MEMBER_NOT_FOUND {
            get {
                return ResourceManager.GetString("RPC_S_GROUP_MEMBER_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group element could not be added..
        /// </summary>
        internal static string RPC_S_GRP_ELT_NOT_ADDED {
            get {
                return ResourceManager.GetString("RPC_S_GRP_ELT_NOT_ADDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The group element could not be removed..
        /// </summary>
        internal static string RPC_S_GRP_ELT_NOT_REMOVED {
            get {
                return ResourceManager.GetString("RPC_S_GRP_ELT_NOT_REMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry name is incomplete..
        /// </summary>
        internal static string RPC_S_INCOMPLETE_NAME {
            get {
                return ResourceManager.GetString("RPC_S_INCOMPLETE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface could not be exported to the specified entry..
        /// </summary>
        internal static string RPC_S_INTERFACE_NOT_EXPORTED {
            get {
                return ResourceManager.GetString("RPC_S_INTERFACE_NOT_EXPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface was not found..
        /// </summary>
        internal static string RPC_S_INTERFACE_NOT_FOUND {
            get {
                return ResourceManager.GetString("RPC_S_INTERFACE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal error occurred in a remote procedure call (RPC)..
        /// </summary>
        internal static string RPC_S_INTERNAL_ERROR {
            get {
                return ResourceManager.GetString("RPC_S_INTERNAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid asynchronous RPC call handle for this operation..
        /// </summary>
        internal static string RPC_S_INVALID_ASYNC_CALL {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_ASYNC_CALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid asynchronous remote procedure call handle..
        /// </summary>
        internal static string RPC_S_INVALID_ASYNC_HANDLE {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_ASYNC_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security context is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_AUTH_IDENTITY {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_AUTH_IDENTITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding handle is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_BINDING {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_BINDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array bounds are invalid..
        /// </summary>
        internal static string RPC_S_INVALID_BOUND {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_BOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The endpoint format is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_ENDPOINT_FORMAT {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_ENDPOINT_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network address family is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_NAF_ID {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_NAF_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name syntax is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_NAME_SYNTAX {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_NAME_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network address is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_NET_ADDR {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_NET_ADDR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The network options are invalid..
        /// </summary>
        internal static string RPC_S_INVALID_NETWORK_OPTIONS {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_NETWORK_OPTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object universal unique identifier (UUID) is the nil UUID..
        /// </summary>
        internal static string RPC_S_INVALID_OBJECT {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC protocol sequence is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_RPC_PROTSEQ {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_RPC_PROTSEQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string binding is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_STRING_BINDING {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_STRING_BINDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string universal unique identifier (UUID) is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_STRING_UUID {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_STRING_UUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_TAG {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_TAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timeout value is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_TIMEOUT {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version option is invalid..
        /// </summary>
        internal static string RPC_S_INVALID_VERS_OPTION {
            get {
                return ResourceManager.GetString("RPC_S_INVALID_VERS_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of calls is too small..
        /// </summary>
        internal static string RPC_S_MAX_CALLS_TOO_SMALL {
            get {
                return ResourceManager.GetString("RPC_S_MAX_CALLS_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name service is unavailable..
        /// </summary>
        internal static string RPC_S_NAME_SERVICE_UNAVAILABLE {
            get {
                return ResourceManager.GetString("RPC_S_NAME_SERVICE_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no bindings..
        /// </summary>
        internal static string RPC_S_NO_BINDINGS {
            get {
                return ResourceManager.GetString("RPC_S_NO_BINDINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no remote procedure calls active on this thread..
        /// </summary>
        internal static string RPC_S_NO_CALL_ACTIVE {
            get {
                return ResourceManager.GetString("RPC_S_NO_CALL_ACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No security context is available to allow impersonation..
        /// </summary>
        internal static string RPC_S_NO_CONTEXT_AVAILABLE {
            get {
                return ResourceManager.GetString("RPC_S_NO_CONTEXT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No endpoint was found..
        /// </summary>
        internal static string RPC_S_NO_ENDPOINT_FOUND {
            get {
                return ResourceManager.GetString("RPC_S_NO_ENDPOINT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding does not contain an entry name..
        /// </summary>
        internal static string RPC_S_NO_ENTRY_NAME {
            get {
                return ResourceManager.GetString("RPC_S_NO_ENTRY_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No interfaces have been registered..
        /// </summary>
        internal static string RPC_S_NO_INTERFACES {
            get {
                return ResourceManager.GetString("RPC_S_NO_INTERFACES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no more bindings..
        /// </summary>
        internal static string RPC_S_NO_MORE_BINDINGS {
            get {
                return ResourceManager.GetString("RPC_S_NO_MORE_BINDINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no more members..
        /// </summary>
        internal static string RPC_S_NO_MORE_MEMBERS {
            get {
                return ResourceManager.GetString("RPC_S_NO_MORE_MEMBERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No principal name registered..
        /// </summary>
        internal static string RPC_S_NO_PRINC_NAME {
            get {
                return ResourceManager.GetString("RPC_S_NO_PRINC_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no protocol sequences..
        /// </summary>
        internal static string RPC_S_NO_PROTSEQS {
            get {
                return ResourceManager.GetString("RPC_S_NO_PROTSEQS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No protocol sequences have been registered..
        /// </summary>
        internal static string RPC_S_NO_PROTSEQS_REGISTERED {
            get {
                return ResourceManager.GetString("RPC_S_NO_PROTSEQS_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all object UUIDs could be exported to the specified entry..
        /// </summary>
        internal static string RPC_S_NOT_ALL_OBJS_EXPORTED {
            get {
                return ResourceManager.GetString("RPC_S_NOT_ALL_OBJS_EXPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is nothing to unexport..
        /// </summary>
        internal static string RPC_S_NOT_ALL_OBJS_UNEXPORTED {
            get {
                return ResourceManager.GetString("RPC_S_NOT_ALL_OBJS_UNEXPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thread is not canceled..
        /// </summary>
        internal static string RPC_S_NOT_CANCELLED {
            get {
                return ResourceManager.GetString("RPC_S_NOT_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC server is not listening..
        /// </summary>
        internal static string RPC_S_NOT_LISTENING {
            get {
                return ResourceManager.GetString("RPC_S_NOT_LISTENING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The error specified is not a valid Windows RPC error code..
        /// </summary>
        internal static string RPC_S_NOT_RPC_ERROR {
            get {
                return ResourceManager.GetString("RPC_S_NOT_RPC_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No interfaces have been exported..
        /// </summary>
        internal static string RPC_S_NOTHING_TO_EXPORT {
            get {
                return ResourceManager.GetString("RPC_S_NOTHING_TO_EXPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object universal unique identifier (UUID) was not found..
        /// </summary>
        internal static string RPC_S_OBJECT_NOT_FOUND {
            get {
                return ResourceManager.GetString("RPC_S_OBJECT_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough resources are available to complete this operation..
        /// </summary>
        internal static string RPC_S_OUT_OF_RESOURCES {
            get {
                return ResourceManager.GetString("RPC_S_OUT_OF_RESOURCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified profile element could not be added..
        /// </summary>
        internal static string RPC_S_PRF_ELT_NOT_ADDED {
            get {
                return ResourceManager.GetString("RPC_S_PRF_ELT_NOT_ADDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified profile element could not be removed..
        /// </summary>
        internal static string RPC_S_PRF_ELT_NOT_REMOVED {
            get {
                return ResourceManager.GetString("RPC_S_PRF_ELT_NOT_REMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure number is out of range..
        /// </summary>
        internal static string RPC_S_PROCNUM_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("RPC_S_PROCNUM_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified profile entry could not be added..
        /// </summary>
        internal static string RPC_S_PROFILE_NOT_ADDED {
            get {
                return ResourceManager.GetString("RPC_S_PROFILE_NOT_ADDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A remote procedure call (RPC) protocol error occurred..
        /// </summary>
        internal static string RPC_S_PROTOCOL_ERROR {
            get {
                return ResourceManager.GetString("RPC_S_PROTOCOL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC protocol sequence was not found..
        /// </summary>
        internal static string RPC_S_PROTSEQ_NOT_FOUND {
            get {
                return ResourceManager.GetString("RPC_S_PROTSEQ_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC protocol sequence is not supported..
        /// </summary>
        internal static string RPC_S_PROTSEQ_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("RPC_S_PROTSEQ_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the HTTP proxy is denied..
        /// </summary>
        internal static string RPC_S_PROXY_ACCESS_DENIED {
            get {
                return ResourceManager.GetString("RPC_S_PROXY_ACCESS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A security package specific error occurred..
        /// </summary>
        internal static string RPC_S_SEC_PKG_ERROR {
            get {
                return ResourceManager.GetString("RPC_S_SEC_PKG_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some data remains to be sent in the request buffer..
        /// </summary>
        internal static string RPC_S_SEND_INCOMPLETE {
            get {
                return ResourceManager.GetString("RPC_S_SEND_INCOMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC server is too busy to complete this operation..
        /// </summary>
        internal static string RPC_S_SERVER_TOO_BUSY {
            get {
                return ResourceManager.GetString("RPC_S_SERVER_TOO_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC server is unavailable..
        /// </summary>
        internal static string RPC_S_SERVER_UNAVAILABLE {
            get {
                return ResourceManager.GetString("RPC_S_SERVER_UNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string is too long..
        /// </summary>
        internal static string RPC_S_STRING_TOO_LONG {
            get {
                return ResourceManager.GetString("RPC_S_STRING_TOO_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type universal unique identifier (UUID) has already been registered..
        /// </summary>
        internal static string RPC_S_TYPE_ALREADY_REGISTERED {
            get {
                return ResourceManager.GetString("RPC_S_TYPE_ALREADY_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication level is unknown..
        /// </summary>
        internal static string RPC_S_UNKNOWN_AUTHN_LEVEL {
            get {
                return ResourceManager.GetString("RPC_S_UNKNOWN_AUTHN_LEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication service is unknown..
        /// </summary>
        internal static string RPC_S_UNKNOWN_AUTHN_SERVICE {
            get {
                return ResourceManager.GetString("RPC_S_UNKNOWN_AUTHN_SERVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication type is unknown..
        /// </summary>
        internal static string RPC_S_UNKNOWN_AUTHN_TYPE {
            get {
                return ResourceManager.GetString("RPC_S_UNKNOWN_AUTHN_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authorization service is unknown..
        /// </summary>
        internal static string RPC_S_UNKNOWN_AUTHZ_SERVICE {
            get {
                return ResourceManager.GetString("RPC_S_UNKNOWN_AUTHZ_SERVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interface is unknown..
        /// </summary>
        internal static string RPC_S_UNKNOWN_IF {
            get {
                return ResourceManager.GetString("RPC_S_UNKNOWN_IF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manager type is unknown..
        /// </summary>
        internal static string RPC_S_UNKNOWN_MGR_TYPE {
            get {
                return ResourceManager.GetString("RPC_S_UNKNOWN_MGR_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested authentication level is not supported..
        /// </summary>
        internal static string RPC_S_UNSUPPORTED_AUTHN_LEVEL {
            get {
                return ResourceManager.GetString("RPC_S_UNSUPPORTED_AUTHN_LEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name syntax is not supported..
        /// </summary>
        internal static string RPC_S_UNSUPPORTED_NAME_SYNTAX {
            get {
                return ResourceManager.GetString("RPC_S_UNSUPPORTED_NAME_SYNTAX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transfer syntax is not supported by the RPC server..
        /// </summary>
        internal static string RPC_S_UNSUPPORTED_TRANS_SYN {
            get {
                return ResourceManager.GetString("RPC_S_UNSUPPORTED_TRANS_SYN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The universal unique identifier (UUID) type is not supported..
        /// </summary>
        internal static string RPC_S_UNSUPPORTED_TYPE {
            get {
                return ResourceManager.GetString("RPC_S_UNSUPPORTED_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A UUID that is valid only on this computer has been allocated..
        /// </summary>
        internal static string RPC_S_UUID_LOCAL_ONLY {
            get {
                return ResourceManager.GetString("RPC_S_UUID_LOCAL_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No network address is available to use to construct a universal unique identifier (UUID)..
        /// </summary>
        internal static string RPC_S_UUID_NO_ADDRESS {
            get {
                return ResourceManager.GetString("RPC_S_UUID_NO_ADDRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding handle is not the correct type..
        /// </summary>
        internal static string RPC_S_WRONG_KIND_OF_BINDING {
            get {
                return ResourceManager.GetString("RPC_S_WRONG_KIND_OF_BINDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC server attempted an integer division by zero..
        /// </summary>
        internal static string RPC_S_ZERO_DIVIDE {
            get {
                return ResourceManager.GetString("RPC_S_ZERO_DIVIDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stub received bad data..
        /// </summary>
        internal static string RPC_X_BAD_STUB_DATA {
            get {
                return ResourceManager.GetString("RPC_X_BAD_STUB_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The byte count is too small..
        /// </summary>
        internal static string RPC_X_BYTE_COUNT_TOO_SMALL {
            get {
                return ResourceManager.GetString("RPC_X_BYTE_COUNT_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enumeration value is out of range..
        /// </summary>
        internal static string RPC_X_ENUM_VALUE_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("RPC_X_ENUM_VALUE_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operation on the encoding/decoding handle..
        /// </summary>
        internal static string RPC_X_INVALID_ES_ACTION {
            get {
                return ResourceManager.GetString("RPC_X_INVALID_ES_ACTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC pipe object is invalid or corrupted..
        /// </summary>
        internal static string RPC_X_INVALID_PIPE_OBJECT {
            get {
                return ResourceManager.GetString("RPC_X_INVALID_PIPE_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of RPC servers available for the binding of auto handles has been exhausted..
        /// </summary>
        internal static string RPC_X_NO_MORE_ENTRIES {
            get {
                return ResourceManager.GetString("RPC_X_NO_MORE_ENTRIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null reference pointer was passed to the stub..
        /// </summary>
        internal static string RPC_X_NULL_REF_POINTER {
            get {
                return ResourceManager.GetString("RPC_X_NULL_REF_POINTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC pipe object has already been closed..
        /// </summary>
        internal static string RPC_X_PIPE_CLOSED {
            get {
                return ResourceManager.GetString("RPC_X_PIPE_CLOSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RPC call completed before all pipes were processed..
        /// </summary>
        internal static string RPC_X_PIPE_DISCIPLINE_ERROR {
            get {
                return ResourceManager.GetString("RPC_X_PIPE_DISCIPLINE_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more data is available from the RPC pipe..
        /// </summary>
        internal static string RPC_X_PIPE_EMPTY {
            get {
                return ResourceManager.GetString("RPC_X_PIPE_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stub is unable to get the remote procedure call handle..
        /// </summary>
        internal static string RPC_X_SS_CANNOT_GET_CALL_HANDLE {
            get {
                return ResourceManager.GetString("RPC_X_SS_CANNOT_GET_CALL_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open the character translation table file..
        /// </summary>
        internal static string RPC_X_SS_CHAR_TRANS_OPEN_FAIL {
            get {
                return ResourceManager.GetString("RPC_X_SS_CHAR_TRANS_OPEN_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file containing the character translation table has fewer than 512 bytes..
        /// </summary>
        internal static string RPC_X_SS_CHAR_TRANS_SHORT_FILE {
            get {
                return ResourceManager.GetString("RPC_X_SS_CHAR_TRANS_SHORT_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The context handle changed during a remote procedure call..
        /// </summary>
        internal static string RPC_X_SS_CONTEXT_DAMAGED {
            get {
                return ResourceManager.GetString("RPC_X_SS_CONTEXT_DAMAGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding handles passed to a remote procedure call do not match..
        /// </summary>
        internal static string RPC_X_SS_HANDLES_MISMATCH {
            get {
                return ResourceManager.GetString("RPC_X_SS_HANDLES_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null context handle was passed from the client to the host during a remote procedure call..
        /// </summary>
        internal static string RPC_X_SS_IN_NULL_CONTEXT {
            get {
                return ResourceManager.GetString("RPC_X_SS_IN_NULL_CONTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatible version of the serializing package..
        /// </summary>
        internal static string RPC_X_WRONG_ES_VERSION {
            get {
                return ResourceManager.GetString("RPC_X_WRONG_ES_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid operation was attempted on an RPC pipe object..
        /// </summary>
        internal static string RPC_X_WRONG_PIPE_ORDER {
            get {
                return ResourceManager.GetString("RPC_X_WRONG_PIPE_ORDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported RPC pipe version..
        /// </summary>
        internal static string RPC_X_WRONG_PIPE_VERSION {
            get {
                return ResourceManager.GetString("RPC_X_WRONG_PIPE_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatible version of the RPC stub..
        /// </summary>
        internal static string RPC_X_WRONG_STUB_VERSION {
            get {
                return ResourceManager.GetString("RPC_X_WRONG_STUB_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Task Scheduler service must be configured to run in the System account to function properly. Individual tasks may be configured to run in other accounts..
        /// </summary>
        internal static string SCHED_E_SERVICE_NOT_LOCALSYSTEM {
            get {
                return ResourceManager.GetString("SCHED_E_SERVICE_NOT_LOCALSYSTEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The wait operation timed out..
        /// </summary>
        internal static string WAIT_TIMEOUT {
            get {
                return ResourceManager.GetString("WAIT_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Main Mode policy was successfully added, but some of the requested offers are not supported..
        /// </summary>
        internal static string WARNING_IPSEC_MM_POLICY_PRUNED {
            get {
                return ResourceManager.GetString("WARNING_IPSEC_MM_POLICY_PRUNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Quick Mode policy was successfully added, but some of the requested offers are not supported..
        /// </summary>
        internal static string WARNING_IPSEC_QM_POLICY_PRUNED {
            get {
                return ResourceManager.GetString("WARNING_IPSEC_QM_POLICY_PRUNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A call to WSALookupServiceEnd was made while this call was still processing. The call has been canceled..
        /// </summary>
        internal static string WSA_E_CANCELLED {
            get {
                return ResourceManager.GetString("WSA_E_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more results can be returned by WSALookupServiceNext..
        /// </summary>
        internal static string WSA_E_NO_MORE {
            get {
                return ResourceManager.GetString("WSA_E_NO_MORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error due to lack of resources..
        /// </summary>
        internal static string WSA_QOS_ADMISSION_FAILURE {
            get {
                return ResourceManager.GetString("WSA_QOS_ADMISSION_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Problem with some part of the filterspec or providerspecific buffer in general..
        /// </summary>
        internal static string WSA_QOS_BAD_OBJECT {
            get {
                return ResourceManager.GetString("WSA_QOS_BAD_OBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown or conflicting style..
        /// </summary>
        internal static string WSA_QOS_BAD_STYLE {
            get {
                return ResourceManager.GetString("WSA_QOS_BAD_STYLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect number of QOS FILTERSPECs were specified in the FLOWDESCRIPTOR..
        /// </summary>
        internal static string WSA_QOS_EFILTERCOUNT {
            get {
                return ResourceManager.GetString("WSA_QOS_EFILTERCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid QOS filter style was used..
        /// </summary>
        internal static string WSA_QOS_EFILTERSTYLE {
            get {
                return ResourceManager.GetString("WSA_QOS_EFILTERSTYLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid QOS filter type was used..
        /// </summary>
        internal static string WSA_QOS_EFILTERTYPE {
            get {
                return ResourceManager.GetString("WSA_QOS_EFILTERTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect number of flow descriptors was specified in the QOS structure..
        /// </summary>
        internal static string WSA_QOS_EFLOWCOUNT {
            get {
                return ResourceManager.GetString("WSA_QOS_EFLOWCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid QOS flow descriptor was found in the flow descriptor list..
        /// </summary>
        internal static string WSA_QOS_EFLOWDESC {
            get {
                return ResourceManager.GetString("WSA_QOS_EFLOWDESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid or inconsistent flowspec was found in the QOS structure..
        /// </summary>
        internal static string WSA_QOS_EFLOWSPEC {
            get {
                return ResourceManager.GetString("WSA_QOS_EFLOWSPEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object with an invalid ObjectLength field was specified in the QOS provider-specific buffer..
        /// </summary>
        internal static string WSA_QOS_EOBJLENGTH {
            get {
                return ResourceManager.GetString("WSA_QOS_EOBJLENGTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid policy object was found in the QOS provider-specific buffer..
        /// </summary>
        internal static string WSA_QOS_EPOLICYOBJ {
            get {
                return ResourceManager.GetString("WSA_QOS_EPOLICYOBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid QOS provider-specific buffer..
        /// </summary>
        internal static string WSA_QOS_EPROVSPECBUF {
            get {
                return ResourceManager.GetString("WSA_QOS_EPROVSPECBUF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid FILTERSPEC was found in the QOS provider-specific buffer..
        /// </summary>
        internal static string WSA_QOS_EPSFILTERSPEC {
            get {
                return ResourceManager.GetString("WSA_QOS_EPSFILTERSPEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid or inconsistent flowspec was found in the QOS provider specific buffer..
        /// </summary>
        internal static string WSA_QOS_EPSFLOWSPEC {
            get {
                return ResourceManager.GetString("WSA_QOS_EPSFLOWSPEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid shape discard mode object was found in the QOS provider specific buffer..
        /// </summary>
        internal static string WSA_QOS_ESDMODEOBJ {
            get {
                return ResourceManager.GetString("WSA_QOS_ESDMODEOBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid or unrecognized service type was found in the flowspec..
        /// </summary>
        internal static string WSA_QOS_ESERVICETYPE {
            get {
                return ResourceManager.GetString("WSA_QOS_ESERVICETYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid shaping rate object was found in the QOS provider-specific buffer..
        /// </summary>
        internal static string WSA_QOS_ESHAPERATEOBJ {
            get {
                return ResourceManager.GetString("WSA_QOS_ESHAPERATEOBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unrecognized object was found in the QOS provider-specific buffer..
        /// </summary>
        internal static string WSA_QOS_EUNKOWNPSOBJ {
            get {
                return ResourceManager.GetString("WSA_QOS_EUNKOWNPSOBJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General QOS error..
        /// </summary>
        internal static string WSA_QOS_GENERIC_ERROR {
            get {
                return ResourceManager.GetString("WSA_QOS_GENERIC_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no receivers..
        /// </summary>
        internal static string WSA_QOS_NO_RECEIVERS {
            get {
                return ResourceManager.GetString("WSA_QOS_NO_RECEIVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no senders..
        /// </summary>
        internal static string WSA_QOS_NO_SENDERS {
            get {
                return ResourceManager.GetString("WSA_QOS_NO_SENDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rejected for administrative reasons - bad credentials..
        /// </summary>
        internal static string WSA_QOS_POLICY_FAILURE {
            get {
                return ResourceManager.GetString("WSA_QOS_POLICY_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one reserve has arrived..
        /// </summary>
        internal static string WSA_QOS_RECEIVERS {
            get {
                return ResourceManager.GetString("WSA_QOS_RECEIVERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserve has been confirmed..
        /// </summary>
        internal static string WSA_QOS_REQUEST_CONFIRMED {
            get {
                return ResourceManager.GetString("WSA_QOS_REQUEST_CONFIRMED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reserved policy element was found in the QOS provider-specific buffer..
        /// </summary>
        internal static string WSA_QOS_RESERVED_PETYPE {
            get {
                return ResourceManager.GetString("WSA_QOS_RESERVED_PETYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one path has arrived..
        /// </summary>
        internal static string WSA_QOS_SENDERS {
            get {
                return ResourceManager.GetString("WSA_QOS_SENDERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Problem with some part of the flowspec..
        /// </summary>
        internal static string WSA_QOS_TRAFFIC_CTRL_ERROR {
            get {
                return ResourceManager.GetString("WSA_QOS_TRAFFIC_CTRL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to access a socket in a way forbidden by its access permissions..
        /// </summary>
        internal static string WSAEACCES {
            get {
                return ResourceManager.GetString("WSAEACCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one usage of each socket address (protocol/network address/port) is normally permitted..
        /// </summary>
        internal static string WSAEADDRINUSE {
            get {
                return ResourceManager.GetString("WSAEADDRINUSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested address is not valid in its context..
        /// </summary>
        internal static string WSAEADDRNOTAVAIL {
            get {
                return ResourceManager.GetString("WSAEADDRNOTAVAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An address incompatible with the requested protocol was used..
        /// </summary>
        internal static string WSAEAFNOSUPPORT {
            get {
                return ResourceManager.GetString("WSAEAFNOSUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation was attempted on a non-blocking socket that already had an operation in progress..
        /// </summary>
        internal static string WSAEALREADY {
            get {
                return ResourceManager.GetString("WSAEALREADY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file handle supplied is not valid..
        /// </summary>
        internal static string WSAEBADF {
            get {
                return ResourceManager.GetString("WSAEBADF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A call to WSALookupServiceEnd was made while this call was still processing. The call has been canceled..
        /// </summary>
        internal static string WSAECANCELLED {
            get {
                return ResourceManager.GetString("WSAECANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An established connection was aborted by the software in your host machine..
        /// </summary>
        internal static string WSAECONNABORTED {
            get {
                return ResourceManager.GetString("WSAECONNABORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connection could be made because the target machine actively refused it..
        /// </summary>
        internal static string WSAECONNREFUSED {
            get {
                return ResourceManager.GetString("WSAECONNREFUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An existing connection was forcibly closed by the remote host..
        /// </summary>
        internal static string WSAECONNRESET {
            get {
                return ResourceManager.GetString("WSAECONNRESET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required address was omitted from an operation on a socket..
        /// </summary>
        internal static string WSAEDESTADDRREQ {
            get {
                return ResourceManager.GetString("WSAEDESTADDRREQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returned by WSARecv or WSARecvFrom to indicate the remote party has initiated a graceful shutdown sequence..
        /// </summary>
        internal static string WSAEDISCON {
            get {
                return ResourceManager.GetString("WSAEDISCON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ran out of disk quota..
        /// </summary>
        internal static string WSAEDQUOT {
            get {
                return ResourceManager.GetString("WSAEDQUOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system detected an invalid pointer address in attempting to use a pointer argument in a call..
        /// </summary>
        internal static string WSAEFAULT {
            get {
                return ResourceManager.GetString("WSAEFAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A socket operation failed because the destination host was down..
        /// </summary>
        internal static string WSAEHOSTDOWN {
            get {
                return ResourceManager.GetString("WSAEHOSTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A socket operation was attempted to an unreachable host..
        /// </summary>
        internal static string WSAEHOSTUNREACH {
            get {
                return ResourceManager.GetString("WSAEHOSTUNREACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A blocking operation is currently executing..
        /// </summary>
        internal static string WSAEINPROGRESS {
            get {
                return ResourceManager.GetString("WSAEINPROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A blocking operation was interrupted by a call to WSACancelBlockingCall..
        /// </summary>
        internal static string WSAEINTR {
            get {
                return ResourceManager.GetString("WSAEINTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid argument was supplied..
        /// </summary>
        internal static string WSAEINVAL {
            get {
                return ResourceManager.GetString("WSAEINVAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure call table is invalid..
        /// </summary>
        internal static string WSAEINVALIDPROCTABLE {
            get {
                return ResourceManager.GetString("WSAEINVALIDPROCTABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested service provider is invalid..
        /// </summary>
        internal static string WSAEINVALIDPROVIDER {
            get {
                return ResourceManager.GetString("WSAEINVALIDPROVIDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connect request was made on an already connected socket..
        /// </summary>
        internal static string WSAEISCONN {
            get {
                return ResourceManager.GetString("WSAEISCONN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot translate name..
        /// </summary>
        internal static string WSAELOOP {
            get {
                return ResourceManager.GetString("WSAELOOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many open sockets..
        /// </summary>
        internal static string WSAEMFILE {
            get {
                return ResourceManager.GetString("WSAEMFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A message sent on a datagram socket was larger than the internal message buffer or some other network limit, or the buffer used to receive a datagram into was smaller than the datagram itself..
        /// </summary>
        internal static string WSAEMSGSIZE {
            get {
                return ResourceManager.GetString("WSAEMSGSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name component or name was too long..
        /// </summary>
        internal static string WSAENAMETOOLONG {
            get {
                return ResourceManager.GetString("WSAENAMETOOLONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A socket operation encountered a dead network..
        /// </summary>
        internal static string WSAENETDOWN {
            get {
                return ResourceManager.GetString("WSAENETDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection has been broken due to keep-alive activity detecting a failure while the operation was in progress..
        /// </summary>
        internal static string WSAENETRESET {
            get {
                return ResourceManager.GetString("WSAENETRESET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A socket operation was attempted to an unreachable network..
        /// </summary>
        internal static string WSAENETUNREACH {
            get {
                return ResourceManager.GetString("WSAENETUNREACH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation on a socket could not be performed because the system lacked sufficient buffer space or because a queue was full..
        /// </summary>
        internal static string WSAENOBUFS {
            get {
                return ResourceManager.GetString("WSAENOBUFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more results can be returned by WSALookupServiceNext..
        /// </summary>
        internal static string WSAENOMORE {
            get {
                return ResourceManager.GetString("WSAENOMORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown, invalid, or unsupported option or level was specified in a getsockopt or setsockopt call..
        /// </summary>
        internal static string WSAENOPROTOOPT {
            get {
                return ResourceManager.GetString("WSAENOPROTOOPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to send or receive data was disallowed because the socket is not connected and (when sending on a datagram socket using a sendto call) no address was supplied..
        /// </summary>
        internal static string WSAENOTCONN {
            get {
                return ResourceManager.GetString("WSAENOTCONN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove a directory that is not empty..
        /// </summary>
        internal static string WSAENOTEMPTY {
            get {
                return ResourceManager.GetString("WSAENOTEMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An operation was attempted on something that is not a socket..
        /// </summary>
        internal static string WSAENOTSOCK {
            get {
                return ResourceManager.GetString("WSAENOTSOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attempted operation is not supported for the type of object referenced..
        /// </summary>
        internal static string WSAEOPNOTSUPP {
            get {
                return ResourceManager.GetString("WSAEOPNOTSUPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The protocol family has not been configured into the system or no implementation for it exists..
        /// </summary>
        internal static string WSAEPFNOSUPPORT {
            get {
                return ResourceManager.GetString("WSAEPFNOSUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Windows Sockets implementation may have a limit on the number of applications that may use it simultaneously..
        /// </summary>
        internal static string WSAEPROCLIM {
            get {
                return ResourceManager.GetString("WSAEPROCLIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested protocol has not been configured into the system, or no implementation for it exists..
        /// </summary>
        internal static string WSAEPROTONOSUPPORT {
            get {
                return ResourceManager.GetString("WSAEPROTONOSUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A protocol was specified in the socket function call that does not support the semantics of the socket type requested..
        /// </summary>
        internal static string WSAEPROTOTYPE {
            get {
                return ResourceManager.GetString("WSAEPROTOTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested service provider could not be loaded or initialized..
        /// </summary>
        internal static string WSAEPROVIDERFAILEDINIT {
            get {
                return ResourceManager.GetString("WSAEPROVIDERFAILEDINIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A database query failed because it was actively refused..
        /// </summary>
        internal static string WSAEREFUSED {
            get {
                return ResourceManager.GetString("WSAEREFUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item is not available locally..
        /// </summary>
        internal static string WSAEREMOTE {
            get {
                return ResourceManager.GetString("WSAEREMOTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A request to send or receive data was disallowed because the socket had already been shut down in that direction with a previous shutdown call..
        /// </summary>
        internal static string WSAESHUTDOWN {
            get {
                return ResourceManager.GetString("WSAESHUTDOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The support for the specified socket type does not exist in this address family..
        /// </summary>
        internal static string WSAESOCKTNOSUPPORT {
            get {
                return ResourceManager.GetString("WSAESOCKTNOSUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File handle reference is no longer available..
        /// </summary>
        internal static string WSAESTALE {
            get {
                return ResourceManager.GetString("WSAESTALE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond..
        /// </summary>
        internal static string WSAETIMEDOUT {
            get {
                return ResourceManager.GetString("WSAETIMEDOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many references to some kernel object..
        /// </summary>
        internal static string WSAETOOMANYREFS {
            get {
                return ResourceManager.GetString("WSAETOOMANYREFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ran out of quota..
        /// </summary>
        internal static string WSAEUSERS {
            get {
                return ResourceManager.GetString("WSAEUSERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A non-blocking socket operation could not be completed immediately..
        /// </summary>
        internal static string WSAEWOULDBLOCK {
            get {
                return ResourceManager.GetString("WSAEWOULDBLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such host is known..
        /// </summary>
        internal static string WSAHOST_NOT_FOUND {
            get {
                return ResourceManager.GetString("WSAHOST_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested name is valid, but no data of the requested type was found..
        /// </summary>
        internal static string WSANO_DATA {
            get {
                return ResourceManager.GetString("WSANO_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A non-recoverable error occurred during a database lookup..
        /// </summary>
        internal static string WSANO_RECOVERY {
            get {
                return ResourceManager.GetString("WSANO_RECOVERY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either the application has not called WSAStartup, or WSAStartup failed..
        /// </summary>
        internal static string WSANOTINITIALISED {
            get {
                return ResourceManager.GetString("WSANOTINITIALISED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such service is known. The service cannot be found in the specified name space..
        /// </summary>
        internal static string WSASERVICE_NOT_FOUND {
            get {
                return ResourceManager.GetString("WSASERVICE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A system call has failed..
        /// </summary>
        internal static string WSASYSCALLFAILURE {
            get {
                return ResourceManager.GetString("WSASYSCALLFAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WSAStartup cannot function at this time because the underlying system it uses to provide network services is currently unavailable..
        /// </summary>
        internal static string WSASYSNOTREADY {
            get {
                return ResourceManager.GetString("WSASYSNOTREADY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is usually a temporary error during hostname resolution and means that the local server did not receive a response from an authoritative server..
        /// </summary>
        internal static string WSATRY_AGAIN {
            get {
                return ResourceManager.GetString("WSATRY_AGAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified class was not found..
        /// </summary>
        internal static string WSATYPE_NOT_FOUND {
            get {
                return ResourceManager.GetString("WSATYPE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Sockets version requested is not supported..
        /// </summary>
        internal static string WSAVERNOTSUPPORTED {
            get {
                return ResourceManager.GetString("WSAVERNOTSUPPORTED", resourceCulture);
            }
        }
    }
}
